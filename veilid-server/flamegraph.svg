<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1414" onload="init(evt)" viewBox="0 0 1200 1414" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1414" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1397.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1397.00"> </text><svg id="frames" x="10" width="1180" total_samples="16699"><g><title>perf-exec (5 samples, 0.03%)</title><rect x="0.0060%" y="1349" width="0.0299%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1359.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="0.0060%" y="1333" width="0.0299%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1343.50"></text></g><g><title>do_syscall_64 (5 samples, 0.03%)</title><rect x="0.0060%" y="1317" width="0.0299%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1327.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.03%)</title><rect x="0.0060%" y="1301" width="0.0299%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1311.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.03%)</title><rect x="0.0060%" y="1285" width="0.0299%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1295.50"></text></g><g><title>bprm_execve (5 samples, 0.03%)</title><rect x="0.0060%" y="1269" width="0.0299%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1279.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.03%)</title><rect x="0.0060%" y="1253" width="0.0299%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1263.50"></text></g><g><title>exec_binprm (5 samples, 0.03%)</title><rect x="0.0060%" y="1237" width="0.0299%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1247.50"></text></g><g><title>search_binary_handler (5 samples, 0.03%)</title><rect x="0.0060%" y="1221" width="0.0299%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1231.50"></text></g><g><title>load_elf_binary (5 samples, 0.03%)</title><rect x="0.0060%" y="1205" width="0.0299%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1215.50"></text></g><g><title>begin_new_exec (5 samples, 0.03%)</title><rect x="0.0060%" y="1189" width="0.0299%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1199.50"></text></g><g><title>perf_event_exec (5 samples, 0.03%)</title><rect x="0.0060%" y="1173" width="0.0299%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1183.50"></text></g><g><title>perf_event_enable_on_exec (5 samples, 0.03%)</title><rect x="0.0060%" y="1157" width="0.0299%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1167.50"></text></g><g><title>ctx_resched (5 samples, 0.03%)</title><rect x="0.0060%" y="1141" width="0.0299%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1151.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.03%)</title><rect x="0.0060%" y="1125" width="0.0299%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1135.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.03%)</title><rect x="0.0060%" y="1109" width="0.0299%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1119.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.03%)</title><rect x="0.0060%" y="1093" width="0.0299%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1103.50"></text></g><g><title>native_write_msr (5 samples, 0.03%)</title><rect x="0.0060%" y="1077" width="0.0299%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="5"/><text x="0.2560%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="0.0539%" y="1333" width="0.0120%" height="15" fill="rgb(221,200,47)" fg:x="9" fg:w="2"/><text x="0.3039%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="0.0838%" y="1333" width="0.0120%" height="15" fill="rgb(226,26,5)" fg:x="14" fg:w="2"/><text x="0.3338%" y="1343.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="0.0958%" y="1333" width="0.0120%" height="15" fill="rgb(249,33,26)" fg:x="16" fg:w="2"/><text x="0.3458%" y="1343.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (2 samples, 0.01%)</title><rect x="0.1198%" y="1333" width="0.0120%" height="15" fill="rgb(235,183,28)" fg:x="20" fg:w="2"/><text x="0.3698%" y="1343.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.01%)</title><rect x="0.2455%" y="1317" width="0.0120%" height="15" fill="rgb(221,5,38)" fg:x="41" fg:w="2"/><text x="0.4955%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.01%)</title><rect x="0.2874%" y="1317" width="0.0120%" height="15" fill="rgb(247,18,42)" fg:x="48" fg:w="2"/><text x="0.5374%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (3 samples, 0.02%)</title><rect x="0.3413%" y="1317" width="0.0180%" height="15" fill="rgb(241,131,45)" fg:x="57" fg:w="3"/><text x="0.5913%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (2 samples, 0.01%)</title><rect x="0.3593%" y="1317" width="0.0120%" height="15" fill="rgb(249,31,29)" fg:x="60" fg:w="2"/><text x="0.6093%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (3 samples, 0.02%)</title><rect x="0.3773%" y="1317" width="0.0180%" height="15" fill="rgb(225,111,53)" fg:x="63" fg:w="3"/><text x="0.6273%" y="1327.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.02%)</title><rect x="0.4312%" y="1317" width="0.0180%" height="15" fill="rgb(238,160,17)" fg:x="72" fg:w="3"/><text x="0.6812%" y="1327.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (2 samples, 0.01%)</title><rect x="0.4551%" y="1317" width="0.0120%" height="15" fill="rgb(214,148,48)" fg:x="76" fg:w="2"/><text x="0.7051%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.02%)</title><rect x="0.4791%" y="1317" width="0.0180%" height="15" fill="rgb(232,36,49)" fg:x="80" fg:w="3"/><text x="0.7291%" y="1327.50"></text></g><g><title>tokio::loom::std::atomic_u32::AtomicU32::unsync_load (2 samples, 0.01%)</title><rect x="0.5090%" y="1317" width="0.0120%" height="15" fill="rgb(209,103,24)" fg:x="85" fg:w="2"/><text x="0.7590%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (2 samples, 0.01%)</title><rect x="0.5449%" y="1317" width="0.0120%" height="15" fill="rgb(229,88,8)" fg:x="91" fg:w="2"/><text x="0.7949%" y="1327.50"></text></g><g><title>[[heap]] (74 samples, 0.44%)</title><rect x="0.1737%" y="1333" width="0.4431%" height="15" fill="rgb(213,181,19)" fg:x="29" fg:w="74"/><text x="0.4237%" y="1343.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (15 samples, 0.09%)</title><rect x="0.6168%" y="1317" width="0.0898%" height="15" fill="rgb(254,191,54)" fg:x="103" fg:w="15"/><text x="0.8668%" y="1327.50"></text></g><g><title>[veilid-server] (2 samples, 0.01%)</title><rect x="0.6947%" y="1301" width="0.0120%" height="15" fill="rgb(241,83,37)" fg:x="116" fg:w="2"/><text x="0.9447%" y="1311.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (2 samples, 0.01%)</title><rect x="0.6947%" y="1285" width="0.0120%" height="15" fill="rgb(233,36,39)" fg:x="116" fg:w="2"/><text x="0.9447%" y="1295.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.02%)</title><rect x="0.7246%" y="1317" width="0.0240%" height="15" fill="rgb(226,3,54)" fg:x="121" fg:w="4"/><text x="0.9746%" y="1327.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (10 samples, 0.06%)</title><rect x="0.7605%" y="1317" width="0.0599%" height="15" fill="rgb(245,192,40)" fg:x="127" fg:w="10"/><text x="1.0105%" y="1327.50"></text></g><g><title>&lt;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (2 samples, 0.01%)</title><rect x="0.8204%" y="1317" width="0.0120%" height="15" fill="rgb(238,167,29)" fg:x="137" fg:w="2"/><text x="1.0704%" y="1327.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.05%)</title><rect x="0.8324%" y="1317" width="0.0479%" height="15" fill="rgb(232,182,51)" fg:x="139" fg:w="8"/><text x="1.0824%" y="1327.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (2 samples, 0.01%)</title><rect x="0.8923%" y="1317" width="0.0120%" height="15" fill="rgb(231,60,39)" fg:x="149" fg:w="2"/><text x="1.1423%" y="1327.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (19 samples, 0.11%)</title><rect x="0.9342%" y="1317" width="0.1138%" height="15" fill="rgb(208,69,12)" fg:x="156" fg:w="19"/><text x="1.1842%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="1.0540%" y="1317" width="0.0180%" height="15" fill="rgb(235,93,37)" fg:x="176" fg:w="3"/><text x="1.3040%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="1.0719%" y="1317" width="0.0120%" height="15" fill="rgb(213,116,39)" fg:x="179" fg:w="2"/><text x="1.3219%" y="1327.50"></text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (4 samples, 0.02%)</title><rect x="1.0839%" y="1317" width="0.0240%" height="15" fill="rgb(222,207,29)" fg:x="181" fg:w="4"/><text x="1.3339%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.03%)</title><rect x="1.1079%" y="1317" width="0.0299%" height="15" fill="rgb(206,96,30)" fg:x="185" fg:w="5"/><text x="1.3579%" y="1327.50"></text></g><g><title>&lt;capnp::Word as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="1.1797%" y="1317" width="0.0180%" height="15" fill="rgb(218,138,4)" fg:x="197" fg:w="3"/><text x="1.4297%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (48 samples, 0.29%)</title><rect x="1.2276%" y="1317" width="0.2874%" height="15" fill="rgb(250,191,14)" fg:x="205" fg:w="48"/><text x="1.4776%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="1.5151%" y="1317" width="0.0120%" height="15" fill="rgb(239,60,40)" fg:x="253" fg:w="2"/><text x="1.7651%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="1.5151%" y="1301" width="0.0120%" height="15" fill="rgb(206,27,48)" fg:x="253" fg:w="2"/><text x="1.7651%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="1.5450%" y="1317" width="0.0180%" height="15" fill="rgb(225,35,8)" fg:x="258" fg:w="3"/><text x="1.7950%" y="1327.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (31 samples, 0.19%)</title><rect x="1.5869%" y="1317" width="0.1856%" height="15" fill="rgb(250,213,24)" fg:x="265" fg:w="31"/><text x="1.8369%" y="1327.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.01%)</title><rect x="1.8085%" y="1317" width="0.0120%" height="15" fill="rgb(247,123,22)" fg:x="302" fg:w="2"/><text x="2.0585%" y="1327.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="1.8205%" y="1317" width="0.0120%" height="15" fill="rgb(231,138,38)" fg:x="304" fg:w="2"/><text x="2.0705%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.06%)</title><rect x="1.8384%" y="1317" width="0.0599%" height="15" fill="rgb(231,145,46)" fg:x="307" fg:w="10"/><text x="2.0884%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.27%)</title><rect x="1.8983%" y="1317" width="0.2695%" height="15" fill="rgb(251,118,11)" fg:x="317" fg:w="45"/><text x="2.1483%" y="1327.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::scalar::Scalar52 as core::ops::index::Index&lt;usize&gt;&gt;::index (2 samples, 0.01%)</title><rect x="2.1678%" y="1317" width="0.0120%" height="15" fill="rgb(217,147,25)" fg:x="362" fg:w="2"/><text x="2.4178%" y="1327.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.02%)</title><rect x="2.2157%" y="1317" width="0.0180%" height="15" fill="rgb(247,81,37)" fg:x="370" fg:w="3"/><text x="2.4657%" y="1327.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (81 samples, 0.49%)</title><rect x="2.2337%" y="1317" width="0.4851%" height="15" fill="rgb(209,12,38)" fg:x="373" fg:w="81"/><text x="2.4837%" y="1327.50"></text></g><g><title>&lt;tokio::loom::std::parking_lot::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.01%)</title><rect x="2.8086%" y="1317" width="0.0120%" height="15" fill="rgb(227,1,9)" fg:x="469" fg:w="2"/><text x="3.0586%" y="1327.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="2.8205%" y="1317" width="0.0120%" height="15" fill="rgb(248,47,43)" fg:x="471" fg:w="2"/><text x="3.0705%" y="1327.50"></text></g><g><title>&lt;u8 as core::default::Default&gt;::default (28 samples, 0.17%)</title><rect x="2.8684%" y="1317" width="0.1677%" height="15" fill="rgb(221,10,30)" fg:x="479" fg:w="28"/><text x="3.1184%" y="1327.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (2 samples, 0.01%)</title><rect x="3.1738%" y="1317" width="0.0120%" height="15" fill="rgb(210,229,1)" fg:x="530" fg:w="2"/><text x="3.4238%" y="1327.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::new_kv (2 samples, 0.01%)</title><rect x="3.1858%" y="1317" width="0.0120%" height="15" fill="rgb(222,148,37)" fg:x="532" fg:w="2"/><text x="3.4358%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.03%)</title><rect x="3.2876%" y="1317" width="0.0299%" height="15" fill="rgb(234,67,33)" fg:x="549" fg:w="5"/><text x="3.5376%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.01%)</title><rect x="3.3236%" y="1317" width="0.0120%" height="15" fill="rgb(247,98,35)" fg:x="555" fg:w="2"/><text x="3.5736%" y="1327.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::as_ptr (2 samples, 0.01%)</title><rect x="3.3475%" y="1317" width="0.0120%" height="15" fill="rgb(247,138,52)" fg:x="559" fg:w="2"/><text x="3.5975%" y="1327.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (4 samples, 0.02%)</title><rect x="3.3655%" y="1317" width="0.0240%" height="15" fill="rgb(213,79,30)" fg:x="562" fg:w="4"/><text x="3.6155%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (28 samples, 0.17%)</title><rect x="3.3894%" y="1317" width="0.1677%" height="15" fill="rgb(246,177,23)" fg:x="566" fg:w="28"/><text x="3.6394%" y="1327.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.06%)</title><rect x="3.4972%" y="1301" width="0.0599%" height="15" fill="rgb(230,62,27)" fg:x="584" fg:w="10"/><text x="3.7472%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.07%)</title><rect x="3.5631%" y="1317" width="0.0719%" height="15" fill="rgb(216,154,8)" fg:x="595" fg:w="12"/><text x="3.8131%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.08%)</title><rect x="3.6409%" y="1317" width="0.0778%" height="15" fill="rgb(244,35,45)" fg:x="608" fg:w="13"/><text x="3.8909%" y="1327.50"></text></g><g><title>blake3_hash_many_avx2 (16 samples, 0.10%)</title><rect x="3.7427%" y="1317" width="0.0958%" height="15" fill="rgb(251,115,12)" fg:x="625" fg:w="16"/><text x="3.9927%" y="1327.50"></text></g><g><title>chacha20::backend::avx2::StateWord::add_epi32 (4 samples, 0.02%)</title><rect x="3.8685%" y="1317" width="0.0240%" height="15" fill="rgb(240,54,50)" fg:x="646" fg:w="4"/><text x="4.1185%" y="1327.50"></text></g><g><title>chacha20::backend::avx2::StateWord::shuffle_epi32 (2 samples, 0.01%)</title><rect x="3.8984%" y="1317" width="0.0120%" height="15" fill="rgb(233,84,52)" fg:x="651" fg:w="2"/><text x="4.1484%" y="1327.50"></text></g><g><title>chacha20::xchacha::hchacha (4 samples, 0.02%)</title><rect x="3.9164%" y="1317" width="0.0240%" height="15" fill="rgb(207,117,47)" fg:x="654" fg:w="4"/><text x="4.1664%" y="1327.50"></text></g><g><title>core::alloc::layout::size_align (4 samples, 0.02%)</title><rect x="3.9404%" y="1317" width="0.0240%" height="15" fill="rgb(249,43,39)" fg:x="658" fg:w="4"/><text x="4.1904%" y="1327.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.01%)</title><rect x="3.9883%" y="1317" width="0.0120%" height="15" fill="rgb(209,38,44)" fg:x="666" fg:w="2"/><text x="4.2383%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (3 samples, 0.02%)</title><rect x="4.0062%" y="1317" width="0.0180%" height="15" fill="rgb(236,212,23)" fg:x="669" fg:w="3"/><text x="4.2562%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.01%)</title><rect x="4.0242%" y="1317" width="0.0120%" height="15" fill="rgb(242,79,21)" fg:x="672" fg:w="2"/><text x="4.2742%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.01%)</title><rect x="4.0422%" y="1317" width="0.0120%" height="15" fill="rgb(211,96,35)" fg:x="675" fg:w="2"/><text x="4.2922%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.01%)</title><rect x="4.0541%" y="1317" width="0.0120%" height="15" fill="rgb(253,215,40)" fg:x="677" fg:w="2"/><text x="4.3041%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (5 samples, 0.03%)</title><rect x="4.0661%" y="1317" width="0.0299%" height="15" fill="rgb(211,81,21)" fg:x="679" fg:w="5"/><text x="4.3161%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.01%)</title><rect x="4.0961%" y="1317" width="0.0120%" height="15" fill="rgb(208,190,38)" fg:x="684" fg:w="2"/><text x="4.3461%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (7 samples, 0.04%)</title><rect x="4.1080%" y="1317" width="0.0419%" height="15" fill="rgb(235,213,38)" fg:x="686" fg:w="7"/><text x="4.3580%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.02%)</title><rect x="4.1499%" y="1317" width="0.0240%" height="15" fill="rgb(237,122,38)" fg:x="693" fg:w="4"/><text x="4.3999%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (2 samples, 0.01%)</title><rect x="4.1739%" y="1317" width="0.0120%" height="15" fill="rgb(244,218,35)" fg:x="697" fg:w="2"/><text x="4.4239%" y="1327.50"></text></g><g><title>core::fmt::Formatter::debug_lower_hex (2 samples, 0.01%)</title><rect x="4.1859%" y="1317" width="0.0120%" height="15" fill="rgb(240,68,47)" fg:x="699" fg:w="2"/><text x="4.4359%" y="1327.50"></text></g><g><title>core::fmt::Formatter::pad_integral (17 samples, 0.10%)</title><rect x="4.2038%" y="1317" width="0.1018%" height="15" fill="rgb(210,16,53)" fg:x="702" fg:w="17"/><text x="4.4538%" y="1327.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (16 samples, 0.10%)</title><rect x="4.3056%" y="1317" width="0.0958%" height="15" fill="rgb(235,124,12)" fg:x="719" fg:w="16"/><text x="4.5556%" y="1327.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (9 samples, 0.05%)</title><rect x="4.3476%" y="1301" width="0.0539%" height="15" fill="rgb(224,169,11)" fg:x="726" fg:w="9"/><text x="4.5976%" y="1311.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (9 samples, 0.05%)</title><rect x="4.3476%" y="1285" width="0.0539%" height="15" fill="rgb(250,166,2)" fg:x="726" fg:w="9"/><text x="4.5976%" y="1295.50"></text></g><g><title>core::fmt::Formatter::write_str (5 samples, 0.03%)</title><rect x="4.3715%" y="1269" width="0.0299%" height="15" fill="rgb(242,216,29)" fg:x="730" fg:w="5"/><text x="4.6215%" y="1279.50"></text></g><g><title>core::fmt::builders::DebugList::entries (9 samples, 0.05%)</title><rect x="4.4015%" y="1317" width="0.0539%" height="15" fill="rgb(230,116,27)" fg:x="735" fg:w="9"/><text x="4.6515%" y="1327.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (4 samples, 0.02%)</title><rect x="4.4554%" y="1317" width="0.0240%" height="15" fill="rgb(228,99,48)" fg:x="744" fg:w="4"/><text x="4.7054%" y="1327.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u8&gt;::fmt (16 samples, 0.10%)</title><rect x="4.4853%" y="1317" width="0.0958%" height="15" fill="rgb(253,11,6)" fg:x="749" fg:w="16"/><text x="4.7353%" y="1327.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (8 samples, 0.05%)</title><rect x="4.5811%" y="1317" width="0.0479%" height="15" fill="rgb(247,143,39)" fg:x="765" fg:w="8"/><text x="4.8311%" y="1327.50"></text></g><g><title>core::future::identity_future (3 samples, 0.02%)</title><rect x="4.6290%" y="1317" width="0.0180%" height="15" fill="rgb(236,97,10)" fg:x="773" fg:w="3"/><text x="4.8790%" y="1327.50"></text></g><g><title>core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (2 samples, 0.01%)</title><rect x="4.6530%" y="1317" width="0.0120%" height="15" fill="rgb(233,208,19)" fg:x="777" fg:w="2"/><text x="4.9030%" y="1327.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (4 samples, 0.02%)</title><rect x="4.6889%" y="1317" width="0.0240%" height="15" fill="rgb(216,164,2)" fg:x="783" fg:w="4"/><text x="4.9389%" y="1327.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (13 samples, 0.08%)</title><rect x="4.7188%" y="1317" width="0.0778%" height="15" fill="rgb(220,129,5)" fg:x="788" fg:w="13"/><text x="4.9688%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (6 samples, 0.04%)</title><rect x="4.8027%" y="1317" width="0.0359%" height="15" fill="rgb(242,17,10)" fg:x="802" fg:w="6"/><text x="5.0527%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (52 samples, 0.31%)</title><rect x="4.8446%" y="1317" width="0.3114%" height="15" fill="rgb(242,107,0)" fg:x="809" fg:w="52"/><text x="5.0946%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (72 samples, 0.43%)</title><rect x="5.1560%" y="1317" width="0.4312%" height="15" fill="rgb(251,28,31)" fg:x="861" fg:w="72"/><text x="5.4060%" y="1327.50"></text></g><g><title>core::mem::forget (2 samples, 0.01%)</title><rect x="5.5931%" y="1317" width="0.0120%" height="15" fill="rgb(233,223,10)" fg:x="934" fg:w="2"/><text x="5.8431%" y="1327.50"></text></g><g><title>core::mem::replace (59 samples, 0.35%)</title><rect x="5.6051%" y="1317" width="0.3533%" height="15" fill="rgb(215,21,27)" fg:x="936" fg:w="59"/><text x="5.8551%" y="1327.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.01%)</title><rect x="5.9704%" y="1317" width="0.0120%" height="15" fill="rgb(232,23,21)" fg:x="997" fg:w="2"/><text x="6.2204%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="6.0123%" y="1317" width="0.0120%" height="15" fill="rgb(244,5,23)" fg:x="1004" fg:w="2"/><text x="6.2623%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.01%)</title><rect x="6.0243%" y="1317" width="0.0120%" height="15" fill="rgb(226,81,46)" fg:x="1006" fg:w="2"/><text x="6.2743%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.02%)</title><rect x="6.0363%" y="1317" width="0.0180%" height="15" fill="rgb(247,70,30)" fg:x="1008" fg:w="3"/><text x="6.2863%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;tokio::runtime::io::scheduled_io::Waiter&gt;&gt; (2 samples, 0.01%)</title><rect x="6.1620%" y="1317" width="0.0120%" height="15" fill="rgb(212,68,19)" fg:x="1029" fg:w="2"/><text x="6.4120%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::park::Parker&gt;&gt; (2 samples, 0.01%)</title><rect x="6.1920%" y="1317" width="0.0120%" height="15" fill="rgb(240,187,13)" fg:x="1034" fg:w="2"/><text x="6.4420%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::poll::Poll&lt;tokio::runtime::coop::RestoreOnPending&gt;&gt; (2 samples, 0.01%)</title><rect x="6.2100%" y="1317" width="0.0120%" height="15" fill="rgb(223,113,26)" fg:x="1037" fg:w="2"/><text x="6.4600%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;data_encoding::Encoding&gt; (2 samples, 0.01%)</title><rect x="6.2219%" y="1317" width="0.0120%" height="15" fill="rgb(206,192,2)" fg:x="1039" fg:w="2"/><text x="6.4719%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (2 samples, 0.01%)</title><rect x="6.2938%" y="1317" width="0.0120%" height="15" fill="rgb(241,108,4)" fg:x="1051" fg:w="2"/><text x="6.5438%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::registration::Registration::async_io&lt;(usize,core::net::socket_addr::SocketAddr),tokio::net::udp::UdpSocket::recv_from::{{closure}}::{{closure}}&gt;::{{closure}}&gt; (2 samples, 0.01%)</title><rect x="6.3237%" y="1317" width="0.0120%" height="15" fill="rgb(247,173,49)" fg:x="1056" fg:w="2"/><text x="6.5737%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (2 samples, 0.01%)</title><rect x="6.3417%" y="1317" width="0.0120%" height="15" fill="rgb(224,114,35)" fg:x="1059" fg:w="2"/><text x="6.5917%" y="1327.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="6.3836%" y="1317" width="0.0180%" height="15" fill="rgb(245,159,27)" fg:x="1066" fg:w="3"/><text x="6.6336%" y="1327.50"></text></g><g><title>core::ptr::write (46 samples, 0.28%)</title><rect x="6.4016%" y="1317" width="0.2755%" height="15" fill="rgb(245,172,44)" fg:x="1069" fg:w="46"/><text x="6.6516%" y="1327.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.01%)</title><rect x="6.6770%" y="1317" width="0.0120%" height="15" fill="rgb(236,23,11)" fg:x="1115" fg:w="2"/><text x="6.9270%" y="1327.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (5 samples, 0.03%)</title><rect x="6.6890%" y="1317" width="0.0299%" height="15" fill="rgb(205,117,38)" fg:x="1117" fg:w="5"/><text x="6.9390%" y="1327.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (4 samples, 0.02%)</title><rect x="6.7669%" y="1317" width="0.0240%" height="15" fill="rgb(237,72,25)" fg:x="1130" fg:w="4"/><text x="7.0169%" y="1327.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (8 samples, 0.05%)</title><rect x="6.7908%" y="1317" width="0.0479%" height="15" fill="rgb(244,70,9)" fg:x="1134" fg:w="8"/><text x="7.0408%" y="1327.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.01%)</title><rect x="6.8387%" y="1317" width="0.0120%" height="15" fill="rgb(217,125,39)" fg:x="1142" fg:w="2"/><text x="7.0887%" y="1327.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.01%)</title><rect x="6.8507%" y="1317" width="0.0120%" height="15" fill="rgb(235,36,10)" fg:x="1144" fg:w="2"/><text x="7.1007%" y="1327.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (6 samples, 0.04%)</title><rect x="6.8627%" y="1317" width="0.0359%" height="15" fill="rgb(251,123,47)" fg:x="1146" fg:w="6"/><text x="7.1127%" y="1327.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="6.8986%" y="1317" width="0.0180%" height="15" fill="rgb(221,13,13)" fg:x="1152" fg:w="3"/><text x="7.1486%" y="1327.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (9 samples, 0.05%)</title><rect x="6.9166%" y="1317" width="0.0539%" height="15" fill="rgb(238,131,9)" fg:x="1155" fg:w="9"/><text x="7.1666%" y="1327.50"></text></g><g><title>core::slice::raw::from_raw_parts (45 samples, 0.27%)</title><rect x="6.9705%" y="1317" width="0.2695%" height="15" fill="rgb(211,50,8)" fg:x="1164" fg:w="45"/><text x="7.2205%" y="1327.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (42 samples, 0.25%)</title><rect x="7.2400%" y="1317" width="0.2515%" height="15" fill="rgb(245,182,24)" fg:x="1209" fg:w="42"/><text x="7.4900%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (4 samples, 0.02%)</title><rect x="7.5094%" y="1317" width="0.0240%" height="15" fill="rgb(242,14,37)" fg:x="1254" fg:w="4"/><text x="7.7594%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (3 samples, 0.02%)</title><rect x="7.5454%" y="1317" width="0.0180%" height="15" fill="rgb(246,228,12)" fg:x="1260" fg:w="3"/><text x="7.7954%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.01%)</title><rect x="7.5753%" y="1317" width="0.0120%" height="15" fill="rgb(213,55,15)" fg:x="1265" fg:w="2"/><text x="7.8253%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.02%)</title><rect x="7.5873%" y="1317" width="0.0240%" height="15" fill="rgb(209,9,3)" fg:x="1267" fg:w="4"/><text x="7.8373%" y="1327.50"></text></g><g><title>data_encoding::dec (6 samples, 0.04%)</title><rect x="7.6591%" y="1317" width="0.0359%" height="15" fill="rgb(230,59,30)" fg:x="1279" fg:w="6"/><text x="7.9091%" y="1327.50"></text></g><g><title>data_encoding::decode_block (2 samples, 0.01%)</title><rect x="7.6951%" y="1317" width="0.0120%" height="15" fill="rgb(209,121,21)" fg:x="1285" fg:w="2"/><text x="7.9451%" y="1327.50"></text></g><g><title>data_encoding::decode_mut (4 samples, 0.02%)</title><rect x="7.7070%" y="1317" width="0.0240%" height="15" fill="rgb(220,109,13)" fg:x="1287" fg:w="4"/><text x="7.9570%" y="1327.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::pending_next_all (2 samples, 0.01%)</title><rect x="7.8089%" y="1317" width="0.0120%" height="15" fill="rgb(232,18,1)" fg:x="1304" fg:w="2"/><text x="8.0589%" y="1327.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (5 samples, 0.03%)</title><rect x="7.8508%" y="1317" width="0.0299%" height="15" fill="rgb(215,41,42)" fg:x="1311" fg:w="5"/><text x="8.1008%" y="1327.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (55 samples, 0.33%)</title><rect x="7.8807%" y="1317" width="0.3294%" height="15" fill="rgb(224,123,36)" fg:x="1316" fg:w="55"/><text x="8.1307%" y="1327.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="8.2161%" y="1317" width="0.0120%" height="15" fill="rgb(240,125,3)" fg:x="1372" fg:w="2"/><text x="8.4661%" y="1327.50"></text></g><g><title>hashlink::linked_hash_map::RawOccupiedEntryMut&lt;K,V&gt;::to_back (3 samples, 0.02%)</title><rect x="8.2340%" y="1317" width="0.0180%" height="15" fill="rgb(205,98,50)" fg:x="1375" fg:w="3"/><text x="8.4840%" y="1327.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.01%)</title><rect x="8.2700%" y="1317" width="0.0120%" height="15" fill="rgb(205,185,37)" fg:x="1381" fg:w="2"/><text x="8.5200%" y="1327.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (2 samples, 0.01%)</title><rect x="8.3119%" y="1317" width="0.0120%" height="15" fill="rgb(238,207,15)" fg:x="1388" fg:w="2"/><text x="8.5619%" y="1327.50"></text></g><g><title>poly1305::backend::autodetect::State::compute_block (2 samples, 0.01%)</title><rect x="8.3298%" y="1317" width="0.0120%" height="15" fill="rgb(213,199,42)" fg:x="1391" fg:w="2"/><text x="8.5798%" y="1327.50"></text></g><g><title>serde::de::MapAccess::next_value (2 samples, 0.01%)</title><rect x="8.3658%" y="1317" width="0.0120%" height="15" fill="rgb(235,201,11)" fg:x="1397" fg:w="2"/><text x="8.6158%" y="1327.50"></text></g><g><title>std::sync::poison::map_result (2 samples, 0.01%)</title><rect x="8.4077%" y="1317" width="0.0120%" height="15" fill="rgb(207,46,11)" fg:x="1404" fg:w="2"/><text x="8.6577%" y="1327.50"></text></g><g><title>subtle::Choice::unwrap_u8 (2 samples, 0.01%)</title><rect x="8.4376%" y="1317" width="0.0120%" height="15" fill="rgb(241,35,35)" fg:x="1409" fg:w="2"/><text x="8.6876%" y="1327.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.01%)</title><rect x="8.4676%" y="1317" width="0.0120%" height="15" fill="rgb(243,32,47)" fg:x="1414" fg:w="2"/><text x="8.7176%" y="1327.50"></text></g><g><title>tokio::runtime::task::state::State::load (3 samples, 0.02%)</title><rect x="8.5454%" y="1317" width="0.0180%" height="15" fill="rgb(247,202,23)" fg:x="1427" fg:w="3"/><text x="8.7954%" y="1327.50"></text></g><g><title>[anon] (1,350 samples, 8.08%)</title><rect x="0.6168%" y="1333" width="8.0843%" height="15" fill="rgb(219,102,11)" fg:x="103" fg:w="1350"/><text x="0.8668%" y="1343.50">[anon]</text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (2 samples, 0.01%)</title><rect x="8.7011%" y="1317" width="0.0120%" height="15" fill="rgb(243,110,44)" fg:x="1453" fg:w="2"/><text x="8.9511%" y="1327.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.01%)</title><rect x="8.7131%" y="1317" width="0.0120%" height="15" fill="rgb(222,74,54)" fg:x="1455" fg:w="2"/><text x="8.9631%" y="1327.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.02%)</title><rect x="8.7371%" y="1317" width="0.0240%" height="15" fill="rgb(216,99,12)" fg:x="1459" fg:w="4"/><text x="8.9871%" y="1327.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.01%)</title><rect x="8.9047%" y="949" width="0.0120%" height="15" fill="rgb(226,22,26)" fg:x="1487" fg:w="2"/><text x="9.1547%" y="959.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="8.9047%" y="933" width="0.0120%" height="15" fill="rgb(217,163,10)" fg:x="1487" fg:w="2"/><text x="9.1547%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.02%)</title><rect x="8.9167%" y="949" width="0.0180%" height="15" fill="rgb(213,25,53)" fg:x="1489" fg:w="3"/><text x="9.1667%" y="959.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (7 samples, 0.04%)</title><rect x="9.0005%" y="917" width="0.0419%" height="15" fill="rgb(252,105,26)" fg:x="1503" fg:w="7"/><text x="9.2505%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (7 samples, 0.04%)</title><rect x="9.0005%" y="901" width="0.0419%" height="15" fill="rgb(220,39,43)" fg:x="1503" fg:w="7"/><text x="9.2505%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.02%)</title><rect x="9.0484%" y="917" width="0.0180%" height="15" fill="rgb(229,68,48)" fg:x="1511" fg:w="3"/><text x="9.2984%" y="927.50"></text></g><g><title>core::mem::replace (3 samples, 0.02%)</title><rect x="9.0964%" y="901" width="0.0180%" height="15" fill="rgb(252,8,32)" fg:x="1519" fg:w="3"/><text x="9.3464%" y="911.50"></text></g><g><title>core::ptr::read (15 samples, 0.09%)</title><rect x="9.1143%" y="901" width="0.0898%" height="15" fill="rgb(223,20,43)" fg:x="1522" fg:w="15"/><text x="9.3643%" y="911.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (4 samples, 0.02%)</title><rect x="9.1802%" y="885" width="0.0240%" height="15" fill="rgb(229,81,49)" fg:x="1533" fg:w="4"/><text x="9.4302%" y="895.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (3 samples, 0.02%)</title><rect x="9.1862%" y="869" width="0.0180%" height="15" fill="rgb(236,28,36)" fg:x="1534" fg:w="3"/><text x="9.4362%" y="879.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (47 samples, 0.28%)</title><rect x="8.9347%" y="949" width="0.2815%" height="15" fill="rgb(249,185,26)" fg:x="1492" fg:w="47"/><text x="9.1847%" y="959.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (44 samples, 0.26%)</title><rect x="8.9526%" y="933" width="0.2635%" height="15" fill="rgb(249,174,33)" fg:x="1495" fg:w="44"/><text x="9.2026%" y="943.50"></text></g><g><title>core::mem::replace (25 samples, 0.15%)</title><rect x="9.0664%" y="917" width="0.1497%" height="15" fill="rgb(233,201,37)" fg:x="1514" fg:w="25"/><text x="9.3164%" y="927.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="9.2041%" y="901" width="0.0120%" height="15" fill="rgb(221,78,26)" fg:x="1537" fg:w="2"/><text x="9.4541%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.02%)</title><rect x="9.2161%" y="949" width="0.0240%" height="15" fill="rgb(250,127,30)" fg:x="1539" fg:w="4"/><text x="9.4661%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.01%)</title><rect x="9.4317%" y="933" width="0.0120%" height="15" fill="rgb(230,49,44)" fg:x="1575" fg:w="2"/><text x="9.6817%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="9.4317%" y="917" width="0.0120%" height="15" fill="rgb(229,67,23)" fg:x="1575" fg:w="2"/><text x="9.6817%" y="927.50"></text></g><g><title>data_encoding::chunk_mut_unchecked (39 samples, 0.23%)</title><rect x="9.2461%" y="949" width="0.2335%" height="15" fill="rgb(249,83,47)" fg:x="1544" fg:w="39"/><text x="9.4961%" y="959.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (6 samples, 0.04%)</title><rect x="9.4437%" y="933" width="0.0359%" height="15" fill="rgb(215,43,3)" fg:x="1577" fg:w="6"/><text x="9.6937%" y="943.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (6 samples, 0.04%)</title><rect x="9.4437%" y="917" width="0.0359%" height="15" fill="rgb(238,154,13)" fg:x="1577" fg:w="6"/><text x="9.6937%" y="927.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (6 samples, 0.04%)</title><rect x="9.4437%" y="901" width="0.0359%" height="15" fill="rgb(219,56,2)" fg:x="1577" fg:w="6"/><text x="9.6937%" y="911.50"></text></g><g><title>data_encoding::chunk_unchecked (43 samples, 0.26%)</title><rect x="9.4796%" y="949" width="0.2575%" height="15" fill="rgb(233,0,4)" fg:x="1583" fg:w="43"/><text x="9.7296%" y="959.50"></text></g><g><title>core::slice::raw::from_raw_parts (6 samples, 0.04%)</title><rect x="9.7012%" y="933" width="0.0359%" height="15" fill="rgb(235,30,7)" fg:x="1620" fg:w="6"/><text x="9.9512%" y="943.50"></text></g><g><title>core::ptr::slice_from_raw_parts (5 samples, 0.03%)</title><rect x="9.7072%" y="917" width="0.0299%" height="15" fill="rgb(250,79,13)" fg:x="1621" fg:w="5"/><text x="9.9572%" y="927.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (5 samples, 0.03%)</title><rect x="9.7072%" y="901" width="0.0299%" height="15" fill="rgb(211,146,34)" fg:x="1621" fg:w="5"/><text x="9.9572%" y="911.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.03%)</title><rect x="12.0786%" y="933" width="0.0299%" height="15" fill="rgb(228,22,38)" fg:x="2017" fg:w="5"/><text x="12.3286%" y="943.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (10 samples, 0.06%)</title><rect x="12.5756%" y="901" width="0.0599%" height="15" fill="rgb(235,168,5)" fg:x="2100" fg:w="10"/><text x="12.8256%" y="911.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (6 samples, 0.04%)</title><rect x="12.5996%" y="885" width="0.0359%" height="15" fill="rgb(221,155,16)" fg:x="2104" fg:w="6"/><text x="12.8496%" y="895.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (3 samples, 0.02%)</title><rect x="12.6355%" y="901" width="0.0180%" height="15" fill="rgb(215,215,53)" fg:x="2110" fg:w="3"/><text x="12.8855%" y="911.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (100 samples, 0.60%)</title><rect x="12.1205%" y="933" width="0.5988%" height="15" fill="rgb(223,4,10)" fg:x="2024" fg:w="100"/><text x="12.3705%" y="943.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (92 samples, 0.55%)</title><rect x="12.1684%" y="917" width="0.5509%" height="15" fill="rgb(234,103,6)" fg:x="2032" fg:w="92"/><text x="12.4184%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (11 samples, 0.07%)</title><rect x="12.6535%" y="901" width="0.0659%" height="15" fill="rgb(227,97,0)" fg:x="2113" fg:w="11"/><text x="12.9035%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (7 samples, 0.04%)</title><rect x="12.7193%" y="933" width="0.0419%" height="15" fill="rgb(234,150,53)" fg:x="2124" fg:w="7"/><text x="12.9693%" y="943.50"></text></g><g><title>core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (3 samples, 0.02%)</title><rect x="12.7433%" y="917" width="0.0180%" height="15" fill="rgb(228,201,54)" fg:x="2128" fg:w="3"/><text x="12.9933%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (3 samples, 0.02%)</title><rect x="12.7612%" y="933" width="0.0180%" height="15" fill="rgb(222,22,37)" fg:x="2131" fg:w="3"/><text x="13.0112%" y="943.50"></text></g><g><title>data_encoding::dec (136 samples, 0.81%)</title><rect x="12.7792%" y="933" width="0.8144%" height="15" fill="rgb(237,53,32)" fg:x="2134" fg:w="136"/><text x="13.0292%" y="943.50"></text></g><g><title>data_encoding::enc (41 samples, 0.25%)</title><rect x="13.3481%" y="917" width="0.2455%" height="15" fill="rgb(233,25,53)" fg:x="2229" fg:w="41"/><text x="13.5981%" y="927.50"></text></g><g><title>data_encoding::enc (46 samples, 0.28%)</title><rect x="13.5936%" y="933" width="0.2755%" height="15" fill="rgb(210,40,34)" fg:x="2270" fg:w="46"/><text x="13.8436%" y="943.50"></text></g><g><title>data_encoding::encode_len (58 samples, 0.35%)</title><rect x="13.8691%" y="933" width="0.3473%" height="15" fill="rgb(241,220,44)" fg:x="2316" fg:w="58"/><text x="14.1191%" y="943.50"></text></g><g><title>data_encoding::div_ceil (53 samples, 0.32%)</title><rect x="13.8990%" y="917" width="0.3174%" height="15" fill="rgb(235,28,35)" fg:x="2321" fg:w="53"/><text x="14.1490%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1317" width="6.0243%" height="15" fill="rgb(210,56,17)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1327.50">&lt;&amp;mut se..</text></g><g><title>&lt;veilid_core::veilid_api::json_api::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::Request&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1301" width="6.0243%" height="15" fill="rgb(224,130,29)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1311.50">&lt;veilid_..</text></g><g><title>veilid_core::veilid_api::json_api::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::RequestOp&gt;::deserialize (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1285" width="6.0243%" height="15" fill="rgb(235,212,8)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1295.50">veilid_c..</text></g><g><title>veilid_core::veilid_api::json_api::routing_context::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::routing_context::RoutingContextRequest&gt;::deserialize (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1269" width="6.0243%" height="15" fill="rgb(223,33,50)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1279.50">veilid_c..</text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1253" width="6.0243%" height="15" fill="rgb(219,149,13)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1263.50">&lt;serde::..</text></g><g><title>serde::__private::de::content::visit_content_map (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1237" width="6.0243%" height="15" fill="rgb(250,156,29)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1247.50">serde::_..</text></g><g><title>&lt;veilid_core::veilid_api::json_api::routing_context::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::routing_context::RoutingContextRequest&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1221" width="6.0243%" height="15" fill="rgb(216,193,19)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1231.50">&lt;veilid_..</text></g><g><title>veilid_core::veilid_api::json_api::routing_context::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::routing_context::RoutingContextRequestOp&gt;::deserialize (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1205" width="6.0243%" height="15" fill="rgb(216,135,14)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1215.50">veilid_c..</text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1189" width="6.0243%" height="15" fill="rgb(241,47,5)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1199.50">&lt;serde::..</text></g><g><title>serde::__private::de::content::visit_content_map (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1173" width="6.0243%" height="15" fill="rgb(233,42,35)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1183.50">serde::_..</text></g><g><title>&lt;veilid_core::veilid_api::json_api::routing_context::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::routing_context::RoutingContextRequestOp&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1157" width="6.0243%" height="15" fill="rgb(231,13,6)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1167.50">&lt;veilid_..</text></g><g><title>&lt;&amp;mut A as serde::de::MapAccess&gt;::next_value (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1141" width="6.0243%" height="15" fill="rgb(207,181,40)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1151.50">&lt;&amp;mut A ..</text></g><g><title>serde::de::MapAccess::next_value (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1125" width="6.0243%" height="15" fill="rgb(254,173,49)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1135.50">serde::d..</text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_value_seed (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1109" width="6.0243%" height="15" fill="rgb(221,1,38)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1119.50">&lt;serde::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1093" width="6.0243%" height="15" fill="rgb(206,124,46)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1103.50">&lt;core::m..</text></g><g><title>&lt;&lt;veilid_core::veilid_api::json_api::routing_context::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::routing_context::RoutingContextRequestOp&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map::__DeserializeWith as serde::de::Deserialize&gt;::deserialize (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1077" width="6.0243%" height="15" fill="rgb(249,21,11)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1087.50">&lt;&lt;veilid..</text></g><g><title>veilid_core::veilid_api::serialize_helpers::serialize_json::json_as_base64::deserialize (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1061" width="6.0243%" height="15" fill="rgb(222,201,40)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1071.50">veilid_c..</text></g><g><title>data_encoding::Encoding::decode (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1045" width="6.0243%" height="15" fill="rgb(235,61,29)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1055.50">data_enc..</text></g><g><title>data_encoding::Encoding::decode_mut (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1029" width="6.0243%" height="15" fill="rgb(219,207,3)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1039.50">data_enc..</text></g><g><title>data_encoding::decode_wrap_mut (1,006 samples, 6.02%)</title><rect x="8.7610%" y="1013" width="6.0243%" height="15" fill="rgb(222,56,46)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1023.50">data_enc..</text></g><g><title>data_encoding::decode_pad_mut (1,006 samples, 6.02%)</title><rect x="8.7610%" y="997" width="6.0243%" height="15" fill="rgb(239,76,54)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="1007.50">data_enc..</text></g><g><title>data_encoding::decode_base_mut (1,006 samples, 6.02%)</title><rect x="8.7610%" y="981" width="6.0243%" height="15" fill="rgb(231,124,27)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="991.50">data_enc..</text></g><g><title>data_encoding::decode_mut (1,006 samples, 6.02%)</title><rect x="8.7610%" y="965" width="6.0243%" height="15" fill="rgb(249,195,6)" fg:x="1463" fg:w="1006"/><text x="9.0110%" y="975.50">data_enc..</text></g><g><title>data_encoding::decode_block (843 samples, 5.05%)</title><rect x="9.7371%" y="949" width="5.0482%" height="15" fill="rgb(237,174,47)" fg:x="1626" fg:w="843"/><text x="9.9871%" y="959.50">data_e..</text></g><g><title>data_encoding::order (95 samples, 0.57%)</title><rect x="14.2164%" y="933" width="0.5689%" height="15" fill="rgb(206,201,31)" fg:x="2374" fg:w="95"/><text x="14.4664%" y="943.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (23 samples, 0.14%)</title><rect x="14.7853%" y="1317" width="0.1377%" height="15" fill="rgb(231,57,52)" fg:x="2469" fg:w="23"/><text x="15.0353%" y="1327.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (3 samples, 0.02%)</title><rect x="14.9350%" y="1317" width="0.0180%" height="15" fill="rgb(248,177,22)" fg:x="2494" fg:w="3"/><text x="15.1850%" y="1327.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.04%)</title><rect x="14.9829%" y="1317" width="0.0419%" height="15" fill="rgb(215,211,37)" fg:x="2502" fg:w="7"/><text x="15.2329%" y="1327.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.04%)</title><rect x="14.9829%" y="1301" width="0.0419%" height="15" fill="rgb(241,128,51)" fg:x="2502" fg:w="7"/><text x="15.2329%" y="1311.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="15.0249%" y="1317" width="0.0120%" height="15" fill="rgb(227,165,31)" fg:x="2509" fg:w="2"/><text x="15.2749%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="15.0368%" y="1317" width="0.0180%" height="15" fill="rgb(228,167,24)" fg:x="2511" fg:w="3"/><text x="15.2868%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.05%)</title><rect x="15.0548%" y="1317" width="0.0479%" height="15" fill="rgb(228,143,12)" fg:x="2514" fg:w="8"/><text x="15.3048%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="15.1027%" y="1317" width="0.0120%" height="15" fill="rgb(249,149,8)" fg:x="2522" fg:w="2"/><text x="15.3527%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.01%)</title><rect x="15.1147%" y="1317" width="0.0120%" height="15" fill="rgb(243,35,44)" fg:x="2524" fg:w="2"/><text x="15.3647%" y="1327.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="15.1267%" y="1317" width="0.0120%" height="15" fill="rgb(246,89,9)" fg:x="2526" fg:w="2"/><text x="15.3767%" y="1327.50"></text></g><g><title>&lt;chacha20::chacha::ChaCha&lt;R,MC&gt; as cipher::stream::StreamCipherSeek&gt;::try_seek (2 samples, 0.01%)</title><rect x="15.1446%" y="1317" width="0.0120%" height="15" fill="rgb(233,213,13)" fg:x="2529" fg:w="2"/><text x="15.3946%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (7 samples, 0.04%)</title><rect x="15.2105%" y="1205" width="0.0419%" height="15" fill="rgb(233,141,41)" fg:x="2540" fg:w="7"/><text x="15.4605%" y="1215.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (7 samples, 0.04%)</title><rect x="15.2105%" y="1189" width="0.0419%" height="15" fill="rgb(239,167,4)" fg:x="2540" fg:w="7"/><text x="15.4605%" y="1199.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (6 samples, 0.04%)</title><rect x="15.2165%" y="1173" width="0.0359%" height="15" fill="rgb(209,217,16)" fg:x="2541" fg:w="6"/><text x="15.4665%" y="1183.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (6 samples, 0.04%)</title><rect x="15.2165%" y="1157" width="0.0359%" height="15" fill="rgb(219,88,35)" fg:x="2541" fg:w="6"/><text x="15.4665%" y="1167.50"></text></g><g><title>core::core_arch::simd::i8x32::new (2 samples, 0.01%)</title><rect x="15.2404%" y="1141" width="0.0120%" height="15" fill="rgb(220,193,23)" fg:x="2545" fg:w="2"/><text x="15.4904%" y="1151.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (21 samples, 0.13%)</title><rect x="15.1626%" y="1317" width="0.1258%" height="15" fill="rgb(230,90,52)" fg:x="2532" fg:w="21"/><text x="15.4126%" y="1327.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (21 samples, 0.13%)</title><rect x="15.1626%" y="1301" width="0.1258%" height="15" fill="rgb(252,106,19)" fg:x="2532" fg:w="21"/><text x="15.4126%" y="1311.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (21 samples, 0.13%)</title><rect x="15.1626%" y="1285" width="0.1258%" height="15" fill="rgb(206,74,20)" fg:x="2532" fg:w="21"/><text x="15.4126%" y="1295.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update (21 samples, 0.13%)</title><rect x="15.1626%" y="1269" width="0.1258%" height="15" fill="rgb(230,138,44)" fg:x="2532" fg:w="21"/><text x="15.4126%" y="1279.50"></text></g><g><title>poly1305::backend::autodetect::State::compute_block (21 samples, 0.13%)</title><rect x="15.1626%" y="1253" width="0.1258%" height="15" fill="rgb(235,182,43)" fg:x="2532" fg:w="21"/><text x="15.4126%" y="1263.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (21 samples, 0.13%)</title><rect x="15.1626%" y="1237" width="0.1258%" height="15" fill="rgb(242,16,51)" fg:x="2532" fg:w="21"/><text x="15.4126%" y="1247.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_blocks (21 samples, 0.13%)</title><rect x="15.1626%" y="1221" width="0.1258%" height="15" fill="rgb(248,9,4)" fg:x="2532" fg:w="21"/><text x="15.4126%" y="1231.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (3 samples, 0.02%)</title><rect x="15.2704%" y="1205" width="0.0180%" height="15" fill="rgb(210,31,22)" fg:x="2550" fg:w="3"/><text x="15.5204%" y="1215.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (3 samples, 0.02%)</title><rect x="15.2704%" y="1189" width="0.0180%" height="15" fill="rgb(239,54,39)" fg:x="2550" fg:w="3"/><text x="15.5204%" y="1199.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (5 samples, 0.03%)</title><rect x="15.3722%" y="1189" width="0.0299%" height="15" fill="rgb(230,99,41)" fg:x="2567" fg:w="5"/><text x="15.6222%" y="1199.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (4 samples, 0.02%)</title><rect x="15.3782%" y="1173" width="0.0240%" height="15" fill="rgb(253,106,12)" fg:x="2568" fg:w="4"/><text x="15.6282%" y="1183.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (4 samples, 0.02%)</title><rect x="15.3782%" y="1157" width="0.0240%" height="15" fill="rgb(213,46,41)" fg:x="2568" fg:w="4"/><text x="15.6282%" y="1167.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (9 samples, 0.05%)</title><rect x="15.3662%" y="1205" width="0.0539%" height="15" fill="rgb(215,133,35)" fg:x="2566" fg:w="9"/><text x="15.6162%" y="1215.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.02%)</title><rect x="15.4021%" y="1189" width="0.0180%" height="15" fill="rgb(213,28,5)" fg:x="2572" fg:w="3"/><text x="15.6521%" y="1199.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (6 samples, 0.04%)</title><rect x="15.4440%" y="1205" width="0.0359%" height="15" fill="rgb(215,77,49)" fg:x="2579" fg:w="6"/><text x="15.6940%" y="1215.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (6 samples, 0.04%)</title><rect x="15.4440%" y="1189" width="0.0359%" height="15" fill="rgb(248,100,22)" fg:x="2579" fg:w="6"/><text x="15.6940%" y="1199.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (34 samples, 0.20%)</title><rect x="15.2883%" y="1317" width="0.2036%" height="15" fill="rgb(208,67,9)" fg:x="2553" fg:w="34"/><text x="15.5383%" y="1327.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (34 samples, 0.20%)</title><rect x="15.2883%" y="1301" width="0.2036%" height="15" fill="rgb(219,133,21)" fg:x="2553" fg:w="34"/><text x="15.5383%" y="1311.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (34 samples, 0.20%)</title><rect x="15.2883%" y="1285" width="0.2036%" height="15" fill="rgb(246,46,29)" fg:x="2553" fg:w="34"/><text x="15.5383%" y="1295.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update (34 samples, 0.20%)</title><rect x="15.2883%" y="1269" width="0.2036%" height="15" fill="rgb(246,185,52)" fg:x="2553" fg:w="34"/><text x="15.5383%" y="1279.50"></text></g><g><title>poly1305::backend::autodetect::State::compute_block (34 samples, 0.20%)</title><rect x="15.2883%" y="1253" width="0.2036%" height="15" fill="rgb(252,136,11)" fg:x="2553" fg:w="34"/><text x="15.5383%" y="1263.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (34 samples, 0.20%)</title><rect x="15.2883%" y="1237" width="0.2036%" height="15" fill="rgb(219,138,53)" fg:x="2553" fg:w="34"/><text x="15.5383%" y="1247.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_blocks (34 samples, 0.20%)</title><rect x="15.2883%" y="1221" width="0.2036%" height="15" fill="rgb(211,51,23)" fg:x="2553" fg:w="34"/><text x="15.5383%" y="1231.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (2 samples, 0.01%)</title><rect x="15.4800%" y="1205" width="0.0120%" height="15" fill="rgb(247,221,28)" fg:x="2585" fg:w="2"/><text x="15.7300%" y="1215.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (2 samples, 0.01%)</title><rect x="15.4800%" y="1189" width="0.0120%" height="15" fill="rgb(251,222,45)" fg:x="2585" fg:w="2"/><text x="15.7300%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="15.5279%" y="1317" width="0.0359%" height="15" fill="rgb(217,162,53)" fg:x="2593" fg:w="6"/><text x="15.7779%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2 samples, 0.01%)</title><rect x="15.5638%" y="1317" width="0.0120%" height="15" fill="rgb(229,93,14)" fg:x="2599" fg:w="2"/><text x="15.8138%" y="1327.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (33 samples, 0.20%)</title><rect x="15.5937%" y="1317" width="0.1976%" height="15" fill="rgb(209,67,49)" fg:x="2604" fg:w="33"/><text x="15.8437%" y="1327.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.01%)</title><rect x="15.7914%" y="1317" width="0.0120%" height="15" fill="rgb(213,87,29)" fg:x="2637" fg:w="2"/><text x="16.0414%" y="1327.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.01%)</title><rect x="15.8033%" y="1317" width="0.0120%" height="15" fill="rgb(205,151,52)" fg:x="2639" fg:w="2"/><text x="16.0533%" y="1327.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="15.8393%" y="1317" width="0.0120%" height="15" fill="rgb(253,215,39)" fg:x="2645" fg:w="2"/><text x="16.0893%" y="1327.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.02%)</title><rect x="15.8632%" y="1317" width="0.0240%" height="15" fill="rgb(221,220,41)" fg:x="2649" fg:w="4"/><text x="16.1132%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="15.8872%" y="1317" width="0.0120%" height="15" fill="rgb(218,133,21)" fg:x="2653" fg:w="2"/><text x="16.1372%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="15.9051%" y="1317" width="0.0120%" height="15" fill="rgb(221,193,43)" fg:x="2656" fg:w="2"/><text x="16.1551%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.05%)</title><rect x="15.9231%" y="1317" width="0.0539%" height="15" fill="rgb(240,128,52)" fg:x="2659" fg:w="9"/><text x="16.1731%" y="1327.50"></text></g><g><title>&lt;data_encoding::Bt as data_encoding::Static&lt;bool&gt;&gt;::val (6 samples, 0.04%)</title><rect x="15.9890%" y="1317" width="0.0359%" height="15" fill="rgb(253,114,12)" fg:x="2670" fg:w="6"/><text x="16.2390%" y="1327.50"></text></g><g><title>&lt;data_encoding::N6 as data_encoding::Static&lt;usize&gt;&gt;::val (6 samples, 0.04%)</title><rect x="16.0249%" y="1317" width="0.0359%" height="15" fill="rgb(215,223,47)" fg:x="2676" fg:w="6"/><text x="16.2749%" y="1327.50"></text></g><g><title>&lt;ed25519_dalek::secret::ExpandedSecretKey as core::convert::From&lt;&amp;ed25519_dalek::secret::SecretKey&gt;&gt;::from (2 samples, 0.01%)</title><rect x="16.0608%" y="1317" width="0.0120%" height="15" fill="rgb(248,225,23)" fg:x="2682" fg:w="2"/><text x="16.3108%" y="1327.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (2 samples, 0.01%)</title><rect x="16.0608%" y="1301" width="0.0120%" height="15" fill="rgb(250,108,0)" fg:x="2682" fg:w="2"/><text x="16.3108%" y="1311.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (2 samples, 0.01%)</title><rect x="16.0608%" y="1285" width="0.0120%" height="15" fill="rgb(228,208,7)" fg:x="2682" fg:w="2"/><text x="16.3108%" y="1295.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (2 samples, 0.01%)</title><rect x="16.0608%" y="1269" width="0.0120%" height="15" fill="rgb(244,45,10)" fg:x="2682" fg:w="2"/><text x="16.3108%" y="1279.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (2 samples, 0.01%)</title><rect x="16.0608%" y="1253" width="0.0120%" height="15" fill="rgb(207,125,25)" fg:x="2682" fg:w="2"/><text x="16.3108%" y="1263.50"></text></g><g><title>sha2::sha512::Engine512::finish (2 samples, 0.01%)</title><rect x="16.0608%" y="1237" width="0.0120%" height="15" fill="rgb(210,195,18)" fg:x="2682" fg:w="2"/><text x="16.3108%" y="1247.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len128_padding_be (2 samples, 0.01%)</title><rect x="16.0608%" y="1221" width="0.0120%" height="15" fill="rgb(249,80,12)" fg:x="2682" fg:w="2"/><text x="16.3108%" y="1231.50"></text></g><g><title>sha2::sha512::Engine512::finish::{{closure}} (2 samples, 0.01%)</title><rect x="16.0608%" y="1205" width="0.0120%" height="15" fill="rgb(221,65,9)" fg:x="2682" fg:w="2"/><text x="16.3108%" y="1215.50"></text></g><g><title>sha2::sha512::compress512 (2 samples, 0.01%)</title><rect x="16.0608%" y="1189" width="0.0120%" height="15" fill="rgb(235,49,36)" fg:x="2682" fg:w="2"/><text x="16.3108%" y="1199.50"></text></g><g><title>sha2::sha512::x86::compress (2 samples, 0.01%)</title><rect x="16.0608%" y="1173" width="0.0120%" height="15" fill="rgb(225,32,20)" fg:x="2682" fg:w="2"/><text x="16.3108%" y="1183.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (2 samples, 0.01%)</title><rect x="16.0608%" y="1157" width="0.0120%" height="15" fill="rgb(215,141,46)" fg:x="2682" fg:w="2"/><text x="16.3108%" y="1167.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as core::str::traits::FromStr&gt;::from_str (7 samples, 0.04%)</title><rect x="16.0788%" y="1253" width="0.0419%" height="15" fill="rgb(250,160,47)" fg:x="2685" fg:w="7"/><text x="16.3288%" y="1263.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (7 samples, 0.04%)</title><rect x="16.0788%" y="1237" width="0.0419%" height="15" fill="rgb(216,222,40)" fg:x="2685" fg:w="7"/><text x="16.3288%" y="1247.50"></text></g><g><title>veilid_core::crypto::byte_array_types::Encodable::try_decode (7 samples, 0.04%)</title><rect x="16.0788%" y="1221" width="0.0419%" height="15" fill="rgb(234,217,39)" fg:x="2685" fg:w="7"/><text x="16.3288%" y="1231.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as veilid_core::crypto::byte_array_types::Encodable&gt;::try_decode_bytes (7 samples, 0.04%)</title><rect x="16.0788%" y="1205" width="0.0419%" height="15" fill="rgb(207,178,40)" fg:x="2685" fg:w="7"/><text x="16.3288%" y="1215.50"></text></g><g><title>data_encoding::Encoding::decode_mut (7 samples, 0.04%)</title><rect x="16.0788%" y="1189" width="0.0419%" height="15" fill="rgb(221,136,13)" fg:x="2685" fg:w="7"/><text x="16.3288%" y="1199.50"></text></g><g><title>data_encoding::decode_wrap_mut (7 samples, 0.04%)</title><rect x="16.0788%" y="1173" width="0.0419%" height="15" fill="rgb(249,199,10)" fg:x="2685" fg:w="7"/><text x="16.3288%" y="1183.50"></text></g><g><title>data_encoding::decode_pad_mut (7 samples, 0.04%)</title><rect x="16.0788%" y="1157" width="0.0419%" height="15" fill="rgb(249,222,13)" fg:x="2685" fg:w="7"/><text x="16.3288%" y="1167.50"></text></g><g><title>data_encoding::decode_base_mut (7 samples, 0.04%)</title><rect x="16.0788%" y="1141" width="0.0419%" height="15" fill="rgb(244,185,38)" fg:x="2685" fg:w="7"/><text x="16.3288%" y="1151.50"></text></g><g><title>data_encoding::decode_mut (7 samples, 0.04%)</title><rect x="16.0788%" y="1125" width="0.0419%" height="15" fill="rgb(236,202,9)" fg:x="2685" fg:w="7"/><text x="16.3288%" y="1135.50"></text></g><g><title>data_encoding::decode_block (6 samples, 0.04%)</title><rect x="16.0848%" y="1109" width="0.0359%" height="15" fill="rgb(250,229,37)" fg:x="2686" fg:w="6"/><text x="16.3348%" y="1119.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_spec_store::RouteSpecStore::is_route_id_remote (3 samples, 0.02%)</title><rect x="16.1207%" y="1253" width="0.0180%" height="15" fill="rgb(206,174,23)" fg:x="2692" fg:w="3"/><text x="16.3707%" y="1263.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_spec_store_cache::RouteSpecStoreCache::peek_remote_private_route_mut (3 samples, 0.02%)</title><rect x="16.1207%" y="1237" width="0.0180%" height="15" fill="rgb(211,33,43)" fg:x="2692" fg:w="3"/><text x="16.3707%" y="1247.50"></text></g><g><title>hashlink::lru_cache::LruCache&lt;K,V,S&gt;::peek_mut (3 samples, 0.02%)</title><rect x="16.1207%" y="1221" width="0.0180%" height="15" fill="rgb(245,58,50)" fg:x="2692" fg:w="3"/><text x="16.3707%" y="1231.50"></text></g><g><title>hashlink::linked_hash_map::LinkedHashMap&lt;K,V,S&gt;::get_mut (3 samples, 0.02%)</title><rect x="16.1207%" y="1205" width="0.0180%" height="15" fill="rgb(244,68,36)" fg:x="2692" fg:w="3"/><text x="16.3707%" y="1215.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (3 samples, 0.02%)</title><rect x="16.1207%" y="1189" width="0.0180%" height="15" fill="rgb(232,229,15)" fg:x="2692" fg:w="3"/><text x="16.3707%" y="1199.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (3 samples, 0.02%)</title><rect x="16.1207%" y="1173" width="0.0180%" height="15" fill="rgb(254,30,23)" fg:x="2692" fg:w="3"/><text x="16.3707%" y="1183.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (3 samples, 0.02%)</title><rect x="16.1207%" y="1157" width="0.0180%" height="15" fill="rgb(235,160,14)" fg:x="2692" fg:w="3"/><text x="16.3707%" y="1167.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_hash (3 samples, 0.02%)</title><rect x="16.1207%" y="1141" width="0.0180%" height="15" fill="rgb(212,155,44)" fg:x="2692" fg:w="3"/><text x="16.3707%" y="1151.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search (3 samples, 0.02%)</title><rect x="16.1207%" y="1125" width="0.0180%" height="15" fill="rgb(226,2,50)" fg:x="2692" fg:w="3"/><text x="16.3707%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="16.1207%" y="1109" width="0.0180%" height="15" fill="rgb(234,177,6)" fg:x="2692" fg:w="3"/><text x="16.3707%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.01%)</title><rect x="16.1267%" y="1093" width="0.0120%" height="15" fill="rgb(217,24,9)" fg:x="2693" fg:w="2"/><text x="16.3767%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.01%)</title><rect x="16.1267%" y="1077" width="0.0120%" height="15" fill="rgb(220,13,46)" fg:x="2693" fg:w="2"/><text x="16.3767%" y="1087.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.07%)</title><rect x="16.0728%" y="1301" width="0.0719%" height="15" fill="rgb(239,221,27)" fg:x="2684" fg:w="12"/><text x="16.3228%" y="1311.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.07%)</title><rect x="16.0728%" y="1285" width="0.0719%" height="15" fill="rgb(222,198,25)" fg:x="2684" fg:w="12"/><text x="16.3228%" y="1295.50"></text></g><g><title>veilid_core::veilid_api::json_api::process::JsonRequestProcessor::parse_target::{{closure}} (11 samples, 0.07%)</title><rect x="16.0788%" y="1269" width="0.0659%" height="15" fill="rgb(211,99,13)" fg:x="2685" fg:w="11"/><text x="16.3288%" y="1279.50"></text></g><g><title>&lt;futures_util::future::future::flatten::Flatten&lt;Fut,&lt;Fut as core::future::future::Future&gt;::Output&gt; as core::future::future::Future&gt;::poll (16 samples, 0.10%)</title><rect x="16.0728%" y="1317" width="0.0958%" height="15" fill="rgb(232,111,31)" fg:x="2684" fg:w="16"/><text x="16.3228%" y="1327.50"></text></g><g><title>veilid_core::veilid_api::json_api::process::JsonRequestProcessor::process_routing_context_request::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="16.1567%" y="1301" width="0.0120%" height="15" fill="rgb(245,82,37)" fg:x="2698" fg:w="2"/><text x="16.4067%" y="1311.50"></text></g><g><title>&lt;i32 as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.02%)</title><rect x="16.1746%" y="1317" width="0.0180%" height="15" fill="rgb(227,149,46)" fg:x="2701" fg:w="3"/><text x="16.4246%" y="1327.50"></text></g><g><title>&lt;range_set_blaze::unsorted_disjoint::UnsortedDisjoint&lt;T,I&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.01%)</title><rect x="16.2225%" y="1317" width="0.0120%" height="15" fill="rgb(218,36,50)" fg:x="2709" fg:w="2"/><text x="16.4725%" y="1327.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi64 (2 samples, 0.01%)</title><rect x="16.2644%" y="1157" width="0.0120%" height="15" fill="rgb(226,80,48)" fg:x="2716" fg:w="2"/><text x="16.5144%" y="1167.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi64 (2 samples, 0.01%)</title><rect x="16.2764%" y="1157" width="0.0120%" height="15" fill="rgb(238,224,15)" fg:x="2718" fg:w="2"/><text x="16.5264%" y="1167.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (12 samples, 0.07%)</title><rect x="16.2345%" y="1317" width="0.0719%" height="15" fill="rgb(241,136,10)" fg:x="2711" fg:w="12"/><text x="16.4845%" y="1327.50"></text></g><g><title>sha2::sha512::Engine512::finish (12 samples, 0.07%)</title><rect x="16.2345%" y="1301" width="0.0719%" height="15" fill="rgb(208,32,45)" fg:x="2711" fg:w="12"/><text x="16.4845%" y="1311.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len128_padding_be (12 samples, 0.07%)</title><rect x="16.2345%" y="1285" width="0.0719%" height="15" fill="rgb(207,135,9)" fg:x="2711" fg:w="12"/><text x="16.4845%" y="1295.50"></text></g><g><title>sha2::sha512::Engine512::finish::{{closure}} (12 samples, 0.07%)</title><rect x="16.2345%" y="1269" width="0.0719%" height="15" fill="rgb(206,86,44)" fg:x="2711" fg:w="12"/><text x="16.4845%" y="1279.50"></text></g><g><title>sha2::sha512::compress512 (12 samples, 0.07%)</title><rect x="16.2345%" y="1253" width="0.0719%" height="15" fill="rgb(245,177,15)" fg:x="2711" fg:w="12"/><text x="16.4845%" y="1263.50"></text></g><g><title>sha2::sha512::x86::compress (12 samples, 0.07%)</title><rect x="16.2345%" y="1237" width="0.0719%" height="15" fill="rgb(206,64,50)" fg:x="2711" fg:w="12"/><text x="16.4845%" y="1247.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (12 samples, 0.07%)</title><rect x="16.2345%" y="1221" width="0.0719%" height="15" fill="rgb(234,36,40)" fg:x="2711" fg:w="12"/><text x="16.4845%" y="1231.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (12 samples, 0.07%)</title><rect x="16.2345%" y="1205" width="0.0719%" height="15" fill="rgb(213,64,8)" fg:x="2711" fg:w="12"/><text x="16.4845%" y="1215.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (12 samples, 0.07%)</title><rect x="16.2345%" y="1189" width="0.0719%" height="15" fill="rgb(210,75,36)" fg:x="2711" fg:w="12"/><text x="16.4845%" y="1199.50"></text></g><g><title>sha2::sha512::x86::sha512_update_x_avx (12 samples, 0.07%)</title><rect x="16.2345%" y="1173" width="0.0719%" height="15" fill="rgb(229,88,21)" fg:x="2711" fg:w="12"/><text x="16.4845%" y="1183.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (2 samples, 0.01%)</title><rect x="16.2944%" y="1157" width="0.0120%" height="15" fill="rgb(252,204,47)" fg:x="2721" fg:w="2"/><text x="16.5444%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.01%)</title><rect x="16.3183%" y="1317" width="0.0120%" height="15" fill="rgb(208,77,27)" fg:x="2725" fg:w="2"/><text x="16.5683%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.01%)</title><rect x="16.3483%" y="1205" width="0.0120%" height="15" fill="rgb(221,76,26)" fg:x="2730" fg:w="2"/><text x="16.5983%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="16.3483%" y="1189" width="0.0120%" height="15" fill="rgb(225,139,18)" fg:x="2730" fg:w="2"/><text x="16.5983%" y="1199.50"></text></g><g><title>tokio::io::ready::Ready::from_usize (2 samples, 0.01%)</title><rect x="16.3603%" y="1205" width="0.0120%" height="15" fill="rgb(230,137,11)" fg:x="2732" fg:w="2"/><text x="16.6103%" y="1215.50"></text></g><g><title>tokio::net::udp::UdpSocket::recv_from::{{closure}} (8 samples, 0.05%)</title><rect x="16.3363%" y="1285" width="0.0479%" height="15" fill="rgb(212,28,1)" fg:x="2728" fg:w="8"/><text x="16.5863%" y="1295.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (8 samples, 0.05%)</title><rect x="16.3363%" y="1269" width="0.0479%" height="15" fill="rgb(248,164,17)" fg:x="2728" fg:w="8"/><text x="16.5863%" y="1279.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (8 samples, 0.05%)</title><rect x="16.3363%" y="1253" width="0.0479%" height="15" fill="rgb(222,171,42)" fg:x="2728" fg:w="8"/><text x="16.5863%" y="1263.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (8 samples, 0.05%)</title><rect x="16.3363%" y="1237" width="0.0479%" height="15" fill="rgb(243,84,45)" fg:x="2728" fg:w="8"/><text x="16.5863%" y="1247.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (8 samples, 0.05%)</title><rect x="16.3363%" y="1221" width="0.0479%" height="15" fill="rgb(252,49,23)" fg:x="2728" fg:w="8"/><text x="16.5863%" y="1231.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.01%)</title><rect x="16.3842%" y="1269" width="0.0120%" height="15" fill="rgb(215,19,7)" fg:x="2736" fg:w="2"/><text x="16.6342%" y="1279.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.01%)</title><rect x="16.3842%" y="1253" width="0.0120%" height="15" fill="rgb(238,81,41)" fg:x="2736" fg:w="2"/><text x="16.6342%" y="1263.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.01%)</title><rect x="16.3842%" y="1237" width="0.0120%" height="15" fill="rgb(210,199,37)" fg:x="2736" fg:w="2"/><text x="16.6342%" y="1247.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.01%)</title><rect x="16.3842%" y="1221" width="0.0120%" height="15" fill="rgb(244,192,49)" fg:x="2736" fg:w="2"/><text x="16.6342%" y="1231.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.01%)</title><rect x="16.3842%" y="1205" width="0.0120%" height="15" fill="rgb(226,211,11)" fg:x="2736" fg:w="2"/><text x="16.6342%" y="1215.50"></text></g><g><title>&lt;veilid_tools::assembly_buffer::PeerKey as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="16.3842%" y="1189" width="0.0120%" height="15" fill="rgb(236,162,54)" fg:x="2736" fg:w="2"/><text x="16.6342%" y="1199.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddr as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="16.3842%" y="1173" width="0.0120%" height="15" fill="rgb(220,229,9)" fg:x="2736" fg:w="2"/><text x="16.6342%" y="1183.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddrV4 as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="16.3842%" y="1157" width="0.0120%" height="15" fill="rgb(250,87,22)" fg:x="2736" fg:w="2"/><text x="16.6342%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (2 samples, 0.01%)</title><rect x="16.3842%" y="1141" width="0.0120%" height="15" fill="rgb(239,43,17)" fg:x="2736" fg:w="2"/><text x="16.6342%" y="1151.50"></text></g><g><title>&lt;core::net::ip_addr::Ipv4Addr as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="16.3842%" y="1125" width="0.0120%" height="15" fill="rgb(231,177,25)" fg:x="2736" fg:w="2"/><text x="16.6342%" y="1135.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (2 samples, 0.01%)</title><rect x="16.3842%" y="1109" width="0.0120%" height="15" fill="rgb(219,179,1)" fg:x="2736" fg:w="2"/><text x="16.6342%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.01%)</title><rect x="16.3842%" y="1093" width="0.0120%" height="15" fill="rgb(238,219,53)" fg:x="2736" fg:w="2"/><text x="16.6342%" y="1103.50"></text></g><g><title>&lt;range_set_blaze::RangeSetBlaze&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;core::ops::range::RangeInclusive&lt;T&gt;&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="16.3962%" y="1237" width="0.0120%" height="15" fill="rgb(232,167,36)" fg:x="2738" fg:w="2"/><text x="16.6462%" y="1247.50"></text></g><g><title>range_set_blaze::RangeSetBlaze&lt;T&gt;::from_sorted_disjoint (2 samples, 0.01%)</title><rect x="16.3962%" y="1221" width="0.0120%" height="15" fill="rgb(244,19,51)" fg:x="2738" fg:w="2"/><text x="16.6462%" y="1231.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="16.3962%" y="1205" width="0.0120%" height="15" fill="rgb(224,6,22)" fg:x="2738" fg:w="2"/><text x="16.6462%" y="1215.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::bulk_build_from_sorted_iter (2 samples, 0.01%)</title><rect x="16.3962%" y="1189" width="0.0120%" height="15" fill="rgb(224,145,5)" fg:x="2738" fg:w="2"/><text x="16.6462%" y="1199.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.10%)</title><rect x="16.3303%" y="1317" width="0.1018%" height="15" fill="rgb(234,130,49)" fg:x="2727" fg:w="17"/><text x="16.5803%" y="1327.50"></text></g><g><title>veilid_core::network_manager::native::protocol::udp::RawUdpProtocolHandler::recv_message::{{closure}} (16 samples, 0.10%)</title><rect x="16.3363%" y="1301" width="0.0958%" height="15" fill="rgb(254,6,2)" fg:x="2728" fg:w="16"/><text x="16.5863%" y="1311.50"></text></g><g><title>veilid_tools::assembly_buffer::AssemblyBuffer::insert_frame (8 samples, 0.05%)</title><rect x="16.3842%" y="1285" width="0.0479%" height="15" fill="rgb(208,96,46)" fg:x="2736" fg:w="8"/><text x="16.6342%" y="1295.50"></text></g><g><title>veilid_tools::assembly_buffer::PeerMessages::insert_fragment (6 samples, 0.04%)</title><rect x="16.3962%" y="1269" width="0.0359%" height="15" fill="rgb(239,3,39)" fg:x="2738" fg:w="6"/><text x="16.6462%" y="1279.50"></text></g><g><title>veilid_tools::assembly_buffer::PeerMessages::merge_in_data (6 samples, 0.04%)</title><rect x="16.3962%" y="1253" width="0.0359%" height="15" fill="rgb(233,210,1)" fg:x="2738" fg:w="6"/><text x="16.6462%" y="1263.50"></text></g><g><title>range_set_blaze::RangeSetBlaze&lt;T&gt;::is_disjoint (3 samples, 0.02%)</title><rect x="16.4142%" y="1237" width="0.0180%" height="15" fill="rgb(244,137,37)" fg:x="2741" fg:w="3"/><text x="16.6642%" y="1247.50"></text></g><g><title>range_set_blaze::sorted_disjoint::SortedDisjoint::is_disjoint (3 samples, 0.02%)</title><rect x="16.4142%" y="1221" width="0.0180%" height="15" fill="rgb(240,136,2)" fg:x="2741" fg:w="3"/><text x="16.6642%" y="1231.50"></text></g><g><title>range_set_blaze::sorted_disjoint::SortedDisjoint::is_empty (3 samples, 0.02%)</title><rect x="16.4142%" y="1205" width="0.0180%" height="15" fill="rgb(239,18,37)" fg:x="2741" fg:w="3"/><text x="16.6642%" y="1215.50"></text></g><g><title>&lt;range_set_blaze::not_iter::NotIter&lt;T,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="16.4142%" y="1189" width="0.0180%" height="15" fill="rgb(218,185,22)" fg:x="2741" fg:w="3"/><text x="16.6642%" y="1199.50"></text></g><g><title>&lt;range_set_blaze::union_iter::UnionIter&lt;T,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="16.4201%" y="1173" width="0.0120%" height="15" fill="rgb(225,218,4)" fg:x="2742" fg:w="2"/><text x="16.6701%" y="1183.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::into_inner (2 samples, 0.01%)</title><rect x="16.4201%" y="1157" width="0.0120%" height="15" fill="rgb(230,182,32)" fg:x="2742" fg:w="2"/><text x="16.6701%" y="1167.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (6 samples, 0.04%)</title><rect x="16.4381%" y="1317" width="0.0359%" height="15" fill="rgb(242,56,43)" fg:x="2745" fg:w="6"/><text x="16.6881%" y="1327.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.04%)</title><rect x="16.4740%" y="1317" width="0.0359%" height="15" fill="rgb(233,99,24)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (6 samples, 0.04%)</title><rect x="16.4740%" y="1301" width="0.0359%" height="15" fill="rgb(234,209,42)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (6 samples, 0.04%)</title><rect x="16.4740%" y="1285" width="0.0359%" height="15" fill="rgb(227,7,12)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1295.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (6 samples, 0.04%)</title><rect x="16.4740%" y="1269" width="0.0359%" height="15" fill="rgb(245,203,43)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (6 samples, 0.04%)</title><rect x="16.4740%" y="1253" width="0.0359%" height="15" fill="rgb(238,205,33)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (6 samples, 0.04%)</title><rect x="16.4740%" y="1237" width="0.0359%" height="15" fill="rgb(231,56,7)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (6 samples, 0.04%)</title><rect x="16.4740%" y="1221" width="0.0359%" height="15" fill="rgb(244,186,29)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1231.50"></text></g><g><title>tokio::runtime::coop::budget (6 samples, 0.04%)</title><rect x="16.4740%" y="1205" width="0.0359%" height="15" fill="rgb(234,111,31)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1215.50"></text></g><g><title>tokio::runtime::coop::with_budget (6 samples, 0.04%)</title><rect x="16.4740%" y="1189" width="0.0359%" height="15" fill="rgb(241,149,10)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (6 samples, 0.04%)</title><rect x="16.4740%" y="1173" width="0.0359%" height="15" fill="rgb(249,206,44)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1183.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (6 samples, 0.04%)</title><rect x="16.4740%" y="1157" width="0.0359%" height="15" fill="rgb(251,153,30)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (6 samples, 0.04%)</title><rect x="16.4740%" y="1141" width="0.0359%" height="15" fill="rgb(239,152,38)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1151.50"></text></g><g><title>tokio::runtime::task::raw::poll (6 samples, 0.04%)</title><rect x="16.4740%" y="1125" width="0.0359%" height="15" fill="rgb(249,139,47)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6 samples, 0.04%)</title><rect x="16.4740%" y="1109" width="0.0359%" height="15" fill="rgb(244,64,35)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (6 samples, 0.04%)</title><rect x="16.4740%" y="1093" width="0.0359%" height="15" fill="rgb(216,46,15)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (6 samples, 0.04%)</title><rect x="16.4740%" y="1077" width="0.0359%" height="15" fill="rgb(250,74,19)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.04%)</title><rect x="16.4740%" y="1061" width="0.0359%" height="15" fill="rgb(249,42,33)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1071.50"></text></g><g><title>std::panicking::try (6 samples, 0.04%)</title><rect x="16.4740%" y="1045" width="0.0359%" height="15" fill="rgb(242,149,17)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1055.50"></text></g><g><title>__rust_try (6 samples, 0.04%)</title><rect x="16.4740%" y="1029" width="0.0359%" height="15" fill="rgb(244,29,21)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.04%)</title><rect x="16.4740%" y="1013" width="0.0359%" height="15" fill="rgb(220,130,37)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.04%)</title><rect x="16.4740%" y="997" width="0.0359%" height="15" fill="rgb(211,67,2)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="1007.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (6 samples, 0.04%)</title><rect x="16.4740%" y="981" width="0.0359%" height="15" fill="rgb(235,68,52)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="991.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (6 samples, 0.04%)</title><rect x="16.4740%" y="965" width="0.0359%" height="15" fill="rgb(246,142,3)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="975.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6 samples, 0.04%)</title><rect x="16.4740%" y="949" width="0.0359%" height="15" fill="rgb(241,25,7)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="959.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (6 samples, 0.04%)</title><rect x="16.4740%" y="933" width="0.0359%" height="15" fill="rgb(242,119,39)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="943.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.04%)</title><rect x="16.4740%" y="917" width="0.0359%" height="15" fill="rgb(241,98,45)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="927.50"></text></g><g><title>veilid_core::network_manager::native::network_udp::&lt;impl veilid_core::network_manager::native::Network&gt;::create_udp_listener_tasks::{{closure}}::{{closure}} (6 samples, 0.04%)</title><rect x="16.4740%" y="901" width="0.0359%" height="15" fill="rgb(254,28,30)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="911.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (6 samples, 0.04%)</title><rect x="16.4740%" y="885" width="0.0359%" height="15" fill="rgb(241,142,54)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="895.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (6 samples, 0.04%)</title><rect x="16.4740%" y="869" width="0.0359%" height="15" fill="rgb(222,85,15)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="879.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.04%)</title><rect x="16.4740%" y="853" width="0.0359%" height="15" fill="rgb(210,85,47)" fg:x="2751" fg:w="6"/><text x="16.7240%" y="863.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="16.5100%" y="1301" width="0.0120%" height="15" fill="rgb(224,206,25)" fg:x="2757" fg:w="2"/><text x="16.7600%" y="1311.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="16.5100%" y="1285" width="0.0120%" height="15" fill="rgb(243,201,19)" fg:x="2757" fg:w="2"/><text x="16.7600%" y="1295.50"></text></g><g><title>veilid_core::network_manager::network_connection::NetworkConnection::process_connection::{{closure}} (2 samples, 0.01%)</title><rect x="16.5100%" y="1269" width="0.0120%" height="15" fill="rgb(236,59,4)" fg:x="2757" fg:w="2"/><text x="16.7600%" y="1279.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="16.5100%" y="1253" width="0.0120%" height="15" fill="rgb(254,179,45)" fg:x="2757" fg:w="2"/><text x="16.7600%" y="1263.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (3 samples, 0.02%)</title><rect x="16.5339%" y="1221" width="0.0180%" height="15" fill="rgb(226,14,10)" fg:x="2761" fg:w="3"/><text x="16.7839%" y="1231.50"></text></g><g><title>core::task::wake::Waker::will_wake (2 samples, 0.01%)</title><rect x="16.5399%" y="1205" width="0.0120%" height="15" fill="rgb(244,27,41)" fg:x="2762" fg:w="2"/><text x="16.7899%" y="1215.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="16.5399%" y="1189" width="0.0120%" height="15" fill="rgb(235,35,32)" fg:x="2762" fg:w="2"/><text x="16.7899%" y="1199.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="16.5399%" y="1173" width="0.0120%" height="15" fill="rgb(218,68,31)" fg:x="2762" fg:w="2"/><text x="16.7899%" y="1183.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="16.5399%" y="1157" width="0.0120%" height="15" fill="rgb(207,120,37)" fg:x="2762" fg:w="2"/><text x="16.7899%" y="1167.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.05%)</title><rect x="16.5100%" y="1317" width="0.0479%" height="15" fill="rgb(227,98,0)" fg:x="2757" fg:w="8"/><text x="16.7600%" y="1327.50"></text></g><g><title>veilid_server::client_api::ClientApi::handle_connection::{{closure}} (4 samples, 0.02%)</title><rect x="16.5339%" y="1301" width="0.0240%" height="15" fill="rgb(207,7,3)" fg:x="2761" fg:w="4"/><text x="16.7839%" y="1311.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="16.5339%" y="1285" width="0.0240%" height="15" fill="rgb(206,98,19)" fg:x="2761" fg:w="4"/><text x="16.7839%" y="1295.50"></text></g><g><title>&lt;stop_token::deadline::Deadline as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="16.5339%" y="1269" width="0.0240%" height="15" fill="rgb(217,5,26)" fg:x="2761" fg:w="4"/><text x="16.7839%" y="1279.50"></text></g><g><title>&lt;stop_token::stop_source::StopToken as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="16.5339%" y="1253" width="0.0240%" height="15" fill="rgb(235,190,38)" fg:x="2761" fg:w="4"/><text x="16.7839%" y="1263.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.02%)</title><rect x="16.5339%" y="1237" width="0.0240%" height="15" fill="rgb(247,86,24)" fg:x="2761" fg:w="4"/><text x="16.7839%" y="1247.50"></text></g><g><title>&lt;u8 as core::default::Default&gt;::default (14 samples, 0.08%)</title><rect x="16.5818%" y="1317" width="0.0838%" height="15" fill="rgb(205,101,16)" fg:x="2769" fg:w="14"/><text x="16.8318%" y="1327.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (39 samples, 0.23%)</title><rect x="16.6776%" y="1317" width="0.2335%" height="15" fill="rgb(246,168,33)" fg:x="2785" fg:w="39"/><text x="16.9276%" y="1327.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::decrypt_aead (3 samples, 0.02%)</title><rect x="16.9172%" y="1317" width="0.0180%" height="15" fill="rgb(231,114,1)" fg:x="2825" fg:w="3"/><text x="17.1672%" y="1327.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::decrypt_in_place_aead (3 samples, 0.02%)</title><rect x="16.9172%" y="1301" width="0.0180%" height="15" fill="rgb(207,184,53)" fg:x="2825" fg:w="3"/><text x="17.1672%" y="1311.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (3 samples, 0.02%)</title><rect x="16.9172%" y="1285" width="0.0180%" height="15" fill="rgb(224,95,51)" fg:x="2825" fg:w="3"/><text x="17.1672%" y="1295.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (3 samples, 0.02%)</title><rect x="16.9172%" y="1269" width="0.0180%" height="15" fill="rgb(212,188,45)" fg:x="2825" fg:w="3"/><text x="17.1672%" y="1279.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (3 samples, 0.02%)</title><rect x="16.9172%" y="1253" width="0.0180%" height="15" fill="rgb(223,154,38)" fg:x="2825" fg:w="3"/><text x="17.1672%" y="1263.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (3 samples, 0.02%)</title><rect x="16.9172%" y="1237" width="0.0180%" height="15" fill="rgb(251,22,52)" fg:x="2825" fg:w="3"/><text x="17.1672%" y="1247.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update (3 samples, 0.02%)</title><rect x="16.9172%" y="1221" width="0.0180%" height="15" fill="rgb(229,209,22)" fg:x="2825" fg:w="3"/><text x="17.1672%" y="1231.50"></text></g><g><title>poly1305::backend::autodetect::State::compute_block (3 samples, 0.02%)</title><rect x="16.9172%" y="1205" width="0.0180%" height="15" fill="rgb(234,138,34)" fg:x="2825" fg:w="3"/><text x="17.1672%" y="1215.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (3 samples, 0.02%)</title><rect x="16.9172%" y="1189" width="0.0180%" height="15" fill="rgb(212,95,11)" fg:x="2825" fg:w="3"/><text x="17.1672%" y="1199.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (3 samples, 0.02%)</title><rect x="16.9172%" y="1173" width="0.0180%" height="15" fill="rgb(240,179,47)" fg:x="2825" fg:w="3"/><text x="17.1672%" y="1183.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (3 samples, 0.02%)</title><rect x="16.9172%" y="1157" width="0.0180%" height="15" fill="rgb(240,163,11)" fg:x="2825" fg:w="3"/><text x="17.1672%" y="1167.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.02%)</title><rect x="16.9411%" y="1141" width="0.0180%" height="15" fill="rgb(236,37,12)" fg:x="2829" fg:w="3"/><text x="17.1911%" y="1151.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.01%)</title><rect x="16.9471%" y="1125" width="0.0120%" height="15" fill="rgb(232,164,16)" fg:x="2830" fg:w="2"/><text x="17.1971%" y="1135.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (3 samples, 0.02%)</title><rect x="16.9591%" y="1141" width="0.0180%" height="15" fill="rgb(244,205,15)" fg:x="2832" fg:w="3"/><text x="17.2091%" y="1151.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.02%)</title><rect x="16.9591%" y="1125" width="0.0180%" height="15" fill="rgb(223,117,47)" fg:x="2832" fg:w="3"/><text x="17.2091%" y="1135.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.02%)</title><rect x="16.9771%" y="1141" width="0.0180%" height="15" fill="rgb(244,107,35)" fg:x="2835" fg:w="3"/><text x="17.2271%" y="1151.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.01%)</title><rect x="16.9831%" y="1125" width="0.0120%" height="15" fill="rgb(205,140,8)" fg:x="2836" fg:w="2"/><text x="17.2331%" y="1135.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::encrypt_aead (10 samples, 0.06%)</title><rect x="16.9411%" y="1317" width="0.0599%" height="15" fill="rgb(228,84,46)" fg:x="2829" fg:w="10"/><text x="17.1911%" y="1327.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::encrypt_in_place_aead (10 samples, 0.06%)</title><rect x="16.9411%" y="1301" width="0.0599%" height="15" fill="rgb(254,188,9)" fg:x="2829" fg:w="10"/><text x="17.1911%" y="1311.50"></text></g><g><title>aead::AeadInPlace::encrypt_in_place (10 samples, 0.06%)</title><rect x="16.9411%" y="1285" width="0.0599%" height="15" fill="rgb(206,112,54)" fg:x="2829" fg:w="10"/><text x="17.1911%" y="1295.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (10 samples, 0.06%)</title><rect x="16.9411%" y="1269" width="0.0599%" height="15" fill="rgb(216,84,49)" fg:x="2829" fg:w="10"/><text x="17.1911%" y="1279.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (10 samples, 0.06%)</title><rect x="16.9411%" y="1253" width="0.0599%" height="15" fill="rgb(214,194,35)" fg:x="2829" fg:w="10"/><text x="17.1911%" y="1263.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (10 samples, 0.06%)</title><rect x="16.9411%" y="1237" width="0.0599%" height="15" fill="rgb(249,28,3)" fg:x="2829" fg:w="10"/><text x="17.1911%" y="1247.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update (10 samples, 0.06%)</title><rect x="16.9411%" y="1221" width="0.0599%" height="15" fill="rgb(222,56,52)" fg:x="2829" fg:w="10"/><text x="17.1911%" y="1231.50"></text></g><g><title>poly1305::backend::autodetect::State::compute_block (10 samples, 0.06%)</title><rect x="16.9411%" y="1205" width="0.0599%" height="15" fill="rgb(245,217,50)" fg:x="2829" fg:w="10"/><text x="17.1911%" y="1215.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (10 samples, 0.06%)</title><rect x="16.9411%" y="1189" width="0.0599%" height="15" fill="rgb(213,201,24)" fg:x="2829" fg:w="10"/><text x="17.1911%" y="1199.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (10 samples, 0.06%)</title><rect x="16.9411%" y="1173" width="0.0599%" height="15" fill="rgb(248,116,28)" fg:x="2829" fg:w="10"/><text x="17.1911%" y="1183.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (10 samples, 0.06%)</title><rect x="16.9411%" y="1157" width="0.0599%" height="15" fill="rgb(219,72,43)" fg:x="2829" fg:w="10"/><text x="17.1911%" y="1167.50"></text></g><g><title>ed25519_dalek::public::PublicKey::from_bytes (9 samples, 0.05%)</title><rect x="17.0130%" y="1285" width="0.0539%" height="15" fill="rgb(209,138,14)" fg:x="2841" fg:w="9"/><text x="17.2630%" y="1295.50"></text></g><g><title>curve25519_dalek::edwards::CompressedEdwardsY::decompress (9 samples, 0.05%)</title><rect x="17.0130%" y="1269" width="0.0539%" height="15" fill="rgb(222,18,33)" fg:x="2841" fg:w="9"/><text x="17.2630%" y="1279.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (9 samples, 0.05%)</title><rect x="17.0130%" y="1253" width="0.0539%" height="15" fill="rgb(213,199,7)" fg:x="2841" fg:w="9"/><text x="17.2630%" y="1263.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow_p58 (9 samples, 0.05%)</title><rect x="17.0130%" y="1237" width="0.0539%" height="15" fill="rgb(250,110,10)" fg:x="2841" fg:w="9"/><text x="17.2630%" y="1247.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (9 samples, 0.05%)</title><rect x="17.0130%" y="1221" width="0.0539%" height="15" fill="rgb(248,123,6)" fg:x="2841" fg:w="9"/><text x="17.2630%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (8 samples, 0.05%)</title><rect x="17.0190%" y="1205" width="0.0479%" height="15" fill="rgb(206,91,31)" fg:x="2842" fg:w="8"/><text x="17.2690%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (4 samples, 0.02%)</title><rect x="17.0429%" y="1189" width="0.0240%" height="15" fill="rgb(211,154,13)" fg:x="2846" fg:w="4"/><text x="17.2929%" y="1199.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::compress (17 samples, 0.10%)</title><rect x="17.0849%" y="1269" width="0.1018%" height="15" fill="rgb(225,148,7)" fg:x="2853" fg:w="17"/><text x="17.3349%" y="1279.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invert (16 samples, 0.10%)</title><rect x="17.0908%" y="1253" width="0.0958%" height="15" fill="rgb(220,160,43)" fg:x="2854" fg:w="16"/><text x="17.3408%" y="1263.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (16 samples, 0.10%)</title><rect x="17.0908%" y="1237" width="0.0958%" height="15" fill="rgb(213,52,39)" fg:x="2854" fg:w="16"/><text x="17.3408%" y="1247.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (16 samples, 0.10%)</title><rect x="17.0908%" y="1221" width="0.0958%" height="15" fill="rgb(243,137,7)" fg:x="2854" fg:w="16"/><text x="17.3408%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (4 samples, 0.02%)</title><rect x="17.1627%" y="1205" width="0.0240%" height="15" fill="rgb(230,79,13)" fg:x="2866" fg:w="4"/><text x="17.4127%" y="1215.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="17.1986%" y="1237" width="0.0120%" height="15" fill="rgb(247,105,23)" fg:x="2872" fg:w="2"/><text x="17.4486%" y="1247.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (2 samples, 0.01%)</title><rect x="17.2106%" y="1221" width="0.0120%" height="15" fill="rgb(223,179,41)" fg:x="2874" fg:w="2"/><text x="17.4606%" y="1231.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (2 samples, 0.01%)</title><rect x="17.2106%" y="1205" width="0.0120%" height="15" fill="rgb(218,9,34)" fg:x="2874" fg:w="2"/><text x="17.4606%" y="1215.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="17.2106%" y="1189" width="0.0120%" height="15" fill="rgb(222,106,8)" fg:x="2874" fg:w="2"/><text x="17.4606%" y="1199.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="17.2106%" y="1173" width="0.0120%" height="15" fill="rgb(211,220,0)" fg:x="2874" fg:w="2"/><text x="17.4606%" y="1183.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (4 samples, 0.02%)</title><rect x="17.2106%" y="1237" width="0.0240%" height="15" fill="rgb(229,52,16)" fg:x="2874" fg:w="4"/><text x="17.4606%" y="1247.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.01%)</title><rect x="17.2226%" y="1221" width="0.0120%" height="15" fill="rgb(212,155,18)" fg:x="2876" fg:w="2"/><text x="17.4726%" y="1231.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (7 samples, 0.04%)</title><rect x="17.2346%" y="1221" width="0.0419%" height="15" fill="rgb(242,21,14)" fg:x="2878" fg:w="7"/><text x="17.4846%" y="1231.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (7 samples, 0.04%)</title><rect x="17.2346%" y="1205" width="0.0419%" height="15" fill="rgb(222,19,48)" fg:x="2878" fg:w="7"/><text x="17.4846%" y="1215.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.02%)</title><rect x="17.2525%" y="1189" width="0.0240%" height="15" fill="rgb(232,45,27)" fg:x="2881" fg:w="4"/><text x="17.5025%" y="1199.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.02%)</title><rect x="17.2525%" y="1173" width="0.0240%" height="15" fill="rgb(249,103,42)" fg:x="2881" fg:w="4"/><text x="17.5025%" y="1183.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (2 samples, 0.01%)</title><rect x="17.3184%" y="1205" width="0.0120%" height="15" fill="rgb(246,81,33)" fg:x="2892" fg:w="2"/><text x="17.5684%" y="1215.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (10 samples, 0.06%)</title><rect x="17.2765%" y="1221" width="0.0599%" height="15" fill="rgb(252,33,42)" fg:x="2885" fg:w="10"/><text x="17.5265%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (20 samples, 0.12%)</title><rect x="17.2346%" y="1237" width="0.1198%" height="15" fill="rgb(209,212,41)" fg:x="2878" fg:w="20"/><text x="17.4846%" y="1247.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (3 samples, 0.02%)</title><rect x="17.3364%" y="1221" width="0.0180%" height="15" fill="rgb(207,154,6)" fg:x="2895" fg:w="3"/><text x="17.5864%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (3 samples, 0.02%)</title><rect x="17.3364%" y="1205" width="0.0180%" height="15" fill="rgb(223,64,47)" fg:x="2895" fg:w="3"/><text x="17.5864%" y="1215.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (5 samples, 0.03%)</title><rect x="17.3543%" y="1221" width="0.0299%" height="15" fill="rgb(211,161,38)" fg:x="2898" fg:w="5"/><text x="17.6043%" y="1231.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (5 samples, 0.03%)</title><rect x="17.3543%" y="1205" width="0.0299%" height="15" fill="rgb(219,138,40)" fg:x="2898" fg:w="5"/><text x="17.6043%" y="1215.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="17.3663%" y="1189" width="0.0180%" height="15" fill="rgb(241,228,46)" fg:x="2900" fg:w="3"/><text x="17.6163%" y="1199.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="17.3663%" y="1173" width="0.0180%" height="15" fill="rgb(223,209,38)" fg:x="2900" fg:w="3"/><text x="17.6163%" y="1183.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="17.3723%" y="1157" width="0.0120%" height="15" fill="rgb(236,164,45)" fg:x="2901" fg:w="2"/><text x="17.6223%" y="1167.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (3 samples, 0.02%)</title><rect x="17.4022%" y="1205" width="0.0180%" height="15" fill="rgb(231,15,5)" fg:x="2906" fg:w="3"/><text x="17.6522%" y="1215.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (7 samples, 0.04%)</title><rect x="17.3843%" y="1221" width="0.0419%" height="15" fill="rgb(252,35,15)" fg:x="2903" fg:w="7"/><text x="17.6343%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (15 samples, 0.09%)</title><rect x="17.3543%" y="1237" width="0.0898%" height="15" fill="rgb(248,181,18)" fg:x="2898" fg:w="15"/><text x="17.6043%" y="1247.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (3 samples, 0.02%)</title><rect x="17.4262%" y="1221" width="0.0180%" height="15" fill="rgb(233,39,42)" fg:x="2910" fg:w="3"/><text x="17.6762%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (2 samples, 0.01%)</title><rect x="17.4322%" y="1205" width="0.0120%" height="15" fill="rgb(238,110,33)" fg:x="2911" fg:w="2"/><text x="17.6822%" y="1215.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (3 samples, 0.02%)</title><rect x="17.4442%" y="1221" width="0.0180%" height="15" fill="rgb(233,195,10)" fg:x="2913" fg:w="3"/><text x="17.6942%" y="1231.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (3 samples, 0.02%)</title><rect x="17.4442%" y="1205" width="0.0180%" height="15" fill="rgb(254,105,3)" fg:x="2913" fg:w="3"/><text x="17.6942%" y="1215.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="17.4501%" y="1189" width="0.0120%" height="15" fill="rgb(221,225,9)" fg:x="2914" fg:w="2"/><text x="17.7001%" y="1199.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="17.4501%" y="1173" width="0.0120%" height="15" fill="rgb(224,227,45)" fg:x="2914" fg:w="2"/><text x="17.7001%" y="1183.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (2 samples, 0.01%)</title><rect x="17.4801%" y="1205" width="0.0120%" height="15" fill="rgb(229,198,43)" fg:x="2919" fg:w="2"/><text x="17.7301%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (10 samples, 0.06%)</title><rect x="17.4442%" y="1237" width="0.0599%" height="15" fill="rgb(206,209,35)" fg:x="2913" fg:w="10"/><text x="17.6942%" y="1247.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (7 samples, 0.04%)</title><rect x="17.4621%" y="1221" width="0.0419%" height="15" fill="rgb(245,195,53)" fg:x="2916" fg:w="7"/><text x="17.7121%" y="1231.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="17.4921%" y="1205" width="0.0120%" height="15" fill="rgb(240,92,26)" fg:x="2921" fg:w="2"/><text x="17.7421%" y="1215.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (5 samples, 0.03%)</title><rect x="17.6597%" y="1205" width="0.0299%" height="15" fill="rgb(207,40,23)" fg:x="2949" fg:w="5"/><text x="17.9097%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (39 samples, 0.23%)</title><rect x="17.5040%" y="1237" width="0.2335%" height="15" fill="rgb(223,111,35)" fg:x="2923" fg:w="39"/><text x="17.7540%" y="1247.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (39 samples, 0.23%)</title><rect x="17.5040%" y="1221" width="0.2335%" height="15" fill="rgb(229,147,28)" fg:x="2923" fg:w="39"/><text x="17.7540%" y="1231.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7 samples, 0.04%)</title><rect x="17.6957%" y="1205" width="0.0419%" height="15" fill="rgb(211,29,28)" fg:x="2955" fg:w="7"/><text x="17.9457%" y="1215.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (16 samples, 0.10%)</title><rect x="17.9951%" y="1205" width="0.0958%" height="15" fill="rgb(228,72,33)" fg:x="3005" fg:w="16"/><text x="18.2451%" y="1215.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (69 samples, 0.41%)</title><rect x="17.7376%" y="1221" width="0.4132%" height="15" fill="rgb(205,214,31)" fg:x="2962" fg:w="69"/><text x="17.9876%" y="1231.50"></text></g><g><title>__memcpy_avx_unaligned_erms (10 samples, 0.06%)</title><rect x="18.0909%" y="1205" width="0.0599%" height="15" fill="rgb(224,111,15)" fg:x="3021" fg:w="10"/><text x="18.3409%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (74 samples, 0.44%)</title><rect x="17.7376%" y="1237" width="0.4431%" height="15" fill="rgb(253,21,26)" fg:x="2962" fg:w="74"/><text x="17.9876%" y="1247.50"></text></g><g><title>__memcpy_avx_unaligned_erms (5 samples, 0.03%)</title><rect x="18.1508%" y="1221" width="0.0299%" height="15" fill="rgb(245,139,43)" fg:x="3031" fg:w="5"/><text x="18.4008%" y="1231.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.01%)</title><rect x="18.3364%" y="1157" width="0.0120%" height="15" fill="rgb(252,170,7)" fg:x="3062" fg:w="2"/><text x="18.5864%" y="1167.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="18.3544%" y="1141" width="0.0120%" height="15" fill="rgb(231,118,14)" fg:x="3065" fg:w="2"/><text x="18.6044%" y="1151.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (38 samples, 0.23%)</title><rect x="18.1867%" y="1205" width="0.2276%" height="15" fill="rgb(238,83,0)" fg:x="3037" fg:w="38"/><text x="18.4367%" y="1215.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (19 samples, 0.11%)</title><rect x="18.3005%" y="1189" width="0.1138%" height="15" fill="rgb(221,39,39)" fg:x="3056" fg:w="19"/><text x="18.5505%" y="1199.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (18 samples, 0.11%)</title><rect x="18.3065%" y="1173" width="0.1078%" height="15" fill="rgb(222,119,46)" fg:x="3057" fg:w="18"/><text x="18.5565%" y="1183.50"></text></g><g><title>core::mem::replace (11 samples, 0.07%)</title><rect x="18.3484%" y="1157" width="0.0659%" height="15" fill="rgb(222,165,49)" fg:x="3064" fg:w="11"/><text x="18.5984%" y="1167.50"></text></g><g><title>core::ptr::read (8 samples, 0.05%)</title><rect x="18.3664%" y="1141" width="0.0479%" height="15" fill="rgb(219,113,52)" fg:x="3067" fg:w="8"/><text x="18.6164%" y="1151.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (4 samples, 0.02%)</title><rect x="18.3903%" y="1125" width="0.0240%" height="15" fill="rgb(214,7,15)" fg:x="3071" fg:w="4"/><text x="18.6403%" y="1135.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (39 samples, 0.23%)</title><rect x="18.1867%" y="1221" width="0.2335%" height="15" fill="rgb(235,32,4)" fg:x="3037" fg:w="39"/><text x="18.4367%" y="1231.50"></text></g><g><title>[veilid-server] (2 samples, 0.01%)</title><rect x="18.5281%" y="1189" width="0.0120%" height="15" fill="rgb(238,90,54)" fg:x="3094" fg:w="2"/><text x="18.7781%" y="1199.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (22 samples, 0.13%)</title><rect x="18.4203%" y="1221" width="0.1317%" height="15" fill="rgb(213,208,19)" fg:x="3076" fg:w="22"/><text x="18.6703%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (12 samples, 0.07%)</title><rect x="18.4801%" y="1205" width="0.0719%" height="15" fill="rgb(233,156,4)" fg:x="3086" fg:w="12"/><text x="18.7301%" y="1215.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="18.5400%" y="1189" width="0.0120%" height="15" fill="rgb(207,194,5)" fg:x="3096" fg:w="2"/><text x="18.7900%" y="1199.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.02%)</title><rect x="18.5999%" y="1173" width="0.0180%" height="15" fill="rgb(206,111,30)" fg:x="3106" fg:w="3"/><text x="18.8499%" y="1183.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3 samples, 0.02%)</title><rect x="18.5999%" y="1157" width="0.0180%" height="15" fill="rgb(243,70,54)" fg:x="3106" fg:w="3"/><text x="18.8499%" y="1167.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.05%)</title><rect x="18.5939%" y="1205" width="0.0539%" height="15" fill="rgb(242,28,8)" fg:x="3105" fg:w="9"/><text x="18.8439%" y="1215.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.05%)</title><rect x="18.5939%" y="1189" width="0.0539%" height="15" fill="rgb(219,106,18)" fg:x="3105" fg:w="9"/><text x="18.8439%" y="1199.50"></text></g><g><title>core::mem::replace (3 samples, 0.02%)</title><rect x="18.6299%" y="1173" width="0.0180%" height="15" fill="rgb(244,222,10)" fg:x="3111" fg:w="3"/><text x="18.8799%" y="1183.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="18.6299%" y="1157" width="0.0180%" height="15" fill="rgb(236,179,52)" fg:x="3111" fg:w="3"/><text x="18.8799%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="18.7077%" y="1189" width="0.0180%" height="15" fill="rgb(213,23,39)" fg:x="3124" fg:w="3"/><text x="18.9577%" y="1199.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square2 (31 samples, 0.19%)</title><rect x="18.5640%" y="1221" width="0.1856%" height="15" fill="rgb(238,48,10)" fg:x="3100" fg:w="31"/><text x="18.8140%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (17 samples, 0.10%)</title><rect x="18.6478%" y="1205" width="0.1018%" height="15" fill="rgb(251,196,23)" fg:x="3114" fg:w="17"/><text x="18.8978%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (4 samples, 0.02%)</title><rect x="18.7257%" y="1189" width="0.0240%" height="15" fill="rgb(250,152,24)" fg:x="3127" fg:w="4"/><text x="18.9757%" y="1199.50"></text></g><g><title>__memcpy_avx_unaligned_erms (9 samples, 0.05%)</title><rect x="19.0071%" y="1189" width="0.0539%" height="15" fill="rgb(209,150,17)" fg:x="3174" fg:w="9"/><text x="19.2571%" y="1199.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="19.0610%" y="1189" width="0.0240%" height="15" fill="rgb(234,202,34)" fg:x="3183" fg:w="4"/><text x="19.3110%" y="1199.50"></text></g><g><title>sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="19.0610%" y="1173" width="0.0240%" height="15" fill="rgb(253,148,53)" fg:x="3183" fg:w="4"/><text x="19.3110%" y="1183.50"></text></g><g><title>irqentry_exit (4 samples, 0.02%)</title><rect x="19.0610%" y="1157" width="0.0240%" height="15" fill="rgb(218,129,16)" fg:x="3183" fg:w="4"/><text x="19.3110%" y="1167.50"></text></g><g><title>irqentry_exit_to_user_mode (4 samples, 0.02%)</title><rect x="19.0610%" y="1141" width="0.0240%" height="15" fill="rgb(216,85,19)" fg:x="3183" fg:w="4"/><text x="19.3110%" y="1151.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.02%)</title><rect x="19.0610%" y="1125" width="0.0240%" height="15" fill="rgb(235,228,7)" fg:x="3183" fg:w="4"/><text x="19.3110%" y="1135.50"></text></g><g><title>exit_to_user_mode_loop (4 samples, 0.02%)</title><rect x="19.0610%" y="1109" width="0.0240%" height="15" fill="rgb(245,175,0)" fg:x="3183" fg:w="4"/><text x="19.3110%" y="1119.50"></text></g><g><title>schedule (4 samples, 0.02%)</title><rect x="19.0610%" y="1093" width="0.0240%" height="15" fill="rgb(208,168,36)" fg:x="3183" fg:w="4"/><text x="19.3110%" y="1103.50"></text></g><g><title>__schedule (4 samples, 0.02%)</title><rect x="19.0610%" y="1077" width="0.0240%" height="15" fill="rgb(246,171,24)" fg:x="3183" fg:w="4"/><text x="19.3110%" y="1087.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.02%)</title><rect x="19.0610%" y="1061" width="0.0240%" height="15" fill="rgb(215,142,24)" fg:x="3183" fg:w="4"/><text x="19.3110%" y="1071.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.02%)</title><rect x="19.0610%" y="1045" width="0.0240%" height="15" fill="rgb(250,187,7)" fg:x="3183" fg:w="4"/><text x="19.3110%" y="1055.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.02%)</title><rect x="19.0610%" y="1029" width="0.0240%" height="15" fill="rgb(228,66,33)" fg:x="3183" fg:w="4"/><text x="19.3110%" y="1039.50"></text></g><g><title>x86_pmu_enable (4 samples, 0.02%)</title><rect x="19.0610%" y="1013" width="0.0240%" height="15" fill="rgb(234,215,21)" fg:x="3183" fg:w="4"/><text x="19.3110%" y="1023.50"></text></g><g><title>intel_pmu_enable_all (4 samples, 0.02%)</title><rect x="19.0610%" y="997" width="0.0240%" height="15" fill="rgb(222,191,20)" fg:x="3183" fg:w="4"/><text x="19.3110%" y="1007.50"></text></g><g><title>native_write_msr (4 samples, 0.02%)</title><rect x="19.0610%" y="981" width="0.0240%" height="15" fill="rgb(245,79,54)" fg:x="3183" fg:w="4"/><text x="19.3110%" y="991.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (160 samples, 0.96%)</title><rect x="18.1807%" y="1237" width="0.9581%" height="15" fill="rgb(240,10,37)" fg:x="3036" fg:w="160"/><text x="18.4307%" y="1247.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (65 samples, 0.39%)</title><rect x="18.7496%" y="1221" width="0.3892%" height="15" fill="rgb(214,192,32)" fg:x="3131" fg:w="65"/><text x="18.9996%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (65 samples, 0.39%)</title><rect x="18.7496%" y="1205" width="0.3892%" height="15" fill="rgb(209,36,54)" fg:x="3131" fg:w="65"/><text x="18.9996%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (9 samples, 0.05%)</title><rect x="19.0850%" y="1189" width="0.0539%" height="15" fill="rgb(220,10,11)" fg:x="3187" fg:w="9"/><text x="19.3350%" y="1199.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::non_adjacent_form (3 samples, 0.02%)</title><rect x="19.1389%" y="1237" width="0.0180%" height="15" fill="rgb(221,106,17)" fg:x="3196" fg:w="3"/><text x="19.3889%" y="1247.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (332 samples, 1.99%)</title><rect x="17.1867%" y="1269" width="1.9881%" height="15" fill="rgb(251,142,44)" fg:x="2870" fg:w="332"/><text x="17.4367%" y="1279.50">c..</text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (332 samples, 1.99%)</title><rect x="17.1867%" y="1253" width="1.9881%" height="15" fill="rgb(238,13,15)" fg:x="2870" fg:w="332"/><text x="17.4367%" y="1263.50">c..</text></g><g><title>curve25519_dalek::window::NafLookupTable8&lt;T&gt;::select (3 samples, 0.02%)</title><rect x="19.1568%" y="1237" width="0.0180%" height="15" fill="rgb(208,107,27)" fg:x="3199" fg:w="3"/><text x="19.4068%" y="1247.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="19.1568%" y="1221" width="0.0180%" height="15" fill="rgb(205,136,37)" fg:x="3199" fg:w="3"/><text x="19.4068%" y="1231.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::verify (366 samples, 2.19%)</title><rect x="17.0010%" y="1301" width="2.1917%" height="15" fill="rgb(250,205,27)" fg:x="2839" fg:w="366"/><text x="17.2510%" y="1311.50">&lt;..</text></g><g><title>ed25519_dalek::public::PublicKey::verify_prehashed (355 samples, 2.13%)</title><rect x="17.0669%" y="1285" width="2.1259%" height="15" fill="rgb(210,80,43)" fg:x="2850" fg:w="355"/><text x="17.3169%" y="1295.50">e..</text></g><g><title>curve25519_dalek::scalar::Scalar::from_hash (3 samples, 0.02%)</title><rect x="19.1748%" y="1269" width="0.0180%" height="15" fill="rgb(247,160,36)" fg:x="3202" fg:w="3"/><text x="19.4248%" y="1279.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::from_bytes_mod_order_wide (3 samples, 0.02%)</title><rect x="19.1748%" y="1253" width="0.0180%" height="15" fill="rgb(234,13,49)" fg:x="3202" fg:w="3"/><text x="19.4248%" y="1263.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::from_bytes_wide (3 samples, 0.02%)</title><rect x="19.1748%" y="1237" width="0.0180%" height="15" fill="rgb(234,122,0)" fg:x="3202" fg:w="3"/><text x="19.4248%" y="1247.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="19.1808%" y="1221" width="0.0120%" height="15" fill="rgb(207,146,38)" fg:x="3203" fg:w="2"/><text x="19.4308%" y="1231.50"></text></g><g><title>&lt;&amp;curve25519_dalek::scalar::Scalar as core::ops::arith::Add&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::add (3 samples, 0.02%)</title><rect x="19.1928%" y="1269" width="0.0180%" height="15" fill="rgb(207,177,25)" fg:x="3205" fg:w="3"/><text x="19.4428%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.01%)</title><rect x="19.2167%" y="1125" width="0.0120%" height="15" fill="rgb(211,178,42)" fg:x="3209" fg:w="2"/><text x="19.4667%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.01%)</title><rect x="19.2167%" y="1109" width="0.0120%" height="15" fill="rgb(230,69,54)" fg:x="3209" fg:w="2"/><text x="19.4667%" y="1119.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.01%)</title><rect x="19.2167%" y="1093" width="0.0120%" height="15" fill="rgb(214,135,41)" fg:x="3209" fg:w="2"/><text x="19.4667%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.02%)</title><rect x="19.2167%" y="1173" width="0.0240%" height="15" fill="rgb(237,67,25)" fg:x="3209" fg:w="4"/><text x="19.4667%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="19.2167%" y="1157" width="0.0240%" height="15" fill="rgb(222,189,50)" fg:x="3209" fg:w="4"/><text x="19.4667%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.02%)</title><rect x="19.2167%" y="1141" width="0.0240%" height="15" fill="rgb(245,148,34)" fg:x="3209" fg:w="4"/><text x="19.4667%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="19.2287%" y="1125" width="0.0120%" height="15" fill="rgb(222,29,6)" fg:x="3211" fg:w="2"/><text x="19.4787%" y="1135.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::new (6 samples, 0.04%)</title><rect x="19.2107%" y="1269" width="0.0359%" height="15" fill="rgb(221,189,43)" fg:x="3208" fg:w="6"/><text x="19.4607%" y="1279.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as core::default::Default&gt;::default (6 samples, 0.04%)</title><rect x="19.2107%" y="1253" width="0.0359%" height="15" fill="rgb(207,36,27)" fg:x="3208" fg:w="6"/><text x="19.4607%" y="1263.50"></text></g><g><title>sha2::sha512::Engine512::new (6 samples, 0.04%)</title><rect x="19.2107%" y="1237" width="0.0359%" height="15" fill="rgb(217,90,24)" fg:x="3208" fg:w="6"/><text x="19.4607%" y="1247.50"></text></g><g><title>&lt;block_buffer::BlockBuffer&lt;BlockSize&gt; as core::default::Default&gt;::default (6 samples, 0.04%)</title><rect x="19.2107%" y="1221" width="0.0359%" height="15" fill="rgb(224,66,35)" fg:x="3208" fg:w="6"/><text x="19.4607%" y="1231.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (6 samples, 0.04%)</title><rect x="19.2107%" y="1205" width="0.0359%" height="15" fill="rgb(221,13,50)" fg:x="3208" fg:w="6"/><text x="19.4607%" y="1215.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (6 samples, 0.04%)</title><rect x="19.2107%" y="1189" width="0.0359%" height="15" fill="rgb(236,68,49)" fg:x="3208" fg:w="6"/><text x="19.4607%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.05%)</title><rect x="19.2586%" y="1221" width="0.0539%" height="15" fill="rgb(229,146,28)" fg:x="3216" fg:w="9"/><text x="19.5086%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (9 samples, 0.05%)</title><rect x="19.2586%" y="1205" width="0.0539%" height="15" fill="rgb(225,31,38)" fg:x="3216" fg:w="9"/><text x="19.5086%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.05%)</title><rect x="19.2586%" y="1189" width="0.0539%" height="15" fill="rgb(250,208,3)" fg:x="3216" fg:w="9"/><text x="19.5086%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (5 samples, 0.03%)</title><rect x="19.2826%" y="1173" width="0.0299%" height="15" fill="rgb(246,54,23)" fg:x="3220" fg:w="5"/><text x="19.5326%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.02%)</title><rect x="19.2946%" y="1157" width="0.0180%" height="15" fill="rgb(243,76,11)" fg:x="3222" fg:w="3"/><text x="19.5446%" y="1167.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsBasepointTable::basepoint_mul::{{closure}} (3 samples, 0.02%)</title><rect x="19.2946%" y="1141" width="0.0180%" height="15" fill="rgb(245,21,50)" fg:x="3222" fg:w="3"/><text x="19.5446%" y="1151.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (13 samples, 0.08%)</title><rect x="19.3305%" y="1205" width="0.0778%" height="15" fill="rgb(228,9,43)" fg:x="3228" fg:w="13"/><text x="19.5805%" y="1215.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (12 samples, 0.07%)</title><rect x="19.3365%" y="1189" width="0.0719%" height="15" fill="rgb(208,100,47)" fg:x="3229" fg:w="12"/><text x="19.5865%" y="1199.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="19.3904%" y="1173" width="0.0180%" height="15" fill="rgb(232,26,8)" fg:x="3238" fg:w="3"/><text x="19.6404%" y="1183.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="19.3904%" y="1157" width="0.0180%" height="15" fill="rgb(216,166,38)" fg:x="3238" fg:w="3"/><text x="19.6404%" y="1167.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (3 samples, 0.02%)</title><rect x="19.5341%" y="1189" width="0.0180%" height="15" fill="rgb(251,202,51)" fg:x="3262" fg:w="3"/><text x="19.7841%" y="1199.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (28 samples, 0.17%)</title><rect x="19.4083%" y="1205" width="0.1677%" height="15" fill="rgb(254,216,34)" fg:x="3241" fg:w="28"/><text x="19.6583%" y="1215.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="19.5521%" y="1189" width="0.0240%" height="15" fill="rgb(251,32,27)" fg:x="3265" fg:w="4"/><text x="19.8021%" y="1199.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (49 samples, 0.29%)</title><rect x="19.3185%" y="1221" width="0.2934%" height="15" fill="rgb(208,127,28)" fg:x="3226" fg:w="49"/><text x="19.5685%" y="1231.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (6 samples, 0.04%)</title><rect x="19.5760%" y="1205" width="0.0359%" height="15" fill="rgb(224,137,22)" fg:x="3269" fg:w="6"/><text x="19.8260%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (5 samples, 0.03%)</title><rect x="19.5820%" y="1189" width="0.0299%" height="15" fill="rgb(254,70,32)" fg:x="3270" fg:w="5"/><text x="19.8320%" y="1199.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="19.5940%" y="1173" width="0.0180%" height="15" fill="rgb(229,75,37)" fg:x="3272" fg:w="3"/><text x="19.8440%" y="1183.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (3 samples, 0.02%)</title><rect x="19.7377%" y="1189" width="0.0180%" height="15" fill="rgb(252,64,23)" fg:x="3296" fg:w="3"/><text x="19.9877%" y="1199.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (27 samples, 0.16%)</title><rect x="19.6120%" y="1221" width="0.1617%" height="15" fill="rgb(232,162,48)" fg:x="3275" fg:w="27"/><text x="19.8620%" y="1231.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (27 samples, 0.16%)</title><rect x="19.6120%" y="1205" width="0.1617%" height="15" fill="rgb(246,160,12)" fg:x="3275" fg:w="27"/><text x="19.8620%" y="1215.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="19.7557%" y="1189" width="0.0180%" height="15" fill="rgb(247,166,0)" fg:x="3299" fg:w="3"/><text x="20.0057%" y="1199.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::to_radix_16 (2 samples, 0.01%)</title><rect x="19.7796%" y="1221" width="0.0120%" height="15" fill="rgb(249,219,21)" fg:x="3303" fg:w="2"/><text x="20.0296%" y="1231.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Neg&gt;::neg (3 samples, 0.02%)</title><rect x="19.8096%" y="1173" width="0.0180%" height="15" fill="rgb(205,209,3)" fg:x="3308" fg:w="3"/><text x="20.0596%" y="1183.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::negate (3 samples, 0.02%)</title><rect x="19.8096%" y="1157" width="0.0180%" height="15" fill="rgb(243,44,1)" fg:x="3308" fg:w="3"/><text x="20.0596%" y="1167.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (3 samples, 0.02%)</title><rect x="19.8096%" y="1141" width="0.0180%" height="15" fill="rgb(206,159,16)" fg:x="3308" fg:w="3"/><text x="20.0596%" y="1151.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="19.8156%" y="1125" width="0.0120%" height="15" fill="rgb(244,77,30)" fg:x="3309" fg:w="2"/><text x="20.0656%" y="1135.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as core::ops::arith::Neg&gt;::neg (4 samples, 0.02%)</title><rect x="19.8096%" y="1189" width="0.0240%" height="15" fill="rgb(218,69,12)" fg:x="3308" fg:w="4"/><text x="20.0596%" y="1199.50"></text></g><g><title>&lt;T as subtle::ConditionallyNegatable&gt;::conditional_negate (5 samples, 0.03%)</title><rect x="19.8096%" y="1205" width="0.0299%" height="15" fill="rgb(212,87,7)" fg:x="3308" fg:w="5"/><text x="20.0596%" y="1215.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (23 samples, 0.14%)</title><rect x="19.8455%" y="1205" width="0.1377%" height="15" fill="rgb(245,114,25)" fg:x="3314" fg:w="23"/><text x="20.0955%" y="1215.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as subtle::ConditionallySelectable&gt;::conditional_assign (23 samples, 0.14%)</title><rect x="19.8455%" y="1189" width="0.1377%" height="15" fill="rgb(210,61,42)" fg:x="3314" fg:w="23"/><text x="20.0955%" y="1199.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (21 samples, 0.13%)</title><rect x="19.8575%" y="1173" width="0.1258%" height="15" fill="rgb(211,52,33)" fg:x="3316" fg:w="21"/><text x="20.1075%" y="1183.50"></text></g><g><title>subtle::Choice::unwrap_u8 (4 samples, 0.02%)</title><rect x="19.9593%" y="1157" width="0.0240%" height="15" fill="rgb(234,58,33)" fg:x="3333" fg:w="4"/><text x="20.2093%" y="1167.50"></text></g><g><title>&lt;u16 as subtle::ConstantTimeEq&gt;::ct_eq (3 samples, 0.02%)</title><rect x="19.9832%" y="1205" width="0.0180%" height="15" fill="rgb(220,115,36)" fg:x="3337" fg:w="3"/><text x="20.2332%" y="1215.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.02%)</title><rect x="19.9832%" y="1189" width="0.0180%" height="15" fill="rgb(243,153,54)" fg:x="3337" fg:w="3"/><text x="20.2332%" y="1199.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (3 samples, 0.02%)</title><rect x="19.9832%" y="1173" width="0.0180%" height="15" fill="rgb(251,47,18)" fg:x="3337" fg:w="3"/><text x="20.2332%" y="1183.50"></text></g><g><title>subtle::black_box (3 samples, 0.02%)</title><rect x="19.9832%" y="1157" width="0.0180%" height="15" fill="rgb(242,102,42)" fg:x="3337" fg:w="3"/><text x="20.2332%" y="1167.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (128 samples, 0.77%)</title><rect x="19.2526%" y="1269" width="0.7665%" height="15" fill="rgb(234,31,38)" fg:x="3215" fg:w="128"/><text x="19.5026%" y="1279.50"></text></g><g><title>&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (128 samples, 0.77%)</title><rect x="19.2526%" y="1253" width="0.7665%" height="15" fill="rgb(221,117,51)" fg:x="3215" fg:w="128"/><text x="19.5026%" y="1263.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsBasepointTable::basepoint_mul (128 samples, 0.77%)</title><rect x="19.2526%" y="1237" width="0.7665%" height="15" fill="rgb(212,20,18)" fg:x="3215" fg:w="128"/><text x="19.5026%" y="1247.50"></text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (38 samples, 0.23%)</title><rect x="19.7916%" y="1221" width="0.2276%" height="15" fill="rgb(245,133,36)" fg:x="3305" fg:w="38"/><text x="20.0416%" y="1231.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="20.0012%" y="1205" width="0.0180%" height="15" fill="rgb(212,6,19)" fg:x="3340" fg:w="3"/><text x="20.2512%" y="1215.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="20.0012%" y="1189" width="0.0180%" height="15" fill="rgb(218,1,36)" fg:x="3340" fg:w="3"/><text x="20.2512%" y="1199.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::compress (15 samples, 0.09%)</title><rect x="20.0192%" y="1269" width="0.0898%" height="15" fill="rgb(246,84,54)" fg:x="3343" fg:w="15"/><text x="20.2692%" y="1279.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invert (15 samples, 0.09%)</title><rect x="20.0192%" y="1253" width="0.0898%" height="15" fill="rgb(242,110,6)" fg:x="3343" fg:w="15"/><text x="20.2692%" y="1263.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (15 samples, 0.09%)</title><rect x="20.0192%" y="1237" width="0.0898%" height="15" fill="rgb(214,47,5)" fg:x="3343" fg:w="15"/><text x="20.2692%" y="1247.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (14 samples, 0.08%)</title><rect x="20.0252%" y="1221" width="0.0838%" height="15" fill="rgb(218,159,25)" fg:x="3344" fg:w="14"/><text x="20.2752%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (3 samples, 0.02%)</title><rect x="20.0910%" y="1205" width="0.0180%" height="15" fill="rgb(215,211,28)" fg:x="3355" fg:w="3"/><text x="20.3410%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_reduce (2 samples, 0.01%)</title><rect x="20.1150%" y="1205" width="0.0120%" height="15" fill="rgb(238,59,32)" fg:x="3359" fg:w="2"/><text x="20.3650%" y="1215.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::sign (523 samples, 3.13%)</title><rect x="17.0010%" y="1317" width="3.1319%" height="15" fill="rgb(226,82,3)" fg:x="2839" fg:w="523"/><text x="17.2510%" y="1327.50">&lt;ve..</text></g><g><title>ed25519_dalek::keypair::Keypair::sign_prehashed (157 samples, 0.94%)</title><rect x="19.1928%" y="1301" width="0.9402%" height="15" fill="rgb(240,164,32)" fg:x="3205" fg:w="157"/><text x="19.4428%" y="1311.50"></text></g><g><title>ed25519_dalek::secret::ExpandedSecretKey::sign_prehashed (157 samples, 0.94%)</title><rect x="19.1928%" y="1285" width="0.9402%" height="15" fill="rgb(232,46,7)" fg:x="3205" fg:w="157"/><text x="19.4428%" y="1295.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::from_hash (4 samples, 0.02%)</title><rect x="20.1090%" y="1269" width="0.0240%" height="15" fill="rgb(229,129,53)" fg:x="3358" fg:w="4"/><text x="20.3590%" y="1279.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::from_bytes_mod_order_wide (3 samples, 0.02%)</title><rect x="20.1150%" y="1253" width="0.0180%" height="15" fill="rgb(234,188,29)" fg:x="3359" fg:w="3"/><text x="20.3650%" y="1263.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::from_bytes_wide (3 samples, 0.02%)</title><rect x="20.1150%" y="1237" width="0.0180%" height="15" fill="rgb(246,141,4)" fg:x="3359" fg:w="3"/><text x="20.3650%" y="1247.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_mul (3 samples, 0.02%)</title><rect x="20.1150%" y="1221" width="0.0180%" height="15" fill="rgb(229,23,39)" fg:x="3359" fg:w="3"/><text x="20.3650%" y="1231.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (4 samples, 0.02%)</title><rect x="20.1389%" y="1221" width="0.0240%" height="15" fill="rgb(206,12,3)" fg:x="3363" fg:w="4"/><text x="20.3889%" y="1231.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (4 samples, 0.02%)</title><rect x="20.1389%" y="1205" width="0.0240%" height="15" fill="rgb(252,226,20)" fg:x="3363" fg:w="4"/><text x="20.3889%" y="1215.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="20.1509%" y="1189" width="0.0120%" height="15" fill="rgb(216,123,35)" fg:x="3365" fg:w="2"/><text x="20.4009%" y="1199.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="20.1509%" y="1173" width="0.0120%" height="15" fill="rgb(212,68,40)" fg:x="3365" fg:w="2"/><text x="20.4009%" y="1183.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (5 samples, 0.03%)</title><rect x="20.1629%" y="1221" width="0.0299%" height="15" fill="rgb(254,125,32)" fg:x="3367" fg:w="5"/><text x="20.4129%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (10 samples, 0.06%)</title><rect x="20.1389%" y="1237" width="0.0599%" height="15" fill="rgb(253,97,22)" fg:x="3363" fg:w="10"/><text x="20.3889%" y="1247.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (11 samples, 0.07%)</title><rect x="20.1988%" y="1237" width="0.0659%" height="15" fill="rgb(241,101,14)" fg:x="3373" fg:w="11"/><text x="20.4488%" y="1247.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (11 samples, 0.07%)</title><rect x="20.1988%" y="1221" width="0.0659%" height="15" fill="rgb(238,103,29)" fg:x="3373" fg:w="11"/><text x="20.4488%" y="1231.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (4 samples, 0.02%)</title><rect x="20.2707%" y="1221" width="0.0240%" height="15" fill="rgb(233,195,47)" fg:x="3385" fg:w="4"/><text x="20.5207%" y="1231.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (4 samples, 0.02%)</title><rect x="20.2707%" y="1205" width="0.0240%" height="15" fill="rgb(246,218,30)" fg:x="3385" fg:w="4"/><text x="20.5207%" y="1215.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="20.2827%" y="1189" width="0.0120%" height="15" fill="rgb(219,145,47)" fg:x="3387" fg:w="2"/><text x="20.5327%" y="1199.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="20.2827%" y="1173" width="0.0120%" height="15" fill="rgb(243,12,26)" fg:x="3387" fg:w="2"/><text x="20.5327%" y="1183.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::verify (31 samples, 0.19%)</title><rect x="20.1329%" y="1317" width="0.1856%" height="15" fill="rgb(214,87,16)" fg:x="3362" fg:w="31"/><text x="20.3829%" y="1327.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_prehashed (31 samples, 0.19%)</title><rect x="20.1329%" y="1301" width="0.1856%" height="15" fill="rgb(208,99,42)" fg:x="3362" fg:w="31"/><text x="20.3829%" y="1311.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (31 samples, 0.19%)</title><rect x="20.1329%" y="1285" width="0.1856%" height="15" fill="rgb(253,99,2)" fg:x="3362" fg:w="31"/><text x="20.3829%" y="1295.50"></text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (31 samples, 0.19%)</title><rect x="20.1329%" y="1269" width="0.1856%" height="15" fill="rgb(220,168,23)" fg:x="3362" fg:w="31"/><text x="20.3829%" y="1279.50"></text></g><g><title>&lt;curve25519_dalek::window::NafLookupTable5&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; as core::convert::From&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt;&gt;::from (31 samples, 0.19%)</title><rect x="20.1329%" y="1253" width="0.1856%" height="15" fill="rgb(242,38,24)" fg:x="3362" fg:w="31"/><text x="20.3829%" y="1263.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::to_projective_niels (8 samples, 0.05%)</title><rect x="20.2707%" y="1237" width="0.0479%" height="15" fill="rgb(225,182,9)" fg:x="3385" fg:w="8"/><text x="20.5207%" y="1247.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (4 samples, 0.02%)</title><rect x="20.2946%" y="1221" width="0.0240%" height="15" fill="rgb(243,178,37)" fg:x="3389" fg:w="4"/><text x="20.5446%" y="1231.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.13%)</title><rect x="20.7737%" y="933" width="0.1258%" height="15" fill="rgb(232,139,19)" fg:x="3469" fg:w="21"/><text x="21.0237%" y="943.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="21.0731%" y="917" width="0.0240%" height="15" fill="rgb(225,201,24)" fg:x="3519" fg:w="4"/><text x="21.3231%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (18 samples, 0.11%)</title><rect x="21.0971%" y="917" width="0.1078%" height="15" fill="rgb(221,47,46)" fg:x="3523" fg:w="18"/><text x="21.3471%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (6 samples, 0.04%)</title><rect x="21.1689%" y="901" width="0.0359%" height="15" fill="rgb(249,23,13)" fg:x="3535" fg:w="6"/><text x="21.4189%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (6 samples, 0.04%)</title><rect x="21.1689%" y="885" width="0.0359%" height="15" fill="rgb(219,9,5)" fg:x="3535" fg:w="6"/><text x="21.4189%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (9 samples, 0.05%)</title><rect x="21.2827%" y="901" width="0.0539%" height="15" fill="rgb(254,171,16)" fg:x="3554" fg:w="9"/><text x="21.5327%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (9 samples, 0.05%)</title><rect x="21.2827%" y="885" width="0.0539%" height="15" fill="rgb(230,171,20)" fg:x="3554" fg:w="9"/><text x="21.5327%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (174 samples, 1.04%)</title><rect x="20.3365%" y="949" width="1.0420%" height="15" fill="rgb(210,71,41)" fg:x="3396" fg:w="174"/><text x="20.5865%" y="959.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (80 samples, 0.48%)</title><rect x="20.8995%" y="933" width="0.4791%" height="15" fill="rgb(206,173,20)" fg:x="3490" fg:w="80"/><text x="21.1495%" y="943.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (29 samples, 0.17%)</title><rect x="21.2049%" y="917" width="0.1737%" height="15" fill="rgb(233,88,34)" fg:x="3541" fg:w="29"/><text x="21.4549%" y="927.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (7 samples, 0.04%)</title><rect x="21.3366%" y="901" width="0.0419%" height="15" fill="rgb(223,209,46)" fg:x="3563" fg:w="7"/><text x="21.5866%" y="911.50"></text></g><g><title>core::mem::replace (12 samples, 0.07%)</title><rect x="21.4384%" y="901" width="0.0719%" height="15" fill="rgb(250,43,18)" fg:x="3580" fg:w="12"/><text x="21.6884%" y="911.50"></text></g><g><title>core::ptr::read (47 samples, 0.28%)</title><rect x="21.5103%" y="901" width="0.2815%" height="15" fill="rgb(208,13,10)" fg:x="3592" fg:w="47"/><text x="21.7603%" y="911.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (14 samples, 0.08%)</title><rect x="21.7079%" y="885" width="0.0838%" height="15" fill="rgb(212,200,36)" fg:x="3625" fg:w="14"/><text x="21.9579%" y="895.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (3 samples, 0.02%)</title><rect x="21.7738%" y="869" width="0.0180%" height="15" fill="rgb(225,90,30)" fg:x="3636" fg:w="3"/><text x="22.0238%" y="879.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (85 samples, 0.51%)</title><rect x="21.3785%" y="949" width="0.5090%" height="15" fill="rgb(236,182,39)" fg:x="3570" fg:w="85"/><text x="21.6285%" y="959.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (85 samples, 0.51%)</title><rect x="21.3785%" y="933" width="0.5090%" height="15" fill="rgb(212,144,35)" fg:x="3570" fg:w="85"/><text x="21.6285%" y="943.50"></text></g><g><title>core::mem::replace (85 samples, 0.51%)</title><rect x="21.3785%" y="917" width="0.5090%" height="15" fill="rgb(228,63,44)" fg:x="3570" fg:w="85"/><text x="21.6285%" y="927.50"></text></g><g><title>core::ptr::write (16 samples, 0.10%)</title><rect x="21.7917%" y="901" width="0.0958%" height="15" fill="rgb(228,109,6)" fg:x="3639" fg:w="16"/><text x="22.0417%" y="911.50"></text></g><g><title>&lt;veilid_core::veilid_api::json_api::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::Request&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (281 samples, 1.68%)</title><rect x="20.3365%" y="1317" width="1.6827%" height="15" fill="rgb(238,117,24)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1327.50"></text></g><g><title>veilid_core::veilid_api::json_api::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::RequestOp&gt;::deserialize (281 samples, 1.68%)</title><rect x="20.3365%" y="1301" width="1.6827%" height="15" fill="rgb(242,26,26)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1311.50"></text></g><g><title>veilid_core::veilid_api::json_api::routing_context::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::routing_context::RoutingContextRequest&gt;::deserialize (281 samples, 1.68%)</title><rect x="20.3365%" y="1285" width="1.6827%" height="15" fill="rgb(221,92,48)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1295.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (281 samples, 1.68%)</title><rect x="20.3365%" y="1269" width="1.6827%" height="15" fill="rgb(209,209,32)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1279.50"></text></g><g><title>serde::__private::de::content::visit_content_map (281 samples, 1.68%)</title><rect x="20.3365%" y="1253" width="1.6827%" height="15" fill="rgb(221,70,22)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1263.50"></text></g><g><title>&lt;veilid_core::veilid_api::json_api::routing_context::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::routing_context::RoutingContextRequest&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (281 samples, 1.68%)</title><rect x="20.3365%" y="1237" width="1.6827%" height="15" fill="rgb(248,145,5)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1247.50"></text></g><g><title>veilid_core::veilid_api::json_api::routing_context::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::routing_context::RoutingContextRequestOp&gt;::deserialize (281 samples, 1.68%)</title><rect x="20.3365%" y="1221" width="1.6827%" height="15" fill="rgb(226,116,26)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1231.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (281 samples, 1.68%)</title><rect x="20.3365%" y="1205" width="1.6827%" height="15" fill="rgb(244,5,17)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1215.50"></text></g><g><title>serde::__private::de::content::visit_content_map (281 samples, 1.68%)</title><rect x="20.3365%" y="1189" width="1.6827%" height="15" fill="rgb(252,159,33)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1199.50"></text></g><g><title>&lt;veilid_core::veilid_api::json_api::routing_context::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::routing_context::RoutingContextRequestOp&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (281 samples, 1.68%)</title><rect x="20.3365%" y="1173" width="1.6827%" height="15" fill="rgb(206,71,0)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1183.50"></text></g><g><title>&lt;&amp;mut A as serde::de::MapAccess&gt;::next_value (281 samples, 1.68%)</title><rect x="20.3365%" y="1157" width="1.6827%" height="15" fill="rgb(233,118,54)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1167.50"></text></g><g><title>serde::de::MapAccess::next_value (281 samples, 1.68%)</title><rect x="20.3365%" y="1141" width="1.6827%" height="15" fill="rgb(234,83,48)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1151.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_value_seed (281 samples, 1.68%)</title><rect x="20.3365%" y="1125" width="1.6827%" height="15" fill="rgb(228,3,54)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1135.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (281 samples, 1.68%)</title><rect x="20.3365%" y="1109" width="1.6827%" height="15" fill="rgb(226,155,13)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1119.50"></text></g><g><title>&lt;&lt;veilid_core::veilid_api::json_api::routing_context::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::routing_context::RoutingContextRequestOp&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map::__DeserializeWith as serde::de::Deserialize&gt;::deserialize (281 samples, 1.68%)</title><rect x="20.3365%" y="1093" width="1.6827%" height="15" fill="rgb(241,28,37)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1103.50"></text></g><g><title>veilid_core::veilid_api::serialize_helpers::serialize_json::json_as_base64::deserialize (281 samples, 1.68%)</title><rect x="20.3365%" y="1077" width="1.6827%" height="15" fill="rgb(233,93,10)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1087.50"></text></g><g><title>data_encoding::Encoding::decode (281 samples, 1.68%)</title><rect x="20.3365%" y="1061" width="1.6827%" height="15" fill="rgb(225,113,19)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1071.50"></text></g><g><title>data_encoding::Encoding::decode_mut (281 samples, 1.68%)</title><rect x="20.3365%" y="1045" width="1.6827%" height="15" fill="rgb(241,2,18)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1055.50"></text></g><g><title>data_encoding::decode_wrap_mut (281 samples, 1.68%)</title><rect x="20.3365%" y="1029" width="1.6827%" height="15" fill="rgb(228,207,21)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1039.50"></text></g><g><title>data_encoding::decode_pad_mut (281 samples, 1.68%)</title><rect x="20.3365%" y="1013" width="1.6827%" height="15" fill="rgb(213,211,35)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1023.50"></text></g><g><title>data_encoding::decode_base_mut (281 samples, 1.68%)</title><rect x="20.3365%" y="997" width="1.6827%" height="15" fill="rgb(209,83,10)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="1007.50"></text></g><g><title>data_encoding::decode_mut (281 samples, 1.68%)</title><rect x="20.3365%" y="981" width="1.6827%" height="15" fill="rgb(209,164,1)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="991.50"></text></g><g><title>data_encoding::decode_block (281 samples, 1.68%)</title><rect x="20.3365%" y="965" width="1.6827%" height="15" fill="rgb(213,184,43)" fg:x="3396" fg:w="281"/><text x="20.5865%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (22 samples, 0.13%)</title><rect x="21.8875%" y="949" width="0.1317%" height="15" fill="rgb(231,61,34)" fg:x="3655" fg:w="22"/><text x="22.1375%" y="959.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (22 samples, 0.13%)</title><rect x="21.8875%" y="933" width="0.1317%" height="15" fill="rgb(235,75,3)" fg:x="3655" fg:w="22"/><text x="22.1375%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.04%)</title><rect x="21.9834%" y="917" width="0.0359%" height="15" fill="rgb(220,106,47)" fg:x="3671" fg:w="6"/><text x="22.2334%" y="927.50"></text></g><g><title>&lt;veilid_core::veilid_capnp::operation::Builder as capnp::traits::FromPointerBuilder&gt;::init_pointer (2 samples, 0.01%)</title><rect x="22.0492%" y="1317" width="0.0120%" height="15" fill="rgb(210,196,33)" fg:x="3682" fg:w="2"/><text x="22.2992%" y="1327.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="22.0672%" y="1285" width="0.0120%" height="15" fill="rgb(229,154,42)" fg:x="3685" fg:w="2"/><text x="22.3172%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="22.0852%" y="1285" width="0.0180%" height="15" fill="rgb(228,114,26)" fg:x="3688" fg:w="3"/><text x="22.3352%" y="1295.50"></text></g><g><title>[veilid-server] (9 samples, 0.05%)</title><rect x="22.0672%" y="1317" width="0.0539%" height="15" fill="rgb(208,144,1)" fg:x="3685" fg:w="9"/><text x="22.3172%" y="1327.50"></text></g><g><title>[veilid-server] (9 samples, 0.05%)</title><rect x="22.0672%" y="1301" width="0.0539%" height="15" fill="rgb(239,112,37)" fg:x="3685" fg:w="9"/><text x="22.3172%" y="1311.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (2 samples, 0.01%)</title><rect x="22.1091%" y="1285" width="0.0120%" height="15" fill="rgb(210,96,50)" fg:x="3692" fg:w="2"/><text x="22.3591%" y="1295.50"></text></g><g><title>__rust_probestack (3 samples, 0.02%)</title><rect x="22.1271%" y="1317" width="0.0180%" height="15" fill="rgb(222,178,2)" fg:x="3695" fg:w="3"/><text x="22.3771%" y="1327.50"></text></g><g><title>aead::AeadInPlace::encrypt_in_place (2 samples, 0.01%)</title><rect x="22.1570%" y="1317" width="0.0120%" height="15" fill="rgb(226,74,18)" fg:x="3700" fg:w="2"/><text x="22.4070%" y="1327.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (2 samples, 0.01%)</title><rect x="22.1570%" y="1301" width="0.0120%" height="15" fill="rgb(225,67,54)" fg:x="3700" fg:w="2"/><text x="22.4070%" y="1311.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (2 samples, 0.01%)</title><rect x="22.1570%" y="1285" width="0.0120%" height="15" fill="rgb(251,92,32)" fg:x="3700" fg:w="2"/><text x="22.4070%" y="1295.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::NewUniversalHash&gt;::new (2 samples, 0.01%)</title><rect x="22.1570%" y="1269" width="0.0120%" height="15" fill="rgb(228,149,22)" fg:x="3700" fg:w="2"/><text x="22.4070%" y="1279.50"></text></g><g><title>poly1305::backend::autodetect::State::new (2 samples, 0.01%)</title><rect x="22.1570%" y="1253" width="0.0120%" height="15" fill="rgb(243,54,13)" fg:x="3700" fg:w="2"/><text x="22.4070%" y="1263.50"></text></g><g><title>poly1305::backend::avx2::State::new (2 samples, 0.01%)</title><rect x="22.1570%" y="1237" width="0.0120%" height="15" fill="rgb(243,180,28)" fg:x="3700" fg:w="2"/><text x="22.4070%" y="1247.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (2 samples, 0.01%)</title><rect x="22.1570%" y="1221" width="0.0120%" height="15" fill="rgb(208,167,24)" fg:x="3700" fg:w="2"/><text x="22.4070%" y="1231.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (2 samples, 0.01%)</title><rect x="22.1570%" y="1205" width="0.0120%" height="15" fill="rgb(245,73,45)" fg:x="3700" fg:w="2"/><text x="22.4070%" y="1215.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (2 samples, 0.01%)</title><rect x="22.1570%" y="1189" width="0.0120%" height="15" fill="rgb(237,203,48)" fg:x="3700" fg:w="2"/><text x="22.4070%" y="1199.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (2 samples, 0.01%)</title><rect x="22.1570%" y="1173" width="0.0120%" height="15" fill="rgb(211,197,16)" fg:x="3700" fg:w="2"/><text x="22.4070%" y="1183.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::right_edge (2 samples, 0.01%)</title><rect x="22.2169%" y="1317" width="0.0120%" height="15" fill="rgb(243,99,51)" fg:x="3710" fg:w="2"/><text x="22.4669%" y="1327.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.01%)</title><rect x="22.2528%" y="1317" width="0.0120%" height="15" fill="rgb(215,123,29)" fg:x="3716" fg:w="2"/><text x="22.5028%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.01%)</title><rect x="22.2888%" y="1317" width="0.0120%" height="15" fill="rgb(239,186,37)" fg:x="3722" fg:w="2"/><text x="22.5388%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="22.3007%" y="1317" width="0.0120%" height="15" fill="rgb(252,136,39)" fg:x="3724" fg:w="2"/><text x="22.5507%" y="1327.50"></text></g><g><title>alloc::sync::data_offset (2 samples, 0.01%)</title><rect x="22.3606%" y="1317" width="0.0120%" height="15" fill="rgb(223,213,32)" fg:x="3734" fg:w="2"/><text x="22.6106%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.03%)</title><rect x="22.3786%" y="1317" width="0.0299%" height="15" fill="rgb(233,115,5)" fg:x="3737" fg:w="5"/><text x="22.6286%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.14%)</title><rect x="22.4145%" y="1317" width="0.1377%" height="15" fill="rgb(207,226,44)" fg:x="3743" fg:w="23"/><text x="22.6645%" y="1327.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (11 samples, 0.07%)</title><rect x="22.4864%" y="1301" width="0.0659%" height="15" fill="rgb(208,126,0)" fg:x="3755" fg:w="11"/><text x="22.7364%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.02%)</title><rect x="22.5522%" y="1317" width="0.0180%" height="15" fill="rgb(244,66,21)" fg:x="3766" fg:w="3"/><text x="22.8022%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.11%)</title><rect x="22.5702%" y="1317" width="0.1078%" height="15" fill="rgb(222,97,12)" fg:x="3769" fg:w="18"/><text x="22.8202%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.11%)</title><rect x="22.5702%" y="1301" width="0.1078%" height="15" fill="rgb(219,213,19)" fg:x="3769" fg:w="18"/><text x="22.8202%" y="1311.50"></text></g><g><title>blake3::compress_subtree_to_parent_node (2 samples, 0.01%)</title><rect x="22.6840%" y="1317" width="0.0120%" height="15" fill="rgb(252,169,30)" fg:x="3788" fg:w="2"/><text x="22.9340%" y="1327.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (7 samples, 0.04%)</title><rect x="22.6960%" y="1317" width="0.0419%" height="15" fill="rgb(206,32,51)" fg:x="3790" fg:w="7"/><text x="22.9460%" y="1327.50"></text></g><g><title>sha2::sha512::Engine512::update::{{closure}} (7 samples, 0.04%)</title><rect x="22.6960%" y="1301" width="0.0419%" height="15" fill="rgb(250,172,42)" fg:x="3790" fg:w="7"/><text x="22.9460%" y="1311.50"></text></g><g><title>sha2::sha512::compress512 (7 samples, 0.04%)</title><rect x="22.6960%" y="1285" width="0.0419%" height="15" fill="rgb(209,34,43)" fg:x="3790" fg:w="7"/><text x="22.9460%" y="1295.50"></text></g><g><title>sha2::sha512::x86::compress (7 samples, 0.04%)</title><rect x="22.6960%" y="1269" width="0.0419%" height="15" fill="rgb(223,11,35)" fg:x="3790" fg:w="7"/><text x="22.9460%" y="1279.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (7 samples, 0.04%)</title><rect x="22.6960%" y="1253" width="0.0419%" height="15" fill="rgb(251,219,26)" fg:x="3790" fg:w="7"/><text x="22.9460%" y="1263.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (7 samples, 0.04%)</title><rect x="22.6960%" y="1237" width="0.0419%" height="15" fill="rgb(231,119,3)" fg:x="3790" fg:w="7"/><text x="22.9460%" y="1247.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (7 samples, 0.04%)</title><rect x="22.6960%" y="1221" width="0.0419%" height="15" fill="rgb(216,97,11)" fg:x="3790" fg:w="7"/><text x="22.9460%" y="1231.50"></text></g><g><title>sha2::sha512::x86::sha512_update_x_avx (7 samples, 0.04%)</title><rect x="22.6960%" y="1205" width="0.0419%" height="15" fill="rgb(223,59,9)" fg:x="3790" fg:w="7"/><text x="22.9460%" y="1215.50"></text></g><g><title>chacha20::xchacha::quarter_round (2 samples, 0.01%)</title><rect x="22.7618%" y="1317" width="0.0120%" height="15" fill="rgb(233,93,31)" fg:x="3801" fg:w="2"/><text x="23.0118%" y="1327.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.01%)</title><rect x="22.7858%" y="1317" width="0.0120%" height="15" fill="rgb(239,81,33)" fg:x="3805" fg:w="2"/><text x="23.0358%" y="1327.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (2 samples, 0.01%)</title><rect x="22.8038%" y="1317" width="0.0120%" height="15" fill="rgb(213,120,34)" fg:x="3808" fg:w="2"/><text x="23.0538%" y="1327.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="22.8277%" y="1317" width="0.0120%" height="15" fill="rgb(243,49,53)" fg:x="3812" fg:w="2"/><text x="23.0777%" y="1327.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.01%)</title><rect x="22.8397%" y="1317" width="0.0120%" height="15" fill="rgb(247,216,33)" fg:x="3814" fg:w="2"/><text x="23.0897%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (4 samples, 0.02%)</title><rect x="22.8696%" y="1317" width="0.0240%" height="15" fill="rgb(226,26,14)" fg:x="3819" fg:w="4"/><text x="23.1196%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (23 samples, 0.14%)</title><rect x="22.8936%" y="1317" width="0.1377%" height="15" fill="rgb(215,49,53)" fg:x="3823" fg:w="23"/><text x="23.1436%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.01%)</title><rect x="23.0433%" y="1317" width="0.0120%" height="15" fill="rgb(245,162,40)" fg:x="3848" fg:w="2"/><text x="23.2933%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (5 samples, 0.03%)</title><rect x="23.0553%" y="1317" width="0.0299%" height="15" fill="rgb(229,68,17)" fg:x="3850" fg:w="5"/><text x="23.3053%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi8 (5 samples, 0.03%)</title><rect x="23.0912%" y="1317" width="0.0299%" height="15" fill="rgb(213,182,10)" fg:x="3856" fg:w="5"/><text x="23.3412%" y="1327.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (17 samples, 0.10%)</title><rect x="23.1331%" y="1317" width="0.1018%" height="15" fill="rgb(245,125,30)" fg:x="3863" fg:w="17"/><text x="23.3831%" y="1327.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (3 samples, 0.02%)</title><rect x="23.2349%" y="1317" width="0.0180%" height="15" fill="rgb(232,202,2)" fg:x="3880" fg:w="3"/><text x="23.4849%" y="1327.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (5 samples, 0.03%)</title><rect x="23.2529%" y="1317" width="0.0299%" height="15" fill="rgb(237,140,51)" fg:x="3883" fg:w="5"/><text x="23.5029%" y="1327.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (5 samples, 0.03%)</title><rect x="23.2529%" y="1301" width="0.0299%" height="15" fill="rgb(236,157,25)" fg:x="3883" fg:w="5"/><text x="23.5029%" y="1311.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.01%)</title><rect x="23.2888%" y="1317" width="0.0120%" height="15" fill="rgb(219,209,0)" fg:x="3889" fg:w="2"/><text x="23.5388%" y="1327.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (37 samples, 0.22%)</title><rect x="23.3068%" y="1317" width="0.2216%" height="15" fill="rgb(240,116,54)" fg:x="3892" fg:w="37"/><text x="23.5568%" y="1327.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (2 samples, 0.01%)</title><rect x="23.5284%" y="1317" width="0.0120%" height="15" fill="rgb(216,10,36)" fg:x="3929" fg:w="2"/><text x="23.7784%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="23.5403%" y="1317" width="0.0120%" height="15" fill="rgb(222,72,44)" fg:x="3931" fg:w="2"/><text x="23.7903%" y="1327.50"></text></g><g><title>core::mem::replace (26 samples, 0.16%)</title><rect x="23.5643%" y="1317" width="0.1557%" height="15" fill="rgb(232,159,9)" fg:x="3935" fg:w="26"/><text x="23.8143%" y="1327.50"></text></g><g><title>core::ptr::read (4 samples, 0.02%)</title><rect x="23.7859%" y="1317" width="0.0240%" height="15" fill="rgb(210,39,32)" fg:x="3972" fg:w="4"/><text x="24.0359%" y="1327.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (2 samples, 0.01%)</title><rect x="23.8218%" y="1317" width="0.0120%" height="15" fill="rgb(216,194,45)" fg:x="3978" fg:w="2"/><text x="24.0718%" y="1327.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.01%)</title><rect x="23.8457%" y="1317" width="0.0120%" height="15" fill="rgb(218,18,35)" fg:x="3982" fg:w="2"/><text x="24.0957%" y="1327.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (13 samples, 0.08%)</title><rect x="23.8697%" y="1317" width="0.0778%" height="15" fill="rgb(207,83,51)" fg:x="3986" fg:w="13"/><text x="24.1197%" y="1327.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (4 samples, 0.02%)</title><rect x="23.9475%" y="1317" width="0.0240%" height="15" fill="rgb(225,63,43)" fg:x="3999" fg:w="4"/><text x="24.1975%" y="1327.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.02%)</title><rect x="23.9715%" y="1317" width="0.0240%" height="15" fill="rgb(207,57,36)" fg:x="4003" fg:w="4"/><text x="24.2215%" y="1327.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (4 samples, 0.02%)</title><rect x="23.9954%" y="1317" width="0.0240%" height="15" fill="rgb(216,99,33)" fg:x="4007" fg:w="4"/><text x="24.2454%" y="1327.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="24.0194%" y="1317" width="0.0120%" height="15" fill="rgb(225,42,16)" fg:x="4011" fg:w="2"/><text x="24.2694%" y="1327.50"></text></g><g><title>core::slice::raw::from_raw_parts (33 samples, 0.20%)</title><rect x="24.0314%" y="1317" width="0.1976%" height="15" fill="rgb(220,201,45)" fg:x="4013" fg:w="33"/><text x="24.2814%" y="1327.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (22 samples, 0.13%)</title><rect x="24.2290%" y="1317" width="0.1317%" height="15" fill="rgb(225,33,4)" fg:x="4046" fg:w="22"/><text x="24.4790%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.01%)</title><rect x="24.3727%" y="1317" width="0.0120%" height="15" fill="rgb(224,33,50)" fg:x="4070" fg:w="2"/><text x="24.6227%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="24.3847%" y="1317" width="0.0120%" height="15" fill="rgb(246,198,51)" fg:x="4072" fg:w="2"/><text x="24.6347%" y="1327.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (2 samples, 0.01%)</title><rect x="24.4266%" y="1317" width="0.0120%" height="15" fill="rgb(205,22,4)" fg:x="4079" fg:w="2"/><text x="24.6766%" y="1327.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (2 samples, 0.01%)</title><rect x="24.4506%" y="1317" width="0.0120%" height="15" fill="rgb(206,3,8)" fg:x="4083" fg:w="2"/><text x="24.7006%" y="1327.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square2 (2 samples, 0.01%)</title><rect x="24.4625%" y="1317" width="0.0120%" height="15" fill="rgb(251,23,15)" fg:x="4085" fg:w="2"/><text x="24.7125%" y="1327.50"></text></g><g><title>data_encoding::chunk_mut_unchecked (5 samples, 0.03%)</title><rect x="24.4985%" y="1317" width="0.0299%" height="15" fill="rgb(252,88,28)" fg:x="4091" fg:w="5"/><text x="24.7485%" y="1327.50"></text></g><g><title>data_encoding::dec (8 samples, 0.05%)</title><rect x="24.5344%" y="1317" width="0.0479%" height="15" fill="rgb(212,127,14)" fg:x="4097" fg:w="8"/><text x="24.7844%" y="1327.50"></text></g><g><title>data_encoding::decode_block (23 samples, 0.14%)</title><rect x="24.5823%" y="1317" width="0.1377%" height="15" fill="rgb(247,145,37)" fg:x="4105" fg:w="23"/><text x="24.8323%" y="1327.50"></text></g><g><title>data_encoding::enc (18 samples, 0.11%)</title><rect x="24.7200%" y="1317" width="0.1078%" height="15" fill="rgb(209,117,53)" fg:x="4128" fg:w="18"/><text x="24.9700%" y="1327.50"></text></g><g><title>data_encoding::encode_len (3 samples, 0.02%)</title><rect x="24.8338%" y="1317" width="0.0180%" height="15" fill="rgb(212,90,42)" fg:x="4147" fg:w="3"/><text x="25.0838%" y="1327.50"></text></g><g><title>data_encoding::order (8 samples, 0.05%)</title><rect x="24.8518%" y="1317" width="0.0479%" height="15" fill="rgb(218,164,37)" fg:x="4150" fg:w="8"/><text x="25.1018%" y="1327.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_reduce (2 samples, 0.01%)</title><rect x="24.8997%" y="1253" width="0.0120%" height="15" fill="rgb(246,65,34)" fg:x="4158" fg:w="2"/><text x="25.1497%" y="1263.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::mul (2 samples, 0.01%)</title><rect x="24.9117%" y="1253" width="0.0120%" height="15" fill="rgb(231,100,33)" fg:x="4160" fg:w="2"/><text x="25.1617%" y="1263.50"></text></g><g><title>ed25519_dalek::keypair::Keypair::sign_prehashed (5 samples, 0.03%)</title><rect x="24.8997%" y="1317" width="0.0299%" height="15" fill="rgb(228,126,14)" fg:x="4158" fg:w="5"/><text x="25.1497%" y="1327.50"></text></g><g><title>ed25519_dalek::secret::ExpandedSecretKey::sign_prehashed (5 samples, 0.03%)</title><rect x="24.8997%" y="1301" width="0.0299%" height="15" fill="rgb(215,173,21)" fg:x="4158" fg:w="5"/><text x="25.1497%" y="1311.50"></text></g><g><title>&lt;&amp;curve25519_dalek::scalar::Scalar as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (5 samples, 0.03%)</title><rect x="24.8997%" y="1285" width="0.0299%" height="15" fill="rgb(210,6,40)" fg:x="4158" fg:w="5"/><text x="25.1497%" y="1295.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::mul (5 samples, 0.03%)</title><rect x="24.8997%" y="1269" width="0.0299%" height="15" fill="rgb(212,48,18)" fg:x="4158" fg:w="5"/><text x="25.1497%" y="1279.50"></text></g><g><title>sha2::sha512::x86::load_data_avx (2 samples, 0.01%)</title><rect x="24.9476%" y="1157" width="0.0120%" height="15" fill="rgb(230,214,11)" fg:x="4166" fg:w="2"/><text x="25.1976%" y="1167.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (2 samples, 0.01%)</title><rect x="24.9596%" y="1157" width="0.0120%" height="15" fill="rgb(254,105,39)" fg:x="4168" fg:w="2"/><text x="25.2096%" y="1167.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="24.9596%" y="1141" width="0.0120%" height="15" fill="rgb(245,158,5)" fg:x="4168" fg:w="2"/><text x="25.2096%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="24.9596%" y="1125" width="0.0120%" height="15" fill="rgb(249,208,11)" fg:x="4168" fg:w="2"/><text x="25.2096%" y="1135.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::update (7 samples, 0.04%)</title><rect x="24.9356%" y="1301" width="0.0419%" height="15" fill="rgb(210,39,28)" fg:x="4164" fg:w="7"/><text x="25.1856%" y="1311.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::Update&gt;::update (7 samples, 0.04%)</title><rect x="24.9356%" y="1285" width="0.0419%" height="15" fill="rgb(211,56,53)" fg:x="4164" fg:w="7"/><text x="25.1856%" y="1295.50"></text></g><g><title>sha2::sha512::Engine512::update (7 samples, 0.04%)</title><rect x="24.9356%" y="1269" width="0.0419%" height="15" fill="rgb(226,201,30)" fg:x="4164" fg:w="7"/><text x="25.1856%" y="1279.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (7 samples, 0.04%)</title><rect x="24.9356%" y="1253" width="0.0419%" height="15" fill="rgb(239,101,34)" fg:x="4164" fg:w="7"/><text x="25.1856%" y="1263.50"></text></g><g><title>sha2::sha512::Engine512::update::{{closure}} (7 samples, 0.04%)</title><rect x="24.9356%" y="1237" width="0.0419%" height="15" fill="rgb(226,209,5)" fg:x="4164" fg:w="7"/><text x="25.1856%" y="1247.50"></text></g><g><title>sha2::sha512::compress512 (7 samples, 0.04%)</title><rect x="24.9356%" y="1221" width="0.0419%" height="15" fill="rgb(250,105,47)" fg:x="4164" fg:w="7"/><text x="25.1856%" y="1231.50"></text></g><g><title>sha2::sha512::x86::compress (7 samples, 0.04%)</title><rect x="24.9356%" y="1205" width="0.0419%" height="15" fill="rgb(230,72,3)" fg:x="4164" fg:w="7"/><text x="25.1856%" y="1215.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (7 samples, 0.04%)</title><rect x="24.9356%" y="1189" width="0.0419%" height="15" fill="rgb(232,218,39)" fg:x="4164" fg:w="7"/><text x="25.1856%" y="1199.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (5 samples, 0.03%)</title><rect x="24.9476%" y="1173" width="0.0299%" height="15" fill="rgb(248,166,6)" fg:x="4166" fg:w="5"/><text x="25.1976%" y="1183.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.01%)</title><rect x="24.9835%" y="1125" width="0.0120%" height="15" fill="rgb(247,89,20)" fg:x="4172" fg:w="2"/><text x="25.2335%" y="1135.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (3 samples, 0.02%)</title><rect x="25.0075%" y="1109" width="0.0180%" height="15" fill="rgb(248,130,54)" fg:x="4176" fg:w="3"/><text x="25.2575%" y="1119.50"></text></g><g><title>sha2::sha512::x86::sha_round (2 samples, 0.01%)</title><rect x="25.0135%" y="1093" width="0.0120%" height="15" fill="rgb(234,196,4)" fg:x="4177" fg:w="2"/><text x="25.2635%" y="1103.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_prehashed (18 samples, 0.11%)</title><rect x="24.9356%" y="1317" width="0.1078%" height="15" fill="rgb(250,143,31)" fg:x="4164" fg:w="18"/><text x="25.1856%" y="1327.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::from_hash (11 samples, 0.07%)</title><rect x="24.9775%" y="1301" width="0.0659%" height="15" fill="rgb(211,110,34)" fg:x="4171" fg:w="11"/><text x="25.2275%" y="1311.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (11 samples, 0.07%)</title><rect x="24.9775%" y="1285" width="0.0659%" height="15" fill="rgb(215,124,48)" fg:x="4171" fg:w="11"/><text x="25.2275%" y="1295.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (11 samples, 0.07%)</title><rect x="24.9775%" y="1269" width="0.0659%" height="15" fill="rgb(216,46,13)" fg:x="4171" fg:w="11"/><text x="25.2275%" y="1279.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (11 samples, 0.07%)</title><rect x="24.9775%" y="1253" width="0.0659%" height="15" fill="rgb(205,184,25)" fg:x="4171" fg:w="11"/><text x="25.2275%" y="1263.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (11 samples, 0.07%)</title><rect x="24.9775%" y="1237" width="0.0659%" height="15" fill="rgb(228,1,10)" fg:x="4171" fg:w="11"/><text x="25.2275%" y="1247.50"></text></g><g><title>sha2::sha512::Engine512::finish (11 samples, 0.07%)</title><rect x="24.9775%" y="1221" width="0.0659%" height="15" fill="rgb(213,116,27)" fg:x="4171" fg:w="11"/><text x="25.2275%" y="1231.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len128_padding_be (11 samples, 0.07%)</title><rect x="24.9775%" y="1205" width="0.0659%" height="15" fill="rgb(241,95,50)" fg:x="4171" fg:w="11"/><text x="25.2275%" y="1215.50"></text></g><g><title>sha2::sha512::Engine512::finish::{{closure}} (11 samples, 0.07%)</title><rect x="24.9775%" y="1189" width="0.0659%" height="15" fill="rgb(238,48,32)" fg:x="4171" fg:w="11"/><text x="25.2275%" y="1199.50"></text></g><g><title>sha2::sha512::compress512 (11 samples, 0.07%)</title><rect x="24.9775%" y="1173" width="0.0659%" height="15" fill="rgb(235,113,49)" fg:x="4171" fg:w="11"/><text x="25.2275%" y="1183.50"></text></g><g><title>sha2::sha512::x86::compress (11 samples, 0.07%)</title><rect x="24.9775%" y="1157" width="0.0659%" height="15" fill="rgb(205,127,43)" fg:x="4171" fg:w="11"/><text x="25.2275%" y="1167.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (11 samples, 0.07%)</title><rect x="24.9775%" y="1141" width="0.0659%" height="15" fill="rgb(250,162,2)" fg:x="4171" fg:w="11"/><text x="25.2275%" y="1151.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (8 samples, 0.05%)</title><rect x="24.9955%" y="1125" width="0.0479%" height="15" fill="rgb(220,13,41)" fg:x="4174" fg:w="8"/><text x="25.2455%" y="1135.50"></text></g><g><title>sha2::sha512::x86::rounds_64_79 (3 samples, 0.02%)</title><rect x="25.0255%" y="1109" width="0.0180%" height="15" fill="rgb(249,221,25)" fg:x="4179" fg:w="3"/><text x="25.2755%" y="1119.50"></text></g><g><title>sha2::sha512::x86::sha_round (2 samples, 0.01%)</title><rect x="25.0314%" y="1093" width="0.0120%" height="15" fill="rgb(215,208,19)" fg:x="4180" fg:w="2"/><text x="25.2814%" y="1103.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (4 samples, 0.02%)</title><rect x="25.0494%" y="1141" width="0.0240%" height="15" fill="rgb(236,175,2)" fg:x="4183" fg:w="4"/><text x="25.2994%" y="1151.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::chain (7 samples, 0.04%)</title><rect x="25.0434%" y="1301" width="0.0419%" height="15" fill="rgb(241,52,2)" fg:x="4182" fg:w="7"/><text x="25.2934%" y="1311.50"></text></g><g><title>digest::Update::chain (7 samples, 0.04%)</title><rect x="25.0434%" y="1285" width="0.0419%" height="15" fill="rgb(248,140,14)" fg:x="4182" fg:w="7"/><text x="25.2934%" y="1295.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::Update&gt;::update (7 samples, 0.04%)</title><rect x="25.0434%" y="1269" width="0.0419%" height="15" fill="rgb(253,22,42)" fg:x="4182" fg:w="7"/><text x="25.2934%" y="1279.50"></text></g><g><title>sha2::sha512::Engine512::update (7 samples, 0.04%)</title><rect x="25.0434%" y="1253" width="0.0419%" height="15" fill="rgb(234,61,47)" fg:x="4182" fg:w="7"/><text x="25.2934%" y="1263.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (7 samples, 0.04%)</title><rect x="25.0434%" y="1237" width="0.0419%" height="15" fill="rgb(208,226,15)" fg:x="4182" fg:w="7"/><text x="25.2934%" y="1247.50"></text></g><g><title>sha2::sha512::Engine512::update::{{closure}} (7 samples, 0.04%)</title><rect x="25.0434%" y="1221" width="0.0419%" height="15" fill="rgb(217,221,4)" fg:x="4182" fg:w="7"/><text x="25.2934%" y="1231.50"></text></g><g><title>sha2::sha512::compress512 (7 samples, 0.04%)</title><rect x="25.0434%" y="1205" width="0.0419%" height="15" fill="rgb(212,174,34)" fg:x="4182" fg:w="7"/><text x="25.2934%" y="1215.50"></text></g><g><title>sha2::sha512::x86::compress (7 samples, 0.04%)</title><rect x="25.0434%" y="1189" width="0.0419%" height="15" fill="rgb(253,83,4)" fg:x="4182" fg:w="7"/><text x="25.2934%" y="1199.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (7 samples, 0.04%)</title><rect x="25.0434%" y="1173" width="0.0419%" height="15" fill="rgb(250,195,49)" fg:x="4182" fg:w="7"/><text x="25.2934%" y="1183.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (6 samples, 0.04%)</title><rect x="25.0494%" y="1157" width="0.0359%" height="15" fill="rgb(241,192,25)" fg:x="4183" fg:w="6"/><text x="25.2994%" y="1167.50"></text></g><g><title>sha2::sha512::x86::rounds_64_79 (2 samples, 0.01%)</title><rect x="25.0734%" y="1141" width="0.0120%" height="15" fill="rgb(208,124,10)" fg:x="4187" fg:w="2"/><text x="25.3234%" y="1151.50"></text></g><g><title>sha2::sha512::x86::load_data_avx (2 samples, 0.01%)</title><rect x="25.1033%" y="1109" width="0.0120%" height="15" fill="rgb(222,33,0)" fg:x="4192" fg:w="2"/><text x="25.3533%" y="1119.50"></text></g><g><title>ed25519_dalek::secret::ExpandedSecretKey::sign_prehashed (13 samples, 0.08%)</title><rect x="25.0434%" y="1317" width="0.0778%" height="15" fill="rgb(234,209,28)" fg:x="4182" fg:w="13"/><text x="25.2934%" y="1327.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::from_hash (6 samples, 0.04%)</title><rect x="25.0853%" y="1301" width="0.0359%" height="15" fill="rgb(224,11,23)" fg:x="4189" fg:w="6"/><text x="25.3353%" y="1311.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (6 samples, 0.04%)</title><rect x="25.0853%" y="1285" width="0.0359%" height="15" fill="rgb(232,99,1)" fg:x="4189" fg:w="6"/><text x="25.3353%" y="1295.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (6 samples, 0.04%)</title><rect x="25.0853%" y="1269" width="0.0359%" height="15" fill="rgb(237,95,45)" fg:x="4189" fg:w="6"/><text x="25.3353%" y="1279.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (6 samples, 0.04%)</title><rect x="25.0853%" y="1253" width="0.0359%" height="15" fill="rgb(208,109,11)" fg:x="4189" fg:w="6"/><text x="25.3353%" y="1263.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (6 samples, 0.04%)</title><rect x="25.0853%" y="1237" width="0.0359%" height="15" fill="rgb(216,190,48)" fg:x="4189" fg:w="6"/><text x="25.3353%" y="1247.50"></text></g><g><title>sha2::sha512::Engine512::finish (6 samples, 0.04%)</title><rect x="25.0853%" y="1221" width="0.0359%" height="15" fill="rgb(251,171,36)" fg:x="4189" fg:w="6"/><text x="25.3353%" y="1231.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len128_padding_be (6 samples, 0.04%)</title><rect x="25.0853%" y="1205" width="0.0359%" height="15" fill="rgb(230,62,22)" fg:x="4189" fg:w="6"/><text x="25.3353%" y="1215.50"></text></g><g><title>sha2::sha512::Engine512::finish::{{closure}} (6 samples, 0.04%)</title><rect x="25.0853%" y="1189" width="0.0359%" height="15" fill="rgb(225,114,35)" fg:x="4189" fg:w="6"/><text x="25.3353%" y="1199.50"></text></g><g><title>sha2::sha512::compress512 (6 samples, 0.04%)</title><rect x="25.0853%" y="1173" width="0.0359%" height="15" fill="rgb(215,118,42)" fg:x="4189" fg:w="6"/><text x="25.3353%" y="1183.50"></text></g><g><title>sha2::sha512::x86::compress (6 samples, 0.04%)</title><rect x="25.0853%" y="1157" width="0.0359%" height="15" fill="rgb(243,119,21)" fg:x="4189" fg:w="6"/><text x="25.3353%" y="1167.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (6 samples, 0.04%)</title><rect x="25.0853%" y="1141" width="0.0359%" height="15" fill="rgb(252,177,53)" fg:x="4189" fg:w="6"/><text x="25.3353%" y="1151.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (4 samples, 0.02%)</title><rect x="25.0973%" y="1125" width="0.0240%" height="15" fill="rgb(237,209,29)" fg:x="4191" fg:w="4"/><text x="25.3473%" y="1135.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (2 samples, 0.01%)</title><rect x="25.1273%" y="1317" width="0.0120%" height="15" fill="rgb(212,65,23)" fg:x="4196" fg:w="2"/><text x="25.3773%" y="1327.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (37 samples, 0.22%)</title><rect x="25.1512%" y="1317" width="0.2216%" height="15" fill="rgb(230,222,46)" fg:x="4200" fg:w="37"/><text x="25.4012%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.01%)</title><rect x="25.3907%" y="1317" width="0.0120%" height="15" fill="rgb(215,135,32)" fg:x="4240" fg:w="2"/><text x="25.6407%" y="1327.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (2 samples, 0.01%)</title><rect x="25.4327%" y="1317" width="0.0120%" height="15" fill="rgb(246,101,22)" fg:x="4247" fg:w="2"/><text x="25.6827%" y="1327.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (2 samples, 0.01%)</title><rect x="25.4746%" y="1317" width="0.0120%" height="15" fill="rgb(206,107,13)" fg:x="4254" fg:w="2"/><text x="25.7246%" y="1327.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (2 samples, 0.01%)</title><rect x="25.4985%" y="1317" width="0.0120%" height="15" fill="rgb(250,100,44)" fg:x="4258" fg:w="2"/><text x="25.7485%" y="1327.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (5 samples, 0.03%)</title><rect x="25.5105%" y="1285" width="0.0299%" height="15" fill="rgb(231,147,38)" fg:x="4260" fg:w="5"/><text x="25.7605%" y="1295.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (5 samples, 0.03%)</title><rect x="25.5105%" y="1269" width="0.0299%" height="15" fill="rgb(229,8,40)" fg:x="4260" fg:w="5"/><text x="25.7605%" y="1279.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (5 samples, 0.03%)</title><rect x="25.5105%" y="1253" width="0.0299%" height="15" fill="rgb(221,135,30)" fg:x="4260" fg:w="5"/><text x="25.7605%" y="1263.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (5 samples, 0.03%)</title><rect x="25.5105%" y="1237" width="0.0299%" height="15" fill="rgb(249,193,18)" fg:x="4260" fg:w="5"/><text x="25.7605%" y="1247.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (4 samples, 0.02%)</title><rect x="25.5165%" y="1221" width="0.0240%" height="15" fill="rgb(209,133,39)" fg:x="4261" fg:w="4"/><text x="25.7665%" y="1231.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (4 samples, 0.02%)</title><rect x="25.5165%" y="1205" width="0.0240%" height="15" fill="rgb(232,100,14)" fg:x="4261" fg:w="4"/><text x="25.7665%" y="1215.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (8 samples, 0.05%)</title><rect x="25.5105%" y="1317" width="0.0479%" height="15" fill="rgb(224,185,1)" fg:x="4260" fg:w="8"/><text x="25.7605%" y="1327.50"></text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (8 samples, 0.05%)</title><rect x="25.5105%" y="1301" width="0.0479%" height="15" fill="rgb(223,139,8)" fg:x="4260" fg:w="8"/><text x="25.7605%" y="1311.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (2 samples, 0.01%)</title><rect x="25.5464%" y="1285" width="0.0120%" height="15" fill="rgb(232,213,38)" fg:x="4266" fg:w="2"/><text x="25.7964%" y="1295.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.01%)</title><rect x="25.5644%" y="1269" width="0.0120%" height="15" fill="rgb(207,94,22)" fg:x="4269" fg:w="2"/><text x="25.8144%" y="1279.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add (4 samples, 0.02%)</title><rect x="25.5584%" y="1301" width="0.0240%" height="15" fill="rgb(219,183,54)" fg:x="4268" fg:w="4"/><text x="25.8084%" y="1311.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (3 samples, 0.02%)</title><rect x="25.5644%" y="1285" width="0.0180%" height="15" fill="rgb(216,185,54)" fg:x="4269" fg:w="3"/><text x="25.8144%" y="1295.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (2 samples, 0.01%)</title><rect x="25.5884%" y="1269" width="0.0120%" height="15" fill="rgb(254,217,39)" fg:x="4273" fg:w="2"/><text x="25.8384%" y="1279.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (4 samples, 0.02%)</title><rect x="25.6003%" y="1253" width="0.0240%" height="15" fill="rgb(240,178,23)" fg:x="4275" fg:w="4"/><text x="25.8503%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.04%)</title><rect x="25.5884%" y="1301" width="0.0419%" height="15" fill="rgb(218,11,47)" fg:x="4273" fg:w="7"/><text x="25.8384%" y="1311.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (7 samples, 0.04%)</title><rect x="25.5884%" y="1285" width="0.0419%" height="15" fill="rgb(218,51,51)" fg:x="4273" fg:w="7"/><text x="25.8384%" y="1295.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (5 samples, 0.03%)</title><rect x="25.6003%" y="1269" width="0.0299%" height="15" fill="rgb(238,126,27)" fg:x="4275" fg:w="5"/><text x="25.8503%" y="1279.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.01%)</title><rect x="25.6363%" y="1301" width="0.0120%" height="15" fill="rgb(249,202,22)" fg:x="4281" fg:w="2"/><text x="25.8863%" y="1311.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.01%)</title><rect x="25.6363%" y="1285" width="0.0120%" height="15" fill="rgb(254,195,49)" fg:x="4281" fg:w="2"/><text x="25.8863%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="25.6363%" y="1269" width="0.0120%" height="15" fill="rgb(208,123,14)" fg:x="4281" fg:w="2"/><text x="25.8863%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="25.6363%" y="1253" width="0.0120%" height="15" fill="rgb(224,200,8)" fg:x="4281" fg:w="2"/><text x="25.8863%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="25.6363%" y="1237" width="0.0120%" height="15" fill="rgb(217,61,36)" fg:x="4281" fg:w="2"/><text x="25.8863%" y="1247.50"></text></g><g><title>poly1305::backend::avx2::State::finalize (19 samples, 0.11%)</title><rect x="25.5584%" y="1317" width="0.1138%" height="15" fill="rgb(206,35,45)" fg:x="4268" fg:w="19"/><text x="25.8084%" y="1327.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (2 samples, 0.01%)</title><rect x="25.7201%" y="1317" width="0.0120%" height="15" fill="rgb(217,65,33)" fg:x="4295" fg:w="2"/><text x="25.9701%" y="1327.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.01%)</title><rect x="25.7201%" y="1301" width="0.0120%" height="15" fill="rgb(222,158,48)" fg:x="4295" fg:w="2"/><text x="25.9701%" y="1311.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with::{{closure}} (2 samples, 0.01%)</title><rect x="25.7201%" y="1285" width="0.0120%" height="15" fill="rgb(254,2,54)" fg:x="4295" fg:w="2"/><text x="25.9701%" y="1295.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}} (2 samples, 0.01%)</title><rect x="25.7201%" y="1269" width="0.0120%" height="15" fill="rgb(250,143,38)" fg:x="4295" fg:w="2"/><text x="25.9701%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="25.7201%" y="1253" width="0.0120%" height="15" fill="rgb(248,25,0)" fg:x="4295" fg:w="2"/><text x="25.9701%" y="1263.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="25.7201%" y="1237" width="0.0120%" height="15" fill="rgb(206,152,27)" fg:x="4295" fg:w="2"/><text x="25.9701%" y="1247.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (2 samples, 0.01%)</title><rect x="25.7201%" y="1221" width="0.0120%" height="15" fill="rgb(240,77,30)" fg:x="4295" fg:w="2"/><text x="25.9701%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="25.7680%" y="1317" width="0.0120%" height="15" fill="rgb(231,5,3)" fg:x="4303" fg:w="2"/><text x="26.0180%" y="1327.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.02%)</title><rect x="25.7800%" y="1317" width="0.0180%" height="15" fill="rgb(207,226,32)" fg:x="4305" fg:w="3"/><text x="26.0300%" y="1327.50"></text></g><g><title>subtle::black_box (2 samples, 0.01%)</title><rect x="25.7980%" y="1317" width="0.0120%" height="15" fill="rgb(222,207,47)" fg:x="4308" fg:w="2"/><text x="26.0480%" y="1327.50"></text></g><g><title>tokio::io::interest::Interest::is_readable (2 samples, 0.01%)</title><rect x="25.8159%" y="1317" width="0.0120%" height="15" fill="rgb(229,115,45)" fg:x="4311" fg:w="2"/><text x="26.0659%" y="1327.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.01%)</title><rect x="25.8518%" y="1317" width="0.0120%" height="15" fill="rgb(224,191,6)" fg:x="4317" fg:w="2"/><text x="26.1018%" y="1327.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (2 samples, 0.01%)</title><rect x="25.8638%" y="1317" width="0.0120%" height="15" fill="rgb(230,227,24)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (2 samples, 0.01%)</title><rect x="25.8638%" y="1301" width="0.0120%" height="15" fill="rgb(228,80,19)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (2 samples, 0.01%)</title><rect x="25.8638%" y="1285" width="0.0120%" height="15" fill="rgb(247,229,0)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (2 samples, 0.01%)</title><rect x="25.8638%" y="1269" width="0.0120%" height="15" fill="rgb(237,194,15)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1279.50"></text></g><g><title>tokio::runtime::coop::budget (2 samples, 0.01%)</title><rect x="25.8638%" y="1253" width="0.0120%" height="15" fill="rgb(219,203,20)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1263.50"></text></g><g><title>tokio::runtime::coop::with_budget (2 samples, 0.01%)</title><rect x="25.8638%" y="1237" width="0.0120%" height="15" fill="rgb(234,128,8)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (2 samples, 0.01%)</title><rect x="25.8638%" y="1221" width="0.0120%" height="15" fill="rgb(248,202,8)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1231.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (2 samples, 0.01%)</title><rect x="25.8638%" y="1205" width="0.0120%" height="15" fill="rgb(206,104,37)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1215.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2 samples, 0.01%)</title><rect x="25.8638%" y="1189" width="0.0120%" height="15" fill="rgb(223,8,27)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1199.50"></text></g><g><title>tokio::runtime::task::raw::poll (2 samples, 0.01%)</title><rect x="25.8638%" y="1173" width="0.0120%" height="15" fill="rgb(216,217,28)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="25.8638%" y="1157" width="0.0120%" height="15" fill="rgb(249,199,1)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.01%)</title><rect x="25.8638%" y="1141" width="0.0120%" height="15" fill="rgb(240,85,17)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2 samples, 0.01%)</title><rect x="25.8638%" y="1125" width="0.0120%" height="15" fill="rgb(206,108,45)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="25.8638%" y="1109" width="0.0120%" height="15" fill="rgb(245,210,41)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1119.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="25.8638%" y="1093" width="0.0120%" height="15" fill="rgb(206,13,37)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1103.50"></text></g><g><title>__rust_try (2 samples, 0.01%)</title><rect x="25.8638%" y="1077" width="0.0120%" height="15" fill="rgb(250,61,18)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="25.8638%" y="1061" width="0.0120%" height="15" fill="rgb(235,172,48)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1071.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="25.8638%" y="1045" width="0.0120%" height="15" fill="rgb(249,201,17)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1055.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.01%)</title><rect x="25.8638%" y="1029" width="0.0120%" height="15" fill="rgb(219,208,6)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1039.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="25.8638%" y="1013" width="0.0120%" height="15" fill="rgb(248,31,23)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1023.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.01%)</title><rect x="25.8638%" y="997" width="0.0120%" height="15" fill="rgb(245,15,42)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="1007.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (2 samples, 0.01%)</title><rect x="25.8638%" y="981" width="0.0120%" height="15" fill="rgb(222,217,39)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="991.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="25.8638%" y="965" width="0.0120%" height="15" fill="rgb(210,219,27)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="975.50"></text></g><g><title>veilid_core::network_manager::native::network_udp::&lt;impl veilid_core::network_manager::native::Network&gt;::create_udp_listener_tasks::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="25.8638%" y="949" width="0.0120%" height="15" fill="rgb(252,166,36)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="959.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="25.8638%" y="933" width="0.0120%" height="15" fill="rgb(245,132,34)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="943.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (2 samples, 0.01%)</title><rect x="25.8638%" y="917" width="0.0120%" height="15" fill="rgb(236,54,3)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="927.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.01%)</title><rect x="25.8638%" y="901" width="0.0120%" height="15" fill="rgb(241,173,43)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="911.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::dequeue (2 samples, 0.01%)</title><rect x="25.8638%" y="885" width="0.0120%" height="15" fill="rgb(215,190,9)" fg:x="4319" fg:w="2"/><text x="26.1138%" y="895.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (2 samples, 0.01%)</title><rect x="25.8758%" y="1317" width="0.0120%" height="15" fill="rgb(242,101,16)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1327.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (2 samples, 0.01%)</title><rect x="25.8758%" y="1301" width="0.0120%" height="15" fill="rgb(223,190,21)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1311.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (2 samples, 0.01%)</title><rect x="25.8758%" y="1285" width="0.0120%" height="15" fill="rgb(215,228,25)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1295.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2 samples, 0.01%)</title><rect x="25.8758%" y="1269" width="0.0120%" height="15" fill="rgb(225,36,22)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1279.50"></text></g><g><title>tokio::runtime::task::raw::poll (2 samples, 0.01%)</title><rect x="25.8758%" y="1253" width="0.0120%" height="15" fill="rgb(251,106,46)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1263.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="25.8758%" y="1237" width="0.0120%" height="15" fill="rgb(208,90,1)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.01%)</title><rect x="25.8758%" y="1221" width="0.0120%" height="15" fill="rgb(243,10,4)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2 samples, 0.01%)</title><rect x="25.8758%" y="1205" width="0.0120%" height="15" fill="rgb(212,137,27)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="25.8758%" y="1189" width="0.0120%" height="15" fill="rgb(231,220,49)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1199.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="25.8758%" y="1173" width="0.0120%" height="15" fill="rgb(237,96,20)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1183.50"></text></g><g><title>__rust_try (2 samples, 0.01%)</title><rect x="25.8758%" y="1157" width="0.0120%" height="15" fill="rgb(239,229,30)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="25.8758%" y="1141" width="0.0120%" height="15" fill="rgb(219,65,33)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="25.8758%" y="1125" width="0.0120%" height="15" fill="rgb(243,134,7)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.01%)</title><rect x="25.8758%" y="1109" width="0.0120%" height="15" fill="rgb(216,177,54)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1119.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="25.8758%" y="1093" width="0.0120%" height="15" fill="rgb(211,160,20)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1103.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.01%)</title><rect x="25.8758%" y="1077" width="0.0120%" height="15" fill="rgb(239,85,39)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (2 samples, 0.01%)</title><rect x="25.8758%" y="1061" width="0.0120%" height="15" fill="rgb(232,125,22)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1071.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="25.8758%" y="1045" width="0.0120%" height="15" fill="rgb(244,57,34)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1055.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="25.8758%" y="1029" width="0.0120%" height="15" fill="rgb(214,203,32)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (2 samples, 0.01%)</title><rect x="25.8758%" y="1013" width="0.0120%" height="15" fill="rgb(207,58,43)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (2 samples, 0.01%)</title><rect x="25.8758%" y="997" width="0.0120%" height="15" fill="rgb(215,193,15)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="1007.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (2 samples, 0.01%)</title><rect x="25.8758%" y="981" width="0.0120%" height="15" fill="rgb(232,15,44)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (2 samples, 0.01%)</title><rect x="25.8758%" y="965" width="0.0120%" height="15" fill="rgb(212,3,48)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (2 samples, 0.01%)</title><rect x="25.8758%" y="949" width="0.0120%" height="15" fill="rgb(218,128,7)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (2 samples, 0.01%)</title><rect x="25.8758%" y="933" width="0.0120%" height="15" fill="rgb(226,216,39)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="943.50"></text></g><g><title>tokio::runtime::coop::budget (2 samples, 0.01%)</title><rect x="25.8758%" y="917" width="0.0120%" height="15" fill="rgb(243,47,51)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="927.50"></text></g><g><title>tokio::runtime::coop::with_budget (2 samples, 0.01%)</title><rect x="25.8758%" y="901" width="0.0120%" height="15" fill="rgb(241,183,40)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (2 samples, 0.01%)</title><rect x="25.8758%" y="885" width="0.0120%" height="15" fill="rgb(231,217,32)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="895.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (2 samples, 0.01%)</title><rect x="25.8758%" y="869" width="0.0120%" height="15" fill="rgb(229,61,38)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="879.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2 samples, 0.01%)</title><rect x="25.8758%" y="853" width="0.0120%" height="15" fill="rgb(225,210,5)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="863.50"></text></g><g><title>tokio::runtime::task::raw::poll (2 samples, 0.01%)</title><rect x="25.8758%" y="837" width="0.0120%" height="15" fill="rgb(231,79,45)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="847.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="25.8758%" y="821" width="0.0120%" height="15" fill="rgb(224,100,7)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="831.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.01%)</title><rect x="25.8758%" y="805" width="0.0120%" height="15" fill="rgb(241,198,18)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="815.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2 samples, 0.01%)</title><rect x="25.8758%" y="789" width="0.0120%" height="15" fill="rgb(252,97,53)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="799.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="25.8758%" y="773" width="0.0120%" height="15" fill="rgb(220,88,7)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="783.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="25.8758%" y="757" width="0.0120%" height="15" fill="rgb(213,176,14)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="767.50"></text></g><g><title>__rust_try (2 samples, 0.01%)</title><rect x="25.8758%" y="741" width="0.0120%" height="15" fill="rgb(246,73,7)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="751.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="25.8758%" y="725" width="0.0120%" height="15" fill="rgb(245,64,36)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="25.8758%" y="709" width="0.0120%" height="15" fill="rgb(245,80,10)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.01%)</title><rect x="25.8758%" y="693" width="0.0120%" height="15" fill="rgb(232,107,50)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="703.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="25.8758%" y="677" width="0.0120%" height="15" fill="rgb(253,3,0)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="687.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.01%)</title><rect x="25.8758%" y="661" width="0.0120%" height="15" fill="rgb(212,99,53)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="671.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (2 samples, 0.01%)</title><rect x="25.8758%" y="645" width="0.0120%" height="15" fill="rgb(249,111,54)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="655.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="25.8758%" y="629" width="0.0120%" height="15" fill="rgb(249,55,30)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="25.8758%" y="613" width="0.0120%" height="15" fill="rgb(237,47,42)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="623.50"></text></g><g><title>veilid_tools::tick_task::TickTask&lt;E&gt;::tick::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="25.8758%" y="597" width="0.0120%" height="15" fill="rgb(211,20,18)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="25.8758%" y="581" width="0.0120%" height="15" fill="rgb(231,203,46)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="591.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="25.8758%" y="565" width="0.0120%" height="15" fill="rgb(237,142,3)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="575.50"></text></g><g><title>veilid_core::network_manager::tasks::rolling_transfers::&lt;impl veilid_core::network_manager::NetworkManager&gt;::rolling_transfers_task_routine::{{closure}} (2 samples, 0.01%)</title><rect x="25.8758%" y="549" width="0.0120%" height="15" fill="rgb(241,107,1)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="559.50"></text></g><g><title>veilid_core::network_manager::tasks::rolling_transfers::&lt;impl veilid_core::network_manager::NetworkManager&gt;::rolling_transfers_task_routine::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="25.8758%" y="533" width="0.0120%" height="15" fill="rgb(229,83,13)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="543.50"></text></g><g><title>veilid_core::network_manager::tasks::rolling_transfers::&lt;impl veilid_core::network_manager::NetworkManager&gt;::rolling_transfers_task_routine::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="25.8758%" y="517" width="0.0120%" height="15" fill="rgb(241,91,40)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="527.50"></text></g><g><title>veilid_core::network_manager::stats::&lt;impl veilid_core::network_manager::NetworkManager&gt;::send_network_update (2 samples, 0.01%)</title><rect x="25.8758%" y="501" width="0.0120%" height="15" fill="rgb(225,3,45)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="511.50"></text></g><g><title>veilid_core::network_manager::stats::&lt;impl veilid_core::network_manager::NetworkManager&gt;::get_veilid_state (2 samples, 0.01%)</title><rect x="25.8758%" y="485" width="0.0120%" height="15" fill="rgb(244,223,14)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="495.50"></text></g><g><title>veilid_core::routing_table::RoutingTable::get_recent_peers (2 samples, 0.01%)</title><rect x="25.8758%" y="469" width="0.0120%" height="15" fill="rgb(224,124,37)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="479.50"></text></g><g><title>veilid_core::routing_table::RoutingTable::lookup_node_ref (2 samples, 0.01%)</title><rect x="25.8758%" y="453" width="0.0120%" height="15" fill="rgb(251,171,30)" fg:x="4321" fg:w="2"/><text x="26.1258%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (2 samples, 0.01%)</title><rect x="25.9536%" y="1317" width="0.0120%" height="15" fill="rgb(236,46,54)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (2 samples, 0.01%)</title><rect x="25.9536%" y="1301" width="0.0120%" height="15" fill="rgb(245,213,5)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1311.50"></text></g><g><title>tokio::runtime::coop::budget (2 samples, 0.01%)</title><rect x="25.9536%" y="1285" width="0.0120%" height="15" fill="rgb(230,144,27)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1295.50"></text></g><g><title>tokio::runtime::coop::with_budget (2 samples, 0.01%)</title><rect x="25.9536%" y="1269" width="0.0120%" height="15" fill="rgb(220,86,6)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (2 samples, 0.01%)</title><rect x="25.9536%" y="1253" width="0.0120%" height="15" fill="rgb(240,20,13)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1263.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (2 samples, 0.01%)</title><rect x="25.9536%" y="1237" width="0.0120%" height="15" fill="rgb(217,89,34)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1247.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2 samples, 0.01%)</title><rect x="25.9536%" y="1221" width="0.0120%" height="15" fill="rgb(229,13,5)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1231.50"></text></g><g><title>tokio::runtime::task::raw::poll (2 samples, 0.01%)</title><rect x="25.9536%" y="1205" width="0.0120%" height="15" fill="rgb(244,67,35)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="25.9536%" y="1189" width="0.0120%" height="15" fill="rgb(221,40,2)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.01%)</title><rect x="25.9536%" y="1173" width="0.0120%" height="15" fill="rgb(237,157,21)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2 samples, 0.01%)</title><rect x="25.9536%" y="1157" width="0.0120%" height="15" fill="rgb(222,94,11)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="25.9536%" y="1141" width="0.0120%" height="15" fill="rgb(249,113,6)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1151.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="25.9536%" y="1125" width="0.0120%" height="15" fill="rgb(238,137,36)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1135.50"></text></g><g><title>__rust_try (2 samples, 0.01%)</title><rect x="25.9536%" y="1109" width="0.0120%" height="15" fill="rgb(210,102,26)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="25.9536%" y="1093" width="0.0120%" height="15" fill="rgb(218,30,30)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1103.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="25.9536%" y="1077" width="0.0120%" height="15" fill="rgb(214,67,26)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.01%)</title><rect x="25.9536%" y="1061" width="0.0120%" height="15" fill="rgb(251,9,53)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1071.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="25.9536%" y="1045" width="0.0120%" height="15" fill="rgb(228,204,25)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1055.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.01%)</title><rect x="25.9536%" y="1029" width="0.0120%" height="15" fill="rgb(207,153,8)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1039.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (2 samples, 0.01%)</title><rect x="25.9536%" y="1013" width="0.0120%" height="15" fill="rgb(242,9,16)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1023.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="25.9536%" y="997" width="0.0120%" height="15" fill="rgb(217,211,10)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="1007.50"></text></g><g><title>veilid_core::network_manager::native::network_udp::&lt;impl veilid_core::network_manager::native::Network&gt;::create_udp_listener_tasks::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="25.9536%" y="981" width="0.0120%" height="15" fill="rgb(219,228,52)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="991.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="25.9536%" y="965" width="0.0120%" height="15" fill="rgb(231,92,29)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="975.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (2 samples, 0.01%)</title><rect x="25.9536%" y="949" width="0.0120%" height="15" fill="rgb(232,8,23)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="959.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.01%)</title><rect x="25.9536%" y="933" width="0.0120%" height="15" fill="rgb(216,211,34)" fg:x="4334" fg:w="2"/><text x="26.2036%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (2 samples, 0.01%)</title><rect x="25.9656%" y="1317" width="0.0120%" height="15" fill="rgb(236,151,0)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1327.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (2 samples, 0.01%)</title><rect x="25.9656%" y="1301" width="0.0120%" height="15" fill="rgb(209,168,3)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (2 samples, 0.01%)</title><rect x="25.9656%" y="1285" width="0.0120%" height="15" fill="rgb(208,129,28)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (2 samples, 0.01%)</title><rect x="25.9656%" y="1269" width="0.0120%" height="15" fill="rgb(229,78,22)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (2 samples, 0.01%)</title><rect x="25.9656%" y="1253" width="0.0120%" height="15" fill="rgb(228,187,13)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1263.50"></text></g><g><title>tokio::runtime::coop::budget (2 samples, 0.01%)</title><rect x="25.9656%" y="1237" width="0.0120%" height="15" fill="rgb(240,119,24)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1247.50"></text></g><g><title>tokio::runtime::coop::with_budget (2 samples, 0.01%)</title><rect x="25.9656%" y="1221" width="0.0120%" height="15" fill="rgb(209,194,42)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (2 samples, 0.01%)</title><rect x="25.9656%" y="1205" width="0.0120%" height="15" fill="rgb(247,200,46)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1215.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (2 samples, 0.01%)</title><rect x="25.9656%" y="1189" width="0.0120%" height="15" fill="rgb(218,76,16)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1199.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2 samples, 0.01%)</title><rect x="25.9656%" y="1173" width="0.0120%" height="15" fill="rgb(225,21,48)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1183.50"></text></g><g><title>tokio::runtime::task::raw::poll (2 samples, 0.01%)</title><rect x="25.9656%" y="1157" width="0.0120%" height="15" fill="rgb(239,223,50)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="25.9656%" y="1141" width="0.0120%" height="15" fill="rgb(244,45,21)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.01%)</title><rect x="25.9656%" y="1125" width="0.0120%" height="15" fill="rgb(232,33,43)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2 samples, 0.01%)</title><rect x="25.9656%" y="1109" width="0.0120%" height="15" fill="rgb(209,8,3)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="25.9656%" y="1093" width="0.0120%" height="15" fill="rgb(214,25,53)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1103.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="25.9656%" y="1077" width="0.0120%" height="15" fill="rgb(254,186,54)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1087.50"></text></g><g><title>__rust_try (2 samples, 0.01%)</title><rect x="25.9656%" y="1061" width="0.0120%" height="15" fill="rgb(208,174,49)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="25.9656%" y="1045" width="0.0120%" height="15" fill="rgb(233,191,51)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="25.9656%" y="1029" width="0.0120%" height="15" fill="rgb(222,134,10)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.01%)</title><rect x="25.9656%" y="1013" width="0.0120%" height="15" fill="rgb(230,226,20)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1023.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="25.9656%" y="997" width="0.0120%" height="15" fill="rgb(251,111,25)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="1007.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.01%)</title><rect x="25.9656%" y="981" width="0.0120%" height="15" fill="rgb(224,40,46)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="991.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (2 samples, 0.01%)</title><rect x="25.9656%" y="965" width="0.0120%" height="15" fill="rgb(236,108,47)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="975.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="25.9656%" y="949" width="0.0120%" height="15" fill="rgb(234,93,0)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="959.50"></text></g><g><title>veilid_core::network_manager::native::network_udp::&lt;impl veilid_core::network_manager::native::Network&gt;::create_udp_listener_tasks::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="25.9656%" y="933" width="0.0120%" height="15" fill="rgb(224,213,32)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="25.9656%" y="917" width="0.0120%" height="15" fill="rgb(251,11,48)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="927.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (2 samples, 0.01%)</title><rect x="25.9656%" y="901" width="0.0120%" height="15" fill="rgb(236,173,5)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="911.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.01%)</title><rect x="25.9656%" y="885" width="0.0120%" height="15" fill="rgb(230,95,12)" fg:x="4336" fg:w="2"/><text x="26.2156%" y="895.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="25.9836%" y="1317" width="0.0120%" height="15" fill="rgb(232,209,1)" fg:x="4339" fg:w="2"/><text x="26.2336%" y="1327.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.01%)</title><rect x="25.9836%" y="1301" width="0.0120%" height="15" fill="rgb(232,6,1)" fg:x="4339" fg:w="2"/><text x="26.2336%" y="1311.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (2 samples, 0.01%)</title><rect x="25.9836%" y="1285" width="0.0120%" height="15" fill="rgb(210,224,50)" fg:x="4339" fg:w="2"/><text x="26.2336%" y="1295.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="25.9836%" y="1269" width="0.0120%" height="15" fill="rgb(228,127,35)" fg:x="4339" fg:w="2"/><text x="26.2336%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3 samples, 0.02%)</title><rect x="26.0135%" y="1317" width="0.0180%" height="15" fill="rgb(245,102,45)" fg:x="4344" fg:w="3"/><text x="26.2635%" y="1327.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3 samples, 0.02%)</title><rect x="26.0135%" y="1301" width="0.0180%" height="15" fill="rgb(214,1,49)" fg:x="4344" fg:w="3"/><text x="26.2635%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.02%)</title><rect x="26.0135%" y="1285" width="0.0180%" height="15" fill="rgb(226,163,40)" fg:x="4344" fg:w="3"/><text x="26.2635%" y="1295.50"></text></g><g><title>std::panicking::try (3 samples, 0.02%)</title><rect x="26.0135%" y="1269" width="0.0180%" height="15" fill="rgb(239,212,28)" fg:x="4344" fg:w="3"/><text x="26.2635%" y="1279.50"></text></g><g><title>__rust_try (3 samples, 0.02%)</title><rect x="26.0135%" y="1253" width="0.0180%" height="15" fill="rgb(220,20,13)" fg:x="4344" fg:w="3"/><text x="26.2635%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.02%)</title><rect x="26.0135%" y="1237" width="0.0180%" height="15" fill="rgb(210,164,35)" fg:x="4344" fg:w="3"/><text x="26.2635%" y="1247.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.02%)</title><rect x="26.0135%" y="1221" width="0.0180%" height="15" fill="rgb(248,109,41)" fg:x="4344" fg:w="3"/><text x="26.2635%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3 samples, 0.02%)</title><rect x="26.0135%" y="1205" width="0.0180%" height="15" fill="rgb(238,23,50)" fg:x="4344" fg:w="3"/><text x="26.2635%" y="1215.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3 samples, 0.02%)</title><rect x="26.0135%" y="1189" width="0.0180%" height="15" fill="rgb(211,48,49)" fg:x="4344" fg:w="3"/><text x="26.2635%" y="1199.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.02%)</title><rect x="26.0135%" y="1173" width="0.0180%" height="15" fill="rgb(223,36,21)" fg:x="4344" fg:w="3"/><text x="26.2635%" y="1183.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (3 samples, 0.02%)</title><rect x="26.0135%" y="1157" width="0.0180%" height="15" fill="rgb(207,123,46)" fg:x="4344" fg:w="3"/><text x="26.2635%" y="1167.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.02%)</title><rect x="26.0135%" y="1141" width="0.0180%" height="15" fill="rgb(240,218,32)" fg:x="4344" fg:w="3"/><text x="26.2635%" y="1151.50"></text></g><g><title>veilid_server::client_api::ClientApi::handle_connection::{{closure}} (2 samples, 0.01%)</title><rect x="26.0195%" y="1125" width="0.0120%" height="15" fill="rgb(252,5,43)" fg:x="4345" fg:w="2"/><text x="26.2695%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.01%)</title><rect x="26.0315%" y="1317" width="0.0120%" height="15" fill="rgb(252,84,19)" fg:x="4347" fg:w="2"/><text x="26.2815%" y="1327.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (3 samples, 0.02%)</title><rect x="26.0734%" y="1317" width="0.0180%" height="15" fill="rgb(243,152,39)" fg:x="4354" fg:w="3"/><text x="26.3234%" y="1327.50"></text></g><g><title>veilid_core::network_manager::native::Network::tick::{{closure}} (3 samples, 0.02%)</title><rect x="26.0974%" y="1285" width="0.0180%" height="15" fill="rgb(234,160,15)" fg:x="4358" fg:w="3"/><text x="26.3474%" y="1295.50"></text></g><g><title>veilid_tools::tick_task::TickTask&lt;E&gt;::tick::{{closure}} (2 samples, 0.01%)</title><rect x="26.1034%" y="1269" width="0.0120%" height="15" fill="rgb(237,34,20)" fg:x="4359" fg:w="2"/><text x="26.3534%" y="1279.50"></text></g><g><title>veilid_tools::must_join_single_future::MustJoinSingleFuture&lt;T&gt;::single_spawn::{{closure}} (2 samples, 0.01%)</title><rect x="26.1034%" y="1253" width="0.0120%" height="15" fill="rgb(229,97,13)" fg:x="4359" fg:w="2"/><text x="26.3534%" y="1263.50"></text></g><g><title>veilid_core::attachment_manager::AttachmentManager::attachment_maintainer::{{closure}}::{{closure}} (8 samples, 0.05%)</title><rect x="26.0914%" y="1317" width="0.0479%" height="15" fill="rgb(234,71,50)" fg:x="4357" fg:w="8"/><text x="26.3414%" y="1327.50"></text></g><g><title>veilid_core::network_manager::tasks::&lt;impl veilid_core::network_manager::NetworkManager&gt;::tick::{{closure}} (8 samples, 0.05%)</title><rect x="26.0914%" y="1301" width="0.0479%" height="15" fill="rgb(253,155,4)" fg:x="4357" fg:w="8"/><text x="26.3414%" y="1311.50"></text></g><g><title>veilid_tools::tick_task::TickTask&lt;E&gt;::tick::{{closure}} (3 samples, 0.02%)</title><rect x="26.1213%" y="1285" width="0.0180%" height="15" fill="rgb(222,185,37)" fg:x="4362" fg:w="3"/><text x="26.3713%" y="1295.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (2 samples, 0.01%)</title><rect x="26.1513%" y="1237" width="0.0120%" height="15" fill="rgb(251,177,13)" fg:x="4367" fg:w="2"/><text x="26.4013%" y="1247.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.01%)</title><rect x="26.1513%" y="1221" width="0.0120%" height="15" fill="rgb(250,179,40)" fg:x="4367" fg:w="2"/><text x="26.4013%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (2 samples, 0.01%)</title><rect x="26.1632%" y="1237" width="0.0120%" height="15" fill="rgb(242,44,2)" fg:x="4369" fg:w="2"/><text x="26.4132%" y="1247.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.01%)</title><rect x="26.1632%" y="1221" width="0.0120%" height="15" fill="rgb(216,177,13)" fg:x="4369" fg:w="2"/><text x="26.4132%" y="1231.50"></text></g><g><title>veilid_core::crypto::Crypto::verify_signatures (11 samples, 0.07%)</title><rect x="26.1453%" y="1317" width="0.0659%" height="15" fill="rgb(216,106,43)" fg:x="4366" fg:w="11"/><text x="26.3953%" y="1327.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::verify (11 samples, 0.07%)</title><rect x="26.1453%" y="1301" width="0.0659%" height="15" fill="rgb(216,183,2)" fg:x="4366" fg:w="11"/><text x="26.3953%" y="1311.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_prehashed (11 samples, 0.07%)</title><rect x="26.1453%" y="1285" width="0.0659%" height="15" fill="rgb(249,75,3)" fg:x="4366" fg:w="11"/><text x="26.3953%" y="1295.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (11 samples, 0.07%)</title><rect x="26.1453%" y="1269" width="0.0659%" height="15" fill="rgb(219,67,39)" fg:x="4366" fg:w="11"/><text x="26.3953%" y="1279.50"></text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (11 samples, 0.07%)</title><rect x="26.1453%" y="1253" width="0.0659%" height="15" fill="rgb(253,228,2)" fg:x="4366" fg:w="11"/><text x="26.3953%" y="1263.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (6 samples, 0.04%)</title><rect x="26.1752%" y="1237" width="0.0359%" height="15" fill="rgb(235,138,27)" fg:x="4371" fg:w="6"/><text x="26.4252%" y="1247.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (6 samples, 0.04%)</title><rect x="26.1752%" y="1221" width="0.0359%" height="15" fill="rgb(236,97,51)" fg:x="4371" fg:w="6"/><text x="26.4252%" y="1231.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.01%)</title><rect x="26.8519%" y="1061" width="0.0120%" height="15" fill="rgb(240,80,30)" fg:x="4484" fg:w="2"/><text x="27.1019%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (11 samples, 0.07%)</title><rect x="26.9238%" y="1045" width="0.0659%" height="15" fill="rgb(230,178,19)" fg:x="4496" fg:w="11"/><text x="27.1738%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (5 samples, 0.03%)</title><rect x="26.9597%" y="1029" width="0.0299%" height="15" fill="rgb(210,190,27)" fg:x="4502" fg:w="5"/><text x="27.2097%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (5 samples, 0.03%)</title><rect x="26.9597%" y="1013" width="0.0299%" height="15" fill="rgb(222,107,31)" fg:x="4502" fg:w="5"/><text x="27.2097%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.02%)</title><rect x="27.0256%" y="1029" width="0.0180%" height="15" fill="rgb(216,127,34)" fg:x="4513" fg:w="3"/><text x="27.2756%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="27.0316%" y="1013" width="0.0120%" height="15" fill="rgb(234,116,52)" fg:x="4514" fg:w="2"/><text x="27.2816%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.19%)</title><rect x="26.8639%" y="1061" width="0.1916%" height="15" fill="rgb(222,124,15)" fg:x="4486" fg:w="32"/><text x="27.1139%" y="1071.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (10 samples, 0.06%)</title><rect x="26.9956%" y="1045" width="0.0599%" height="15" fill="rgb(231,179,28)" fg:x="4508" fg:w="10"/><text x="27.2456%" y="1055.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.01%)</title><rect x="27.0435%" y="1029" width="0.0120%" height="15" fill="rgb(226,93,45)" fg:x="4516" fg:w="2"/><text x="27.2935%" y="1039.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (24 samples, 0.14%)</title><rect x="27.0555%" y="1061" width="0.1437%" height="15" fill="rgb(215,8,51)" fg:x="4518" fg:w="24"/><text x="27.3055%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (6 samples, 0.04%)</title><rect x="27.1633%" y="1045" width="0.0359%" height="15" fill="rgb(223,106,5)" fg:x="4536" fg:w="6"/><text x="27.4133%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (5 samples, 0.03%)</title><rect x="27.1992%" y="1061" width="0.0299%" height="15" fill="rgb(250,191,5)" fg:x="4542" fg:w="5"/><text x="27.4492%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (11 samples, 0.07%)</title><rect x="27.2292%" y="1061" width="0.0659%" height="15" fill="rgb(242,132,44)" fg:x="4547" fg:w="11"/><text x="27.4792%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (8 samples, 0.05%)</title><rect x="27.2471%" y="1045" width="0.0479%" height="15" fill="rgb(251,152,29)" fg:x="4550" fg:w="8"/><text x="27.4971%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (48 samples, 0.29%)</title><rect x="27.3010%" y="1061" width="0.2874%" height="15" fill="rgb(218,179,5)" fg:x="4559" fg:w="48"/><text x="27.5510%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (14 samples, 0.08%)</title><rect x="27.5046%" y="1045" width="0.0838%" height="15" fill="rgb(227,67,19)" fg:x="4593" fg:w="14"/><text x="27.7546%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (11 samples, 0.07%)</title><rect x="27.5885%" y="1061" width="0.0659%" height="15" fill="rgb(233,119,31)" fg:x="4607" fg:w="11"/><text x="27.8385%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (9 samples, 0.05%)</title><rect x="27.6005%" y="1045" width="0.0539%" height="15" fill="rgb(241,120,22)" fg:x="4609" fg:w="9"/><text x="27.8505%" y="1055.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (252 samples, 1.51%)</title><rect x="26.2112%" y="1077" width="1.5091%" height="15" fill="rgb(224,102,30)" fg:x="4377" fg:w="252"/><text x="26.4612%" y="1087.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (11 samples, 0.07%)</title><rect x="27.6544%" y="1061" width="0.0659%" height="15" fill="rgb(210,164,37)" fg:x="4618" fg:w="11"/><text x="27.9044%" y="1071.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (10 samples, 0.06%)</title><rect x="27.6603%" y="1045" width="0.0599%" height="15" fill="rgb(226,191,16)" fg:x="4619" fg:w="10"/><text x="27.9103%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.01%)</title><rect x="27.7082%" y="1029" width="0.0120%" height="15" fill="rgb(214,40,45)" fg:x="4627" fg:w="2"/><text x="27.9582%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="27.7082%" y="1013" width="0.0120%" height="15" fill="rgb(244,29,26)" fg:x="4627" fg:w="2"/><text x="27.9582%" y="1023.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (253 samples, 1.52%)</title><rect x="26.2112%" y="1125" width="1.5151%" height="15" fill="rgb(216,16,5)" fg:x="4377" fg:w="253"/><text x="26.4612%" y="1135.50"></text></g><g><title>chacha20::backends::avx2::rounds (253 samples, 1.52%)</title><rect x="26.2112%" y="1109" width="1.5151%" height="15" fill="rgb(249,76,35)" fg:x="4377" fg:w="253"/><text x="26.4612%" y="1119.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (253 samples, 1.52%)</title><rect x="26.2112%" y="1093" width="1.5151%" height="15" fill="rgb(207,11,44)" fg:x="4377" fg:w="253"/><text x="26.4612%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="27.7382%" y="1045" width="0.0120%" height="15" fill="rgb(228,190,49)" fg:x="4632" fg:w="2"/><text x="27.9882%" y="1055.50"></text></g><g><title>veilid_core::crypto::envelope::Envelope::decrypt_body (260 samples, 1.56%)</title><rect x="26.2112%" y="1317" width="1.5570%" height="15" fill="rgb(214,173,12)" fg:x="4377" fg:w="260"/><text x="26.4612%" y="1327.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_no_auth_aligned_8 (260 samples, 1.56%)</title><rect x="26.2112%" y="1301" width="1.5570%" height="15" fill="rgb(218,26,35)" fg:x="4377" fg:w="260"/><text x="26.4612%" y="1311.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_b2b_no_auth (260 samples, 1.56%)</title><rect x="26.2112%" y="1285" width="1.5570%" height="15" fill="rgb(220,200,19)" fg:x="4377" fg:w="260"/><text x="26.4612%" y="1295.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b (260 samples, 1.56%)</title><rect x="26.2112%" y="1269" width="1.5570%" height="15" fill="rgb(239,95,49)" fg:x="4377" fg:w="260"/><text x="26.4612%" y="1279.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (260 samples, 1.56%)</title><rect x="26.2112%" y="1253" width="1.5570%" height="15" fill="rgb(235,85,53)" fg:x="4377" fg:w="260"/><text x="26.4612%" y="1263.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b::{{closure}} (260 samples, 1.56%)</title><rect x="26.2112%" y="1237" width="1.5570%" height="15" fill="rgb(233,133,31)" fg:x="4377" fg:w="260"/><text x="26.4612%" y="1247.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (260 samples, 1.56%)</title><rect x="26.2112%" y="1221" width="1.5570%" height="15" fill="rgb(218,25,20)" fg:x="4377" fg:w="260"/><text x="26.4612%" y="1231.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (260 samples, 1.56%)</title><rect x="26.2112%" y="1205" width="1.5570%" height="15" fill="rgb(252,210,38)" fg:x="4377" fg:w="260"/><text x="26.4612%" y="1215.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (260 samples, 1.56%)</title><rect x="26.2112%" y="1189" width="1.5570%" height="15" fill="rgb(242,134,21)" fg:x="4377" fg:w="260"/><text x="26.4612%" y="1199.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (260 samples, 1.56%)</title><rect x="26.2112%" y="1173" width="1.5570%" height="15" fill="rgb(213,28,48)" fg:x="4377" fg:w="260"/><text x="26.4612%" y="1183.50"></text></g><g><title>chacha20::backends::avx2::inner (260 samples, 1.56%)</title><rect x="26.2112%" y="1157" width="1.5570%" height="15" fill="rgb(250,196,2)" fg:x="4377" fg:w="260"/><text x="26.4612%" y="1167.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (260 samples, 1.56%)</title><rect x="26.2112%" y="1141" width="1.5570%" height="15" fill="rgb(227,5,17)" fg:x="4377" fg:w="260"/><text x="26.4612%" y="1151.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (7 samples, 0.04%)</title><rect x="27.7262%" y="1125" width="0.0419%" height="15" fill="rgb(221,226,24)" fg:x="4630" fg:w="7"/><text x="27.9762%" y="1135.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (7 samples, 0.04%)</title><rect x="27.7262%" y="1109" width="0.0419%" height="15" fill="rgb(211,5,48)" fg:x="4630" fg:w="7"/><text x="27.9762%" y="1119.50"></text></g><g><title>chacha20::backends::avx2::rounds (7 samples, 0.04%)</title><rect x="27.7262%" y="1093" width="0.0419%" height="15" fill="rgb(219,150,6)" fg:x="4630" fg:w="7"/><text x="27.9762%" y="1103.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (7 samples, 0.04%)</title><rect x="27.7262%" y="1077" width="0.0419%" height="15" fill="rgb(251,46,16)" fg:x="4630" fg:w="7"/><text x="27.9762%" y="1087.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (7 samples, 0.04%)</title><rect x="27.7262%" y="1061" width="0.0419%" height="15" fill="rgb(220,204,40)" fg:x="4630" fg:w="7"/><text x="27.9762%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.02%)</title><rect x="27.7502%" y="1045" width="0.0180%" height="15" fill="rgb(211,85,2)" fg:x="4634" fg:w="3"/><text x="28.0002%" y="1055.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::compress (8 samples, 0.05%)</title><rect x="27.7801%" y="1269" width="0.0479%" height="15" fill="rgb(229,17,7)" fg:x="4639" fg:w="8"/><text x="28.0301%" y="1279.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invert (8 samples, 0.05%)</title><rect x="27.7801%" y="1253" width="0.0479%" height="15" fill="rgb(239,72,28)" fg:x="4639" fg:w="8"/><text x="28.0301%" y="1263.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (8 samples, 0.05%)</title><rect x="27.7801%" y="1237" width="0.0479%" height="15" fill="rgb(230,47,54)" fg:x="4639" fg:w="8"/><text x="28.0301%" y="1247.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (7 samples, 0.04%)</title><rect x="27.7861%" y="1221" width="0.0419%" height="15" fill="rgb(214,50,8)" fg:x="4640" fg:w="7"/><text x="28.0361%" y="1231.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (2 samples, 0.01%)</title><rect x="27.8639%" y="1221" width="0.0120%" height="15" fill="rgb(216,198,43)" fg:x="4653" fg:w="2"/><text x="28.1139%" y="1231.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (3 samples, 0.02%)</title><rect x="27.8759%" y="1221" width="0.0180%" height="15" fill="rgb(234,20,35)" fg:x="4655" fg:w="3"/><text x="28.1259%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (8 samples, 0.05%)</title><rect x="27.8639%" y="1237" width="0.0479%" height="15" fill="rgb(254,45,19)" fg:x="4653" fg:w="8"/><text x="28.1139%" y="1247.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (3 samples, 0.02%)</title><rect x="27.8939%" y="1221" width="0.0180%" height="15" fill="rgb(219,14,44)" fg:x="4658" fg:w="3"/><text x="28.1439%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (2 samples, 0.01%)</title><rect x="27.8999%" y="1205" width="0.0120%" height="15" fill="rgb(217,220,26)" fg:x="4659" fg:w="2"/><text x="28.1499%" y="1215.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (6 samples, 0.04%)</title><rect x="27.9119%" y="1221" width="0.0359%" height="15" fill="rgb(213,158,28)" fg:x="4661" fg:w="6"/><text x="28.1619%" y="1231.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (6 samples, 0.04%)</title><rect x="27.9119%" y="1205" width="0.0359%" height="15" fill="rgb(252,51,52)" fg:x="4661" fg:w="6"/><text x="28.1619%" y="1215.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.02%)</title><rect x="27.9238%" y="1189" width="0.0240%" height="15" fill="rgb(246,89,16)" fg:x="4663" fg:w="4"/><text x="28.1738%" y="1199.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.02%)</title><rect x="27.9238%" y="1173" width="0.0240%" height="15" fill="rgb(216,158,49)" fg:x="4663" fg:w="4"/><text x="28.1738%" y="1183.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (6 samples, 0.04%)</title><rect x="27.9478%" y="1221" width="0.0359%" height="15" fill="rgb(236,107,19)" fg:x="4667" fg:w="6"/><text x="28.1978%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (13 samples, 0.08%)</title><rect x="27.9119%" y="1237" width="0.0778%" height="15" fill="rgb(228,185,30)" fg:x="4661" fg:w="13"/><text x="28.1619%" y="1247.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (5 samples, 0.03%)</title><rect x="27.9897%" y="1237" width="0.0299%" height="15" fill="rgb(246,134,8)" fg:x="4674" fg:w="5"/><text x="28.2397%" y="1247.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (4 samples, 0.02%)</title><rect x="27.9957%" y="1221" width="0.0240%" height="15" fill="rgb(214,143,50)" fg:x="4675" fg:w="4"/><text x="28.2457%" y="1231.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="28.0436%" y="1141" width="0.0120%" height="15" fill="rgb(228,75,8)" fg:x="4683" fg:w="2"/><text x="28.2936%" y="1151.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (7 samples, 0.04%)</title><rect x="28.0196%" y="1221" width="0.0419%" height="15" fill="rgb(207,175,4)" fg:x="4679" fg:w="7"/><text x="28.2696%" y="1231.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (7 samples, 0.04%)</title><rect x="28.0196%" y="1205" width="0.0419%" height="15" fill="rgb(205,108,24)" fg:x="4679" fg:w="7"/><text x="28.2696%" y="1215.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.02%)</title><rect x="28.0376%" y="1189" width="0.0240%" height="15" fill="rgb(244,120,49)" fg:x="4682" fg:w="4"/><text x="28.2876%" y="1199.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.02%)</title><rect x="28.0376%" y="1173" width="0.0240%" height="15" fill="rgb(223,47,38)" fg:x="4682" fg:w="4"/><text x="28.2876%" y="1183.50"></text></g><g><title>core::mem::replace (3 samples, 0.02%)</title><rect x="28.0436%" y="1157" width="0.0180%" height="15" fill="rgb(229,179,11)" fg:x="4683" fg:w="3"/><text x="28.2936%" y="1167.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (9 samples, 0.05%)</title><rect x="28.0616%" y="1221" width="0.0539%" height="15" fill="rgb(231,122,1)" fg:x="4686" fg:w="9"/><text x="28.3116%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (17 samples, 0.10%)</title><rect x="28.0196%" y="1237" width="0.1018%" height="15" fill="rgb(245,119,9)" fg:x="4679" fg:w="17"/><text x="28.2696%" y="1247.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (11 samples, 0.07%)</title><rect x="28.1214%" y="1237" width="0.0659%" height="15" fill="rgb(241,163,25)" fg:x="4696" fg:w="11"/><text x="28.3714%" y="1247.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (11 samples, 0.07%)</title><rect x="28.1214%" y="1221" width="0.0659%" height="15" fill="rgb(217,214,3)" fg:x="4696" fg:w="11"/><text x="28.3714%" y="1231.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (13 samples, 0.08%)</title><rect x="28.3909%" y="1205" width="0.0778%" height="15" fill="rgb(240,86,28)" fg:x="4741" fg:w="13"/><text x="28.6409%" y="1215.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (50 samples, 0.30%)</title><rect x="28.1873%" y="1221" width="0.2994%" height="15" fill="rgb(215,47,9)" fg:x="4707" fg:w="50"/><text x="28.4373%" y="1231.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="28.4688%" y="1205" width="0.0180%" height="15" fill="rgb(252,25,45)" fg:x="4754" fg:w="3"/><text x="28.7188%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (51 samples, 0.31%)</title><rect x="28.1873%" y="1237" width="0.3054%" height="15" fill="rgb(251,164,9)" fg:x="4707" fg:w="51"/><text x="28.4373%" y="1247.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.01%)</title><rect x="28.6065%" y="1157" width="0.0120%" height="15" fill="rgb(233,194,0)" fg:x="4777" fg:w="2"/><text x="28.8565%" y="1167.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.01%)</title><rect x="28.6185%" y="1157" width="0.0120%" height="15" fill="rgb(249,111,24)" fg:x="4779" fg:w="2"/><text x="28.8685%" y="1167.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="28.6364%" y="1141" width="0.0120%" height="15" fill="rgb(250,223,3)" fg:x="4782" fg:w="2"/><text x="28.8864%" y="1151.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (25 samples, 0.15%)</title><rect x="28.5047%" y="1205" width="0.1497%" height="15" fill="rgb(236,178,37)" fg:x="4760" fg:w="25"/><text x="28.7547%" y="1215.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12 samples, 0.07%)</title><rect x="28.5825%" y="1189" width="0.0719%" height="15" fill="rgb(241,158,50)" fg:x="4773" fg:w="12"/><text x="28.8325%" y="1199.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (11 samples, 0.07%)</title><rect x="28.5885%" y="1173" width="0.0659%" height="15" fill="rgb(213,121,41)" fg:x="4774" fg:w="11"/><text x="28.8385%" y="1183.50"></text></g><g><title>core::mem::replace (4 samples, 0.02%)</title><rect x="28.6305%" y="1157" width="0.0240%" height="15" fill="rgb(240,92,3)" fg:x="4781" fg:w="4"/><text x="28.8805%" y="1167.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (28 samples, 0.17%)</title><rect x="28.4987%" y="1221" width="0.1677%" height="15" fill="rgb(205,123,3)" fg:x="4759" fg:w="28"/><text x="28.7487%" y="1231.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (15 samples, 0.09%)</title><rect x="28.6664%" y="1221" width="0.0898%" height="15" fill="rgb(205,97,47)" fg:x="4787" fg:w="15"/><text x="28.9164%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (8 samples, 0.05%)</title><rect x="28.7083%" y="1205" width="0.0479%" height="15" fill="rgb(247,152,14)" fg:x="4794" fg:w="8"/><text x="28.9583%" y="1215.50"></text></g><g><title>__memcpy_avx_unaligned_erms (5 samples, 0.03%)</title><rect x="28.7263%" y="1189" width="0.0299%" height="15" fill="rgb(248,195,53)" fg:x="4797" fg:w="5"/><text x="28.9763%" y="1199.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.04%)</title><rect x="28.8041%" y="1205" width="0.0419%" height="15" fill="rgb(226,201,16)" fg:x="4810" fg:w="7"/><text x="29.0541%" y="1215.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.04%)</title><rect x="28.8101%" y="1189" width="0.0359%" height="15" fill="rgb(205,98,0)" fg:x="4811" fg:w="6"/><text x="29.0601%" y="1199.50"></text></g><g><title>core::mem::replace (6 samples, 0.04%)</title><rect x="28.8101%" y="1173" width="0.0359%" height="15" fill="rgb(214,191,48)" fg:x="4811" fg:w="6"/><text x="29.0601%" y="1183.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="28.8281%" y="1157" width="0.0180%" height="15" fill="rgb(237,112,39)" fg:x="4814" fg:w="3"/><text x="29.0781%" y="1167.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square2 (26 samples, 0.16%)</title><rect x="28.7622%" y="1221" width="0.1557%" height="15" fill="rgb(247,203,27)" fg:x="4803" fg:w="26"/><text x="29.0122%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (12 samples, 0.07%)</title><rect x="28.8460%" y="1205" width="0.0719%" height="15" fill="rgb(235,124,28)" fg:x="4817" fg:w="12"/><text x="29.0960%" y="1215.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="29.0736%" y="1189" width="0.0180%" height="15" fill="rgb(208,207,46)" fg:x="4855" fg:w="3"/><text x="29.3236%" y="1199.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (107 samples, 0.64%)</title><rect x="28.4927%" y="1237" width="0.6408%" height="15" fill="rgb(234,176,4)" fg:x="4758" fg:w="107"/><text x="28.7427%" y="1247.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (36 samples, 0.22%)</title><rect x="28.9179%" y="1221" width="0.2156%" height="15" fill="rgb(230,133,28)" fg:x="4829" fg:w="36"/><text x="29.1679%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (36 samples, 0.22%)</title><rect x="28.9179%" y="1205" width="0.2156%" height="15" fill="rgb(211,137,40)" fg:x="4829" fg:w="36"/><text x="29.1679%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (7 samples, 0.04%)</title><rect x="29.0916%" y="1189" width="0.0419%" height="15" fill="rgb(254,35,13)" fg:x="4858" fg:w="7"/><text x="29.3416%" y="1199.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::non_adjacent_form (3 samples, 0.02%)</title><rect x="29.1335%" y="1237" width="0.0180%" height="15" fill="rgb(225,49,51)" fg:x="4865" fg:w="3"/><text x="29.3835%" y="1247.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (222 samples, 1.33%)</title><rect x="27.8280%" y="1269" width="1.3294%" height="15" fill="rgb(251,10,15)" fg:x="4647" fg:w="222"/><text x="28.0780%" y="1279.50"></text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (222 samples, 1.33%)</title><rect x="27.8280%" y="1253" width="1.3294%" height="15" fill="rgb(228,207,15)" fg:x="4647" fg:w="222"/><text x="28.0780%" y="1263.50"></text></g><g><title>veilid_core::crypto::envelope::Envelope::from_signed_data (233 samples, 1.40%)</title><rect x="27.7681%" y="1317" width="1.3953%" height="15" fill="rgb(241,99,19)" fg:x="4637" fg:w="233"/><text x="28.0181%" y="1327.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::verify (233 samples, 1.40%)</title><rect x="27.7681%" y="1301" width="1.3953%" height="15" fill="rgb(207,104,49)" fg:x="4637" fg:w="233"/><text x="28.0181%" y="1311.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_prehashed (231 samples, 1.38%)</title><rect x="27.7801%" y="1285" width="1.3833%" height="15" fill="rgb(234,99,18)" fg:x="4639" fg:w="231"/><text x="28.0301%" y="1295.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (13 samples, 0.08%)</title><rect x="30.1216%" y="1045" width="0.0778%" height="15" fill="rgb(213,191,49)" fg:x="5030" fg:w="13"/><text x="30.3716%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (5 samples, 0.03%)</title><rect x="30.1695%" y="1029" width="0.0299%" height="15" fill="rgb(210,226,19)" fg:x="5038" fg:w="5"/><text x="30.4195%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (5 samples, 0.03%)</title><rect x="30.1695%" y="1013" width="0.0299%" height="15" fill="rgb(229,97,18)" fg:x="5038" fg:w="5"/><text x="30.4195%" y="1023.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.03%)</title><rect x="30.1994%" y="1045" width="0.0299%" height="15" fill="rgb(211,167,15)" fg:x="5043" fg:w="5"/><text x="30.4494%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (14 samples, 0.08%)</title><rect x="30.3132%" y="1029" width="0.0838%" height="15" fill="rgb(210,169,34)" fg:x="5062" fg:w="14"/><text x="30.5632%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.05%)</title><rect x="30.3491%" y="1013" width="0.0479%" height="15" fill="rgb(241,121,31)" fg:x="5068" fg:w="8"/><text x="30.5991%" y="1023.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.02%)</title><rect x="30.3970%" y="1029" width="0.0240%" height="15" fill="rgb(232,40,11)" fg:x="5076" fg:w="4"/><text x="30.6470%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.40%)</title><rect x="30.0258%" y="1061" width="0.4012%" height="15" fill="rgb(205,86,26)" fg:x="5014" fg:w="67"/><text x="30.2758%" y="1071.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (33 samples, 0.20%)</title><rect x="30.2294%" y="1045" width="0.1976%" height="15" fill="rgb(231,126,28)" fg:x="5048" fg:w="33"/><text x="30.4794%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (31 samples, 0.19%)</title><rect x="30.4270%" y="1061" width="0.1856%" height="15" fill="rgb(219,221,18)" fg:x="5081" fg:w="31"/><text x="30.6770%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (7 samples, 0.04%)</title><rect x="30.5707%" y="1045" width="0.0419%" height="15" fill="rgb(211,40,0)" fg:x="5105" fg:w="7"/><text x="30.8207%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (17 samples, 0.10%)</title><rect x="30.6126%" y="1061" width="0.1018%" height="15" fill="rgb(239,85,43)" fg:x="5112" fg:w="17"/><text x="30.8626%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (4 samples, 0.02%)</title><rect x="30.6905%" y="1045" width="0.0240%" height="15" fill="rgb(231,55,21)" fg:x="5125" fg:w="4"/><text x="30.9405%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (19 samples, 0.11%)</title><rect x="30.7144%" y="1061" width="0.1138%" height="15" fill="rgb(225,184,43)" fg:x="5129" fg:w="19"/><text x="30.9644%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (7 samples, 0.04%)</title><rect x="30.7863%" y="1045" width="0.0419%" height="15" fill="rgb(251,158,41)" fg:x="5141" fg:w="7"/><text x="31.0363%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (4 samples, 0.02%)</title><rect x="30.8282%" y="1061" width="0.0240%" height="15" fill="rgb(234,159,37)" fg:x="5148" fg:w="4"/><text x="31.0782%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (68 samples, 0.41%)</title><rect x="30.8521%" y="1061" width="0.4072%" height="15" fill="rgb(216,204,22)" fg:x="5152" fg:w="68"/><text x="31.1021%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (9 samples, 0.05%)</title><rect x="31.2055%" y="1045" width="0.0539%" height="15" fill="rgb(214,17,3)" fg:x="5211" fg:w="9"/><text x="31.4555%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (22 samples, 0.13%)</title><rect x="31.2594%" y="1061" width="0.1317%" height="15" fill="rgb(212,111,17)" fg:x="5220" fg:w="22"/><text x="31.5094%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (22 samples, 0.13%)</title><rect x="31.2594%" y="1045" width="0.1317%" height="15" fill="rgb(221,157,24)" fg:x="5220" fg:w="22"/><text x="31.5094%" y="1055.50"></text></g><g><title>chacha20::backends::avx2::rounds (383 samples, 2.29%)</title><rect x="29.1634%" y="1109" width="2.2936%" height="15" fill="rgb(252,16,13)" fg:x="4870" fg:w="383"/><text x="29.4134%" y="1119.50">c..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (383 samples, 2.29%)</title><rect x="29.1634%" y="1093" width="2.2936%" height="15" fill="rgb(221,62,2)" fg:x="4870" fg:w="383"/><text x="29.4134%" y="1103.50">c..</text></g><g><title>chacha20::backends::avx2::add_xor_rot (383 samples, 2.29%)</title><rect x="29.1634%" y="1077" width="2.2936%" height="15" fill="rgb(247,87,22)" fg:x="4870" fg:w="383"/><text x="29.4134%" y="1087.50">c..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (11 samples, 0.07%)</title><rect x="31.3911%" y="1061" width="0.0659%" height="15" fill="rgb(215,73,9)" fg:x="5242" fg:w="11"/><text x="31.6411%" y="1071.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (11 samples, 0.07%)</title><rect x="31.3911%" y="1045" width="0.0659%" height="15" fill="rgb(207,175,33)" fg:x="5242" fg:w="11"/><text x="31.6411%" y="1055.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (384 samples, 2.30%)</title><rect x="29.1634%" y="1125" width="2.2995%" height="15" fill="rgb(243,129,54)" fg:x="4870" fg:w="384"/><text x="29.4134%" y="1135.50">&lt;..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="31.4749%" y="1045" width="0.0120%" height="15" fill="rgb(227,119,45)" fg:x="5256" fg:w="2"/><text x="31.7249%" y="1055.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (2 samples, 0.01%)</title><rect x="31.4749%" y="1029" width="0.0120%" height="15" fill="rgb(205,109,36)" fg:x="5256" fg:w="2"/><text x="31.7249%" y="1039.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (5 samples, 0.03%)</title><rect x="31.4929%" y="1045" width="0.0299%" height="15" fill="rgb(205,6,39)" fg:x="5259" fg:w="5"/><text x="31.7429%" y="1055.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (11 samples, 0.07%)</title><rect x="31.4630%" y="1125" width="0.0659%" height="15" fill="rgb(221,32,16)" fg:x="5254" fg:w="11"/><text x="31.7130%" y="1135.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (11 samples, 0.07%)</title><rect x="31.4630%" y="1109" width="0.0659%" height="15" fill="rgb(228,144,50)" fg:x="5254" fg:w="11"/><text x="31.7130%" y="1119.50"></text></g><g><title>chacha20::backends::avx2::rounds (11 samples, 0.07%)</title><rect x="31.4630%" y="1093" width="0.0659%" height="15" fill="rgb(229,201,53)" fg:x="5254" fg:w="11"/><text x="31.7130%" y="1103.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (11 samples, 0.07%)</title><rect x="31.4630%" y="1077" width="0.0659%" height="15" fill="rgb(249,153,27)" fg:x="5254" fg:w="11"/><text x="31.7130%" y="1087.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (11 samples, 0.07%)</title><rect x="31.4630%" y="1061" width="0.0659%" height="15" fill="rgb(227,106,25)" fg:x="5254" fg:w="11"/><text x="31.7130%" y="1071.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_no_auth_unaligned (396 samples, 2.37%)</title><rect x="29.1634%" y="1301" width="2.3714%" height="15" fill="rgb(230,65,29)" fg:x="4870" fg:w="396"/><text x="29.4134%" y="1311.50">&lt;v..</text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_b2b_no_auth (396 samples, 2.37%)</title><rect x="29.1634%" y="1285" width="2.3714%" height="15" fill="rgb(221,57,46)" fg:x="4870" fg:w="396"/><text x="29.4134%" y="1295.50">&lt;v..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b (396 samples, 2.37%)</title><rect x="29.1634%" y="1269" width="2.3714%" height="15" fill="rgb(229,161,17)" fg:x="4870" fg:w="396"/><text x="29.4134%" y="1279.50">ci..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (396 samples, 2.37%)</title><rect x="29.1634%" y="1253" width="2.3714%" height="15" fill="rgb(222,213,11)" fg:x="4870" fg:w="396"/><text x="29.4134%" y="1263.50">co..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b::{{closure}} (396 samples, 2.37%)</title><rect x="29.1634%" y="1237" width="2.3714%" height="15" fill="rgb(235,35,13)" fg:x="4870" fg:w="396"/><text x="29.4134%" y="1247.50">ci..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (396 samples, 2.37%)</title><rect x="29.1634%" y="1221" width="2.3714%" height="15" fill="rgb(233,158,34)" fg:x="4870" fg:w="396"/><text x="29.4134%" y="1231.50">&lt;c..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (396 samples, 2.37%)</title><rect x="29.1634%" y="1205" width="2.3714%" height="15" fill="rgb(215,151,48)" fg:x="4870" fg:w="396"/><text x="29.4134%" y="1215.50">ci..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (396 samples, 2.37%)</title><rect x="29.1634%" y="1189" width="2.3714%" height="15" fill="rgb(229,84,14)" fg:x="4870" fg:w="396"/><text x="29.4134%" y="1199.50">&lt;c..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (396 samples, 2.37%)</title><rect x="29.1634%" y="1173" width="2.3714%" height="15" fill="rgb(229,68,14)" fg:x="4870" fg:w="396"/><text x="29.4134%" y="1183.50">&lt;c..</text></g><g><title>chacha20::backends::avx2::inner (396 samples, 2.37%)</title><rect x="29.1634%" y="1157" width="2.3714%" height="15" fill="rgb(243,106,26)" fg:x="4870" fg:w="396"/><text x="29.4134%" y="1167.50">ch..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (396 samples, 2.37%)</title><rect x="29.1634%" y="1141" width="2.3714%" height="15" fill="rgb(206,45,38)" fg:x="4870" fg:w="396"/><text x="29.4134%" y="1151.50">&lt;c..</text></g><g><title>ed25519_dalek::public::PublicKey::from_bytes (3 samples, 0.02%)</title><rect x="31.5348%" y="1269" width="0.0180%" height="15" fill="rgb(226,6,15)" fg:x="5266" fg:w="3"/><text x="31.7848%" y="1279.50"></text></g><g><title>curve25519_dalek::edwards::CompressedEdwardsY::decompress (3 samples, 0.02%)</title><rect x="31.5348%" y="1253" width="0.0180%" height="15" fill="rgb(232,22,54)" fg:x="5266" fg:w="3"/><text x="31.7848%" y="1263.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (3 samples, 0.02%)</title><rect x="31.5348%" y="1237" width="0.0180%" height="15" fill="rgb(229,222,32)" fg:x="5266" fg:w="3"/><text x="31.7848%" y="1247.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::verify (4 samples, 0.02%)</title><rect x="31.5348%" y="1285" width="0.0240%" height="15" fill="rgb(228,62,29)" fg:x="5266" fg:w="4"/><text x="31.7848%" y="1295.50"></text></g><g><title>veilid_core::crypto::envelope::Envelope::to_encrypted_data (405 samples, 2.43%)</title><rect x="29.1634%" y="1317" width="2.4253%" height="15" fill="rgb(251,103,34)" fg:x="4870" fg:w="405"/><text x="29.4134%" y="1327.50">ve..</text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::sign (9 samples, 0.05%)</title><rect x="31.5348%" y="1301" width="0.0539%" height="15" fill="rgb(233,12,30)" fg:x="5266" fg:w="9"/><text x="31.7848%" y="1311.50"></text></g><g><title>ed25519_dalek::keypair::Keypair::sign_prehashed (5 samples, 0.03%)</title><rect x="31.5588%" y="1285" width="0.0299%" height="15" fill="rgb(238,52,0)" fg:x="5270" fg:w="5"/><text x="31.8088%" y="1295.50"></text></g><g><title>ed25519_dalek::secret::ExpandedSecretKey::sign_prehashed (5 samples, 0.03%)</title><rect x="31.5588%" y="1269" width="0.0299%" height="15" fill="rgb(223,98,5)" fg:x="5270" fg:w="5"/><text x="31.8088%" y="1279.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="31.6366%" y="1045" width="0.0180%" height="15" fill="rgb(228,75,37)" fg:x="5283" fg:w="3"/><text x="31.8866%" y="1055.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (3 samples, 0.02%)</title><rect x="31.6366%" y="1029" width="0.0180%" height="15" fill="rgb(205,115,49)" fg:x="5283" fg:w="3"/><text x="31.8866%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.01%)</title><rect x="31.6426%" y="1013" width="0.0120%" height="15" fill="rgb(250,154,43)" fg:x="5284" fg:w="2"/><text x="31.8926%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="31.6426%" y="997" width="0.0120%" height="15" fill="rgb(226,43,29)" fg:x="5284" fg:w="2"/><text x="31.8926%" y="1007.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (23 samples, 0.14%)</title><rect x="31.5947%" y="1061" width="0.1377%" height="15" fill="rgb(249,228,39)" fg:x="5276" fg:w="23"/><text x="31.8447%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (12 samples, 0.07%)</title><rect x="31.6606%" y="1045" width="0.0719%" height="15" fill="rgb(216,79,43)" fg:x="5287" fg:w="12"/><text x="31.9106%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.05%)</title><rect x="31.7744%" y="1045" width="0.0479%" height="15" fill="rgb(228,95,12)" fg:x="5306" fg:w="8"/><text x="32.0244%" y="1055.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (2 samples, 0.01%)</title><rect x="31.8103%" y="1029" width="0.0120%" height="15" fill="rgb(249,221,15)" fg:x="5312" fg:w="2"/><text x="32.0603%" y="1039.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (45 samples, 0.27%)</title><rect x="31.5947%" y="1109" width="0.2695%" height="15" fill="rgb(233,34,13)" fg:x="5276" fg:w="45"/><text x="31.8447%" y="1119.50"></text></g><g><title>chacha20::backends::avx2::rounds (45 samples, 0.27%)</title><rect x="31.5947%" y="1093" width="0.2695%" height="15" fill="rgb(214,103,39)" fg:x="5276" fg:w="45"/><text x="31.8447%" y="1103.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (45 samples, 0.27%)</title><rect x="31.5947%" y="1077" width="0.2695%" height="15" fill="rgb(251,126,39)" fg:x="5276" fg:w="45"/><text x="31.8447%" y="1087.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (22 samples, 0.13%)</title><rect x="31.7324%" y="1061" width="0.1317%" height="15" fill="rgb(214,216,36)" fg:x="5299" fg:w="22"/><text x="31.9824%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (7 samples, 0.04%)</title><rect x="31.8223%" y="1045" width="0.0419%" height="15" fill="rgb(220,221,8)" fg:x="5314" fg:w="7"/><text x="32.0723%" y="1055.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.02%)</title><rect x="31.8402%" y="1029" width="0.0240%" height="15" fill="rgb(240,216,3)" fg:x="5317" fg:w="4"/><text x="32.0902%" y="1039.50"></text></g><g><title>core::ptr::write (6 samples, 0.04%)</title><rect x="33.0379%" y="837" width="0.0359%" height="15" fill="rgb(232,218,17)" fg:x="5517" fg:w="6"/><text x="33.2879%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (158 samples, 0.95%)</title><rect x="32.1396%" y="885" width="0.9462%" height="15" fill="rgb(229,163,45)" fg:x="5367" fg:w="158"/><text x="32.3896%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (116 samples, 0.69%)</title><rect x="32.3912%" y="869" width="0.6947%" height="15" fill="rgb(231,110,42)" fg:x="5409" fg:w="116"/><text x="32.6412%" y="879.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (92 samples, 0.55%)</title><rect x="32.5349%" y="853" width="0.5509%" height="15" fill="rgb(208,170,48)" fg:x="5433" fg:w="92"/><text x="32.7849%" y="863.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (2 samples, 0.01%)</title><rect x="33.0738%" y="837" width="0.0120%" height="15" fill="rgb(239,116,25)" fg:x="5523" fg:w="2"/><text x="33.3238%" y="847.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.04%)</title><rect x="33.2715%" y="869" width="0.0419%" height="15" fill="rgb(219,200,50)" fg:x="5556" fg:w="7"/><text x="33.5215%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (15 samples, 0.09%)</title><rect x="33.3134%" y="869" width="0.0898%" height="15" fill="rgb(245,200,0)" fg:x="5563" fg:w="15"/><text x="33.5634%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (7 samples, 0.04%)</title><rect x="33.3613%" y="853" width="0.0419%" height="15" fill="rgb(245,119,33)" fg:x="5571" fg:w="7"/><text x="33.6113%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (7 samples, 0.04%)</title><rect x="33.3613%" y="837" width="0.0419%" height="15" fill="rgb(231,125,12)" fg:x="5571" fg:w="7"/><text x="33.6113%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.04%)</title><rect x="33.4691%" y="853" width="0.0419%" height="15" fill="rgb(216,96,41)" fg:x="5589" fg:w="7"/><text x="33.7191%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.04%)</title><rect x="33.4751%" y="837" width="0.0359%" height="15" fill="rgb(248,43,45)" fg:x="5590" fg:w="6"/><text x="33.7251%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (280 samples, 1.68%)</title><rect x="31.8702%" y="933" width="1.6767%" height="15" fill="rgb(217,222,7)" fg:x="5322" fg:w="280"/><text x="32.1202%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (280 samples, 1.68%)</title><rect x="31.8702%" y="917" width="1.6767%" height="15" fill="rgb(233,28,6)" fg:x="5322" fg:w="280"/><text x="32.1202%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (280 samples, 1.68%)</title><rect x="31.8702%" y="901" width="1.6767%" height="15" fill="rgb(231,218,15)" fg:x="5322" fg:w="280"/><text x="32.1202%" y="911.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.46%)</title><rect x="33.0858%" y="885" width="0.4611%" height="15" fill="rgb(226,171,48)" fg:x="5525" fg:w="77"/><text x="33.3358%" y="895.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (24 samples, 0.14%)</title><rect x="33.4032%" y="869" width="0.1437%" height="15" fill="rgb(235,201,9)" fg:x="5578" fg:w="24"/><text x="33.6532%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (5 samples, 0.03%)</title><rect x="33.5170%" y="853" width="0.0299%" height="15" fill="rgb(217,80,15)" fg:x="5597" fg:w="5"/><text x="33.7670%" y="863.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (5 samples, 0.03%)</title><rect x="33.5469%" y="933" width="0.0299%" height="15" fill="rgb(219,152,8)" fg:x="5602" fg:w="5"/><text x="33.7969%" y="943.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="33.5589%" y="917" width="0.0180%" height="15" fill="rgb(243,107,38)" fg:x="5604" fg:w="3"/><text x="33.8089%" y="927.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (3 samples, 0.02%)</title><rect x="33.5589%" y="901" width="0.0180%" height="15" fill="rgb(231,17,5)" fg:x="5604" fg:w="3"/><text x="33.8089%" y="911.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.01%)</title><rect x="33.5828%" y="917" width="0.0120%" height="15" fill="rgb(209,25,54)" fg:x="5608" fg:w="2"/><text x="33.8328%" y="927.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (2 samples, 0.01%)</title><rect x="33.5828%" y="901" width="0.0120%" height="15" fill="rgb(219,0,2)" fg:x="5608" fg:w="2"/><text x="33.8328%" y="911.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (290 samples, 1.74%)</title><rect x="31.8702%" y="1109" width="1.7366%" height="15" fill="rgb(246,9,5)" fg:x="5322" fg:w="290"/><text x="32.1202%" y="1119.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (290 samples, 1.74%)</title><rect x="31.8702%" y="1093" width="1.7366%" height="15" fill="rgb(226,159,4)" fg:x="5322" fg:w="290"/><text x="32.1202%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (290 samples, 1.74%)</title><rect x="31.8702%" y="1077" width="1.7366%" height="15" fill="rgb(219,175,34)" fg:x="5322" fg:w="290"/><text x="32.1202%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (290 samples, 1.74%)</title><rect x="31.8702%" y="1061" width="1.7366%" height="15" fill="rgb(236,10,46)" fg:x="5322" fg:w="290"/><text x="32.1202%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (290 samples, 1.74%)</title><rect x="31.8702%" y="1045" width="1.7366%" height="15" fill="rgb(240,211,16)" fg:x="5322" fg:w="290"/><text x="32.1202%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (290 samples, 1.74%)</title><rect x="31.8702%" y="1029" width="1.7366%" height="15" fill="rgb(205,3,43)" fg:x="5322" fg:w="290"/><text x="32.1202%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (290 samples, 1.74%)</title><rect x="31.8702%" y="1013" width="1.7366%" height="15" fill="rgb(245,7,22)" fg:x="5322" fg:w="290"/><text x="32.1202%" y="1023.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (290 samples, 1.74%)</title><rect x="31.8702%" y="997" width="1.7366%" height="15" fill="rgb(239,132,32)" fg:x="5322" fg:w="290"/><text x="32.1202%" y="1007.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (290 samples, 1.74%)</title><rect x="31.8702%" y="981" width="1.7366%" height="15" fill="rgb(228,202,34)" fg:x="5322" fg:w="290"/><text x="32.1202%" y="991.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (290 samples, 1.74%)</title><rect x="31.8702%" y="965" width="1.7366%" height="15" fill="rgb(254,200,22)" fg:x="5322" fg:w="290"/><text x="32.1202%" y="975.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (290 samples, 1.74%)</title><rect x="31.8702%" y="949" width="1.7366%" height="15" fill="rgb(219,10,39)" fg:x="5322" fg:w="290"/><text x="32.1202%" y="959.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (5 samples, 0.03%)</title><rect x="33.5769%" y="933" width="0.0299%" height="15" fill="rgb(226,210,39)" fg:x="5607" fg:w="5"/><text x="33.8269%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (2 samples, 0.01%)</title><rect x="33.5948%" y="917" width="0.0120%" height="15" fill="rgb(208,219,16)" fg:x="5610" fg:w="2"/><text x="33.8448%" y="927.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="33.5948%" y="901" width="0.0120%" height="15" fill="rgb(216,158,51)" fg:x="5610" fg:w="2"/><text x="33.8448%" y="911.50"></text></g><g><title>core::ptr::write (9 samples, 0.05%)</title><rect x="34.6368%" y="821" width="0.0539%" height="15" fill="rgb(233,14,44)" fg:x="5784" fg:w="9"/><text x="34.8868%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (141 samples, 0.84%)</title><rect x="33.8523%" y="869" width="0.8444%" height="15" fill="rgb(237,97,39)" fg:x="5653" fg:w="141"/><text x="34.1023%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (93 samples, 0.56%)</title><rect x="34.1398%" y="853" width="0.5569%" height="15" fill="rgb(218,198,43)" fg:x="5701" fg:w="93"/><text x="34.3898%" y="863.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (80 samples, 0.48%)</title><rect x="34.2176%" y="837" width="0.4791%" height="15" fill="rgb(231,104,20)" fg:x="5714" fg:w="80"/><text x="34.4676%" y="847.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="34.8344%" y="853" width="0.0180%" height="15" fill="rgb(254,36,13)" fg:x="5817" fg:w="3"/><text x="35.0844%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.07%)</title><rect x="34.8524%" y="853" width="0.0719%" height="15" fill="rgb(248,14,50)" fg:x="5820" fg:w="12"/><text x="35.1024%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (6 samples, 0.04%)</title><rect x="34.8883%" y="837" width="0.0359%" height="15" fill="rgb(217,107,29)" fg:x="5826" fg:w="6"/><text x="35.1383%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (6 samples, 0.04%)</title><rect x="34.8883%" y="821" width="0.0359%" height="15" fill="rgb(251,169,33)" fg:x="5826" fg:w="6"/><text x="35.1383%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.04%)</title><rect x="34.9722%" y="837" width="0.0359%" height="15" fill="rgb(217,108,32)" fg:x="5840" fg:w="6"/><text x="35.2222%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.04%)</title><rect x="34.9722%" y="821" width="0.0359%" height="15" fill="rgb(219,66,42)" fg:x="5840" fg:w="6"/><text x="35.2222%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (235 samples, 1.41%)</title><rect x="33.6248%" y="917" width="1.4073%" height="15" fill="rgb(206,180,7)" fg:x="5615" fg:w="235"/><text x="33.8748%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (234 samples, 1.40%)</title><rect x="33.6308%" y="901" width="1.4013%" height="15" fill="rgb(208,226,31)" fg:x="5616" fg:w="234"/><text x="33.8808%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (234 samples, 1.40%)</title><rect x="33.6308%" y="885" width="1.4013%" height="15" fill="rgb(218,26,49)" fg:x="5616" fg:w="234"/><text x="33.8808%" y="895.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.34%)</title><rect x="34.6967%" y="869" width="0.3353%" height="15" fill="rgb(233,197,48)" fg:x="5794" fg:w="56"/><text x="34.9467%" y="879.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (18 samples, 0.11%)</title><rect x="34.9242%" y="853" width="0.1078%" height="15" fill="rgb(252,181,51)" fg:x="5832" fg:w="18"/><text x="35.1742%" y="863.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (4 samples, 0.02%)</title><rect x="35.0081%" y="837" width="0.0240%" height="15" fill="rgb(253,90,19)" fg:x="5846" fg:w="4"/><text x="35.2581%" y="847.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (3 samples, 0.02%)</title><rect x="35.0320%" y="917" width="0.0180%" height="15" fill="rgb(215,171,30)" fg:x="5850" fg:w="3"/><text x="35.2820%" y="927.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="35.0380%" y="901" width="0.0120%" height="15" fill="rgb(214,222,9)" fg:x="5851" fg:w="2"/><text x="35.2880%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (245 samples, 1.47%)</title><rect x="33.6068%" y="1061" width="1.4672%" height="15" fill="rgb(223,3,22)" fg:x="5612" fg:w="245"/><text x="33.8568%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (245 samples, 1.47%)</title><rect x="33.6068%" y="1045" width="1.4672%" height="15" fill="rgb(225,196,46)" fg:x="5612" fg:w="245"/><text x="33.8568%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (245 samples, 1.47%)</title><rect x="33.6068%" y="1029" width="1.4672%" height="15" fill="rgb(209,110,37)" fg:x="5612" fg:w="245"/><text x="33.8568%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (245 samples, 1.47%)</title><rect x="33.6068%" y="1013" width="1.4672%" height="15" fill="rgb(249,89,12)" fg:x="5612" fg:w="245"/><text x="33.8568%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (245 samples, 1.47%)</title><rect x="33.6068%" y="997" width="1.4672%" height="15" fill="rgb(226,27,33)" fg:x="5612" fg:w="245"/><text x="33.8568%" y="1007.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (245 samples, 1.47%)</title><rect x="33.6068%" y="981" width="1.4672%" height="15" fill="rgb(213,82,22)" fg:x="5612" fg:w="245"/><text x="33.8568%" y="991.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (245 samples, 1.47%)</title><rect x="33.6068%" y="965" width="1.4672%" height="15" fill="rgb(248,140,0)" fg:x="5612" fg:w="245"/><text x="33.8568%" y="975.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (245 samples, 1.47%)</title><rect x="33.6068%" y="949" width="1.4672%" height="15" fill="rgb(228,106,3)" fg:x="5612" fg:w="245"/><text x="33.8568%" y="959.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (245 samples, 1.47%)</title><rect x="33.6068%" y="933" width="1.4672%" height="15" fill="rgb(209,23,37)" fg:x="5612" fg:w="245"/><text x="33.8568%" y="943.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (4 samples, 0.02%)</title><rect x="35.0500%" y="917" width="0.0240%" height="15" fill="rgb(241,93,50)" fg:x="5853" fg:w="4"/><text x="35.3000%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (3 samples, 0.02%)</title><rect x="35.0560%" y="901" width="0.0180%" height="15" fill="rgb(253,46,43)" fg:x="5854" fg:w="3"/><text x="35.3060%" y="911.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="35.0560%" y="885" width="0.0180%" height="15" fill="rgb(226,206,43)" fg:x="5854" fg:w="3"/><text x="35.3060%" y="895.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_no_auth_unaligned (582 samples, 3.49%)</title><rect x="31.5947%" y="1285" width="3.4852%" height="15" fill="rgb(217,54,7)" fg:x="5276" fg:w="582"/><text x="31.8447%" y="1295.50">&lt;ve..</text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_b2b_no_auth (582 samples, 3.49%)</title><rect x="31.5947%" y="1269" width="3.4852%" height="15" fill="rgb(223,5,52)" fg:x="5276" fg:w="582"/><text x="31.8447%" y="1279.50">&lt;ve..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b (582 samples, 3.49%)</title><rect x="31.5947%" y="1253" width="3.4852%" height="15" fill="rgb(206,52,46)" fg:x="5276" fg:w="582"/><text x="31.8447%" y="1263.50">cip..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (582 samples, 3.49%)</title><rect x="31.5947%" y="1237" width="3.4852%" height="15" fill="rgb(253,136,11)" fg:x="5276" fg:w="582"/><text x="31.8447%" y="1247.50">cor..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b::{{closure}} (582 samples, 3.49%)</title><rect x="31.5947%" y="1221" width="3.4852%" height="15" fill="rgb(208,106,33)" fg:x="5276" fg:w="582"/><text x="31.8447%" y="1231.50">cip..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (582 samples, 3.49%)</title><rect x="31.5947%" y="1205" width="3.4852%" height="15" fill="rgb(206,54,4)" fg:x="5276" fg:w="582"/><text x="31.8447%" y="1215.50">&lt;ci..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (582 samples, 3.49%)</title><rect x="31.5947%" y="1189" width="3.4852%" height="15" fill="rgb(213,3,15)" fg:x="5276" fg:w="582"/><text x="31.8447%" y="1199.50">cip..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (582 samples, 3.49%)</title><rect x="31.5947%" y="1173" width="3.4852%" height="15" fill="rgb(252,211,39)" fg:x="5276" fg:w="582"/><text x="31.8447%" y="1183.50">&lt;ch..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (582 samples, 3.49%)</title><rect x="31.5947%" y="1157" width="3.4852%" height="15" fill="rgb(223,6,36)" fg:x="5276" fg:w="582"/><text x="31.8447%" y="1167.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::inner (582 samples, 3.49%)</title><rect x="31.5947%" y="1141" width="3.4852%" height="15" fill="rgb(252,169,45)" fg:x="5276" fg:w="582"/><text x="31.8447%" y="1151.50">cha..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (582 samples, 3.49%)</title><rect x="31.5947%" y="1125" width="3.4852%" height="15" fill="rgb(212,48,26)" fg:x="5276" fg:w="582"/><text x="31.8447%" y="1135.50">&lt;ci..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (246 samples, 1.47%)</title><rect x="33.6068%" y="1109" width="1.4731%" height="15" fill="rgb(251,102,48)" fg:x="5612" fg:w="246"/><text x="33.8568%" y="1119.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (246 samples, 1.47%)</title><rect x="33.6068%" y="1093" width="1.4731%" height="15" fill="rgb(243,208,16)" fg:x="5612" fg:w="246"/><text x="33.8568%" y="1103.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (246 samples, 1.47%)</title><rect x="33.6068%" y="1077" width="1.4731%" height="15" fill="rgb(219,96,24)" fg:x="5612" fg:w="246"/><text x="33.8568%" y="1087.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::build_envelope::{{closure}} (584 samples, 3.50%)</title><rect x="31.5947%" y="1317" width="3.4972%" height="15" fill="rgb(219,33,29)" fg:x="5276" fg:w="584"/><text x="31.8447%" y="1327.50">vei..</text></g><g><title>veilid_core::crypto::envelope::Envelope::to_encrypted_data (584 samples, 3.50%)</title><rect x="31.5947%" y="1301" width="3.4972%" height="15" fill="rgb(223,176,5)" fg:x="5276" fg:w="584"/><text x="31.8447%" y="1311.50">vei..</text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::sign (2 samples, 0.01%)</title><rect x="35.0799%" y="1285" width="0.0120%" height="15" fill="rgb(228,140,14)" fg:x="5858" fg:w="2"/><text x="35.3299%" y="1295.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="35.1458%" y="1061" width="0.0180%" height="15" fill="rgb(217,179,31)" fg:x="5869" fg:w="3"/><text x="35.3958%" y="1071.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="35.1458%" y="1077" width="0.0359%" height="15" fill="rgb(230,9,30)" fg:x="5869" fg:w="6"/><text x="35.3958%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.02%)</title><rect x="35.1638%" y="1061" width="0.0180%" height="15" fill="rgb(230,136,20)" fg:x="5872" fg:w="3"/><text x="35.4138%" y="1071.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (2 samples, 0.01%)</title><rect x="35.1698%" y="1045" width="0.0120%" height="15" fill="rgb(215,210,22)" fg:x="5873" fg:w="2"/><text x="35.4198%" y="1055.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (2 samples, 0.01%)</title><rect x="35.1698%" y="1029" width="0.0120%" height="15" fill="rgb(218,43,5)" fg:x="5873" fg:w="2"/><text x="35.4198%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (2 samples, 0.01%)</title><rect x="35.1698%" y="1013" width="0.0120%" height="15" fill="rgb(216,11,5)" fg:x="5873" fg:w="2"/><text x="35.4198%" y="1023.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="35.1698%" y="997" width="0.0120%" height="15" fill="rgb(209,82,29)" fg:x="5873" fg:w="2"/><text x="35.4198%" y="1007.50"></text></g><g><title>chacha20::backends::avx2::rounds (12 samples, 0.07%)</title><rect x="35.1817%" y="1077" width="0.0719%" height="15" fill="rgb(244,115,12)" fg:x="5875" fg:w="12"/><text x="35.4317%" y="1087.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.03%)</title><rect x="35.2237%" y="1061" width="0.0299%" height="15" fill="rgb(222,82,18)" fg:x="5882" fg:w="5"/><text x="35.4737%" y="1071.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.02%)</title><rect x="35.2297%" y="1045" width="0.0240%" height="15" fill="rgb(249,227,8)" fg:x="5883" fg:w="4"/><text x="35.4797%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.01%)</title><rect x="35.2656%" y="1077" width="0.0120%" height="15" fill="rgb(253,141,45)" fg:x="5889" fg:w="2"/><text x="35.5156%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (2 samples, 0.01%)</title><rect x="35.2656%" y="1061" width="0.0120%" height="15" fill="rgb(234,184,4)" fg:x="5889" fg:w="2"/><text x="35.5156%" y="1071.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (36 samples, 0.22%)</title><rect x="35.0919%" y="1093" width="0.2156%" height="15" fill="rgb(218,194,23)" fg:x="5860" fg:w="36"/><text x="35.3419%" y="1103.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.02%)</title><rect x="35.2835%" y="1077" width="0.0240%" height="15" fill="rgb(235,66,41)" fg:x="5892" fg:w="4"/><text x="35.5335%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="35.2895%" y="1061" width="0.0180%" height="15" fill="rgb(245,217,1)" fg:x="5893" fg:w="3"/><text x="35.5395%" y="1071.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="35.2955%" y="1045" width="0.0120%" height="15" fill="rgb(229,91,1)" fg:x="5894" fg:w="2"/><text x="35.5455%" y="1055.50"></text></g><g><title>chacha20::backends::avx2::inner (15 samples, 0.09%)</title><rect x="35.3075%" y="1093" width="0.0898%" height="15" fill="rgb(207,101,30)" fg:x="5896" fg:w="15"/><text x="35.5575%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.02%)</title><rect x="35.4273%" y="1013" width="0.0240%" height="15" fill="rgb(223,82,49)" fg:x="5916" fg:w="4"/><text x="35.6773%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.07%)</title><rect x="35.3973%" y="1061" width="0.0719%" height="15" fill="rgb(218,167,17)" fg:x="5911" fg:w="12"/><text x="35.6473%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.06%)</title><rect x="35.4093%" y="1045" width="0.0599%" height="15" fill="rgb(208,103,14)" fg:x="5913" fg:w="10"/><text x="35.6593%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.06%)</title><rect x="35.4093%" y="1029" width="0.0599%" height="15" fill="rgb(238,20,8)" fg:x="5913" fg:w="10"/><text x="35.6593%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="35.4512%" y="1013" width="0.0180%" height="15" fill="rgb(218,80,54)" fg:x="5920" fg:w="3"/><text x="35.7012%" y="1023.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (3 samples, 0.02%)</title><rect x="35.4512%" y="997" width="0.0180%" height="15" fill="rgb(240,144,17)" fg:x="5920" fg:w="3"/><text x="35.7012%" y="1007.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (13 samples, 0.08%)</title><rect x="35.3973%" y="1093" width="0.0778%" height="15" fill="rgb(245,27,50)" fg:x="5911" fg:w="13"/><text x="35.6473%" y="1103.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (13 samples, 0.08%)</title><rect x="35.3973%" y="1077" width="0.0778%" height="15" fill="rgb(251,51,7)" fg:x="5911" fg:w="13"/><text x="35.6473%" y="1087.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.01%)</title><rect x="36.4992%" y="1077" width="0.0120%" height="15" fill="rgb(245,217,29)" fg:x="6095" fg:w="2"/><text x="36.7492%" y="1087.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="36.4992%" y="1061" width="0.0120%" height="15" fill="rgb(221,176,29)" fg:x="6095" fg:w="2"/><text x="36.7492%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (3 samples, 0.02%)</title><rect x="36.8765%" y="1029" width="0.0180%" height="15" fill="rgb(212,180,24)" fg:x="6158" fg:w="3"/><text x="37.1265%" y="1039.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (123 samples, 0.74%)</title><rect x="36.5112%" y="1077" width="0.7366%" height="15" fill="rgb(254,24,2)" fg:x="6097" fg:w="123"/><text x="36.7612%" y="1087.50"></text></g><g><title>core::slice::raw::from_raw_parts (65 samples, 0.39%)</title><rect x="36.8585%" y="1061" width="0.3892%" height="15" fill="rgb(230,100,2)" fg:x="6155" fg:w="65"/><text x="37.1085%" y="1071.50"></text></g><g><title>core::ptr::slice_from_raw_parts (62 samples, 0.37%)</title><rect x="36.8765%" y="1045" width="0.3713%" height="15" fill="rgb(219,142,25)" fg:x="6158" fg:w="62"/><text x="37.1265%" y="1055.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (59 samples, 0.35%)</title><rect x="36.8944%" y="1029" width="0.3533%" height="15" fill="rgb(240,73,43)" fg:x="6161" fg:w="59"/><text x="37.1444%" y="1039.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (44 samples, 0.26%)</title><rect x="37.2477%" y="1077" width="0.2635%" height="15" fill="rgb(214,114,15)" fg:x="6220" fg:w="44"/><text x="37.4977%" y="1087.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (15 samples, 0.09%)</title><rect x="37.4214%" y="1061" width="0.0898%" height="15" fill="rgb(207,130,4)" fg:x="6249" fg:w="15"/><text x="37.6714%" y="1071.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (14 samples, 0.08%)</title><rect x="37.4274%" y="1045" width="0.0838%" height="15" fill="rgb(221,25,40)" fg:x="6250" fg:w="14"/><text x="37.6774%" y="1055.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (14 samples, 0.08%)</title><rect x="37.4274%" y="1029" width="0.0838%" height="15" fill="rgb(241,184,7)" fg:x="6250" fg:w="14"/><text x="37.6774%" y="1039.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (9 samples, 0.05%)</title><rect x="37.6789%" y="1045" width="0.0539%" height="15" fill="rgb(235,159,4)" fg:x="6292" fg:w="9"/><text x="37.9289%" y="1055.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (8 samples, 0.05%)</title><rect x="37.6849%" y="1029" width="0.0479%" height="15" fill="rgb(214,87,48)" fg:x="6293" fg:w="8"/><text x="37.9349%" y="1039.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (3 samples, 0.02%)</title><rect x="37.7328%" y="1045" width="0.0180%" height="15" fill="rgb(246,198,24)" fg:x="6301" fg:w="3"/><text x="37.9828%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (9 samples, 0.05%)</title><rect x="37.7508%" y="1045" width="0.0539%" height="15" fill="rgb(209,66,40)" fg:x="6304" fg:w="9"/><text x="38.0008%" y="1055.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.03%)</title><rect x="37.8645%" y="1029" width="0.0299%" height="15" fill="rgb(233,147,39)" fg:x="6323" fg:w="5"/><text x="38.1145%" y="1039.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.03%)</title><rect x="37.8645%" y="1013" width="0.0299%" height="15" fill="rgb(231,145,52)" fg:x="6323" fg:w="5"/><text x="38.1145%" y="1023.50"></text></g><g><title>irqentry_exit (5 samples, 0.03%)</title><rect x="37.8645%" y="997" width="0.0299%" height="15" fill="rgb(206,20,26)" fg:x="6323" fg:w="5"/><text x="38.1145%" y="1007.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.03%)</title><rect x="37.8645%" y="981" width="0.0299%" height="15" fill="rgb(238,220,4)" fg:x="6323" fg:w="5"/><text x="38.1145%" y="991.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.03%)</title><rect x="37.8645%" y="965" width="0.0299%" height="15" fill="rgb(252,195,42)" fg:x="6323" fg:w="5"/><text x="38.1145%" y="975.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.03%)</title><rect x="37.8645%" y="949" width="0.0299%" height="15" fill="rgb(209,10,6)" fg:x="6323" fg:w="5"/><text x="38.1145%" y="959.50"></text></g><g><title>schedule (5 samples, 0.03%)</title><rect x="37.8645%" y="933" width="0.0299%" height="15" fill="rgb(229,3,52)" fg:x="6323" fg:w="5"/><text x="38.1145%" y="943.50"></text></g><g><title>__schedule (5 samples, 0.03%)</title><rect x="37.8645%" y="917" width="0.0299%" height="15" fill="rgb(253,49,37)" fg:x="6323" fg:w="5"/><text x="38.1145%" y="927.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.03%)</title><rect x="37.8645%" y="901" width="0.0299%" height="15" fill="rgb(240,103,49)" fg:x="6323" fg:w="5"/><text x="38.1145%" y="911.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.03%)</title><rect x="37.8645%" y="885" width="0.0299%" height="15" fill="rgb(250,182,30)" fg:x="6323" fg:w="5"/><text x="38.1145%" y="895.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.03%)</title><rect x="37.8645%" y="869" width="0.0299%" height="15" fill="rgb(248,8,30)" fg:x="6323" fg:w="5"/><text x="38.1145%" y="879.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.03%)</title><rect x="37.8645%" y="853" width="0.0299%" height="15" fill="rgb(237,120,30)" fg:x="6323" fg:w="5"/><text x="38.1145%" y="863.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.03%)</title><rect x="37.8645%" y="837" width="0.0299%" height="15" fill="rgb(221,146,34)" fg:x="6323" fg:w="5"/><text x="38.1145%" y="847.50"></text></g><g><title>native_write_msr (5 samples, 0.03%)</title><rect x="37.8645%" y="821" width="0.0299%" height="15" fill="rgb(242,55,13)" fg:x="6323" fg:w="5"/><text x="38.1145%" y="831.50"></text></g><g><title>core::mem::replace (10 samples, 0.06%)</title><rect x="37.8945%" y="1029" width="0.0599%" height="15" fill="rgb(242,112,31)" fg:x="6328" fg:w="10"/><text x="38.1445%" y="1039.50"></text></g><g><title>core::ptr::read (8 samples, 0.05%)</title><rect x="37.9544%" y="1029" width="0.0479%" height="15" fill="rgb(249,192,27)" fg:x="6338" fg:w="8"/><text x="38.2044%" y="1039.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.01%)</title><rect x="37.9903%" y="1013" width="0.0120%" height="15" fill="rgb(208,204,44)" fg:x="6344" fg:w="2"/><text x="38.2403%" y="1023.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (83 samples, 0.50%)</title><rect x="37.5172%" y="1077" width="0.4970%" height="15" fill="rgb(208,93,54)" fg:x="6265" fg:w="83"/><text x="37.7672%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (77 samples, 0.46%)</title><rect x="37.5531%" y="1061" width="0.4611%" height="15" fill="rgb(242,1,31)" fg:x="6271" fg:w="77"/><text x="37.8031%" y="1071.50"></text></g><g><title>core::mem::replace (35 samples, 0.21%)</title><rect x="37.8047%" y="1045" width="0.2096%" height="15" fill="rgb(241,83,25)" fg:x="6313" fg:w="35"/><text x="38.0547%" y="1055.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="38.0023%" y="1029" width="0.0120%" height="15" fill="rgb(205,169,50)" fg:x="6346" fg:w="2"/><text x="38.2523%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (5 samples, 0.03%)</title><rect x="38.0382%" y="997" width="0.0299%" height="15" fill="rgb(239,186,37)" fg:x="6352" fg:w="5"/><text x="38.2882%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.02%)</title><rect x="38.0442%" y="981" width="0.0240%" height="15" fill="rgb(205,221,10)" fg:x="6353" fg:w="4"/><text x="38.2942%" y="991.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (3 samples, 0.02%)</title><rect x="38.0502%" y="965" width="0.0180%" height="15" fill="rgb(218,196,15)" fg:x="6354" fg:w="3"/><text x="38.3002%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.05%)</title><rect x="38.0262%" y="1045" width="0.0539%" height="15" fill="rgb(218,196,35)" fg:x="6350" fg:w="9"/><text x="38.2762%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.05%)</title><rect x="38.0262%" y="1029" width="0.0539%" height="15" fill="rgb(233,63,24)" fg:x="6350" fg:w="9"/><text x="38.2762%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.05%)</title><rect x="38.0322%" y="1013" width="0.0479%" height="15" fill="rgb(225,8,4)" fg:x="6351" fg:w="8"/><text x="38.2822%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="38.0681%" y="997" width="0.0120%" height="15" fill="rgb(234,105,35)" fg:x="6357" fg:w="2"/><text x="38.3181%" y="1007.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (436 samples, 2.61%)</title><rect x="35.4752%" y="1093" width="2.6109%" height="15" fill="rgb(236,21,32)" fg:x="5924" fg:w="436"/><text x="35.7252%" y="1103.50">in..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (11 samples, 0.07%)</title><rect x="38.0202%" y="1077" width="0.0659%" height="15" fill="rgb(228,109,6)" fg:x="6349" fg:w="11"/><text x="38.2702%" y="1087.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (11 samples, 0.07%)</title><rect x="38.0202%" y="1061" width="0.0659%" height="15" fill="rgb(229,215,31)" fg:x="6349" fg:w="11"/><text x="38.2702%" y="1071.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_no_auth_unaligned (504 samples, 3.02%)</title><rect x="35.0919%" y="1269" width="3.0181%" height="15" fill="rgb(221,52,54)" fg:x="5860" fg:w="504"/><text x="35.3419%" y="1279.50">&lt;ve..</text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_b2b_no_auth (504 samples, 3.02%)</title><rect x="35.0919%" y="1253" width="3.0181%" height="15" fill="rgb(252,129,43)" fg:x="5860" fg:w="504"/><text x="35.3419%" y="1263.50">&lt;ve..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b (504 samples, 3.02%)</title><rect x="35.0919%" y="1237" width="3.0181%" height="15" fill="rgb(248,183,27)" fg:x="5860" fg:w="504"/><text x="35.3419%" y="1247.50">cip..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (504 samples, 3.02%)</title><rect x="35.0919%" y="1221" width="3.0181%" height="15" fill="rgb(250,0,22)" fg:x="5860" fg:w="504"/><text x="35.3419%" y="1231.50">cor..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b::{{closure}} (504 samples, 3.02%)</title><rect x="35.0919%" y="1205" width="3.0181%" height="15" fill="rgb(213,166,10)" fg:x="5860" fg:w="504"/><text x="35.3419%" y="1215.50">cip..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (504 samples, 3.02%)</title><rect x="35.0919%" y="1189" width="3.0181%" height="15" fill="rgb(207,163,36)" fg:x="5860" fg:w="504"/><text x="35.3419%" y="1199.50">&lt;ci..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (504 samples, 3.02%)</title><rect x="35.0919%" y="1173" width="3.0181%" height="15" fill="rgb(208,122,22)" fg:x="5860" fg:w="504"/><text x="35.3419%" y="1183.50">cip..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (504 samples, 3.02%)</title><rect x="35.0919%" y="1157" width="3.0181%" height="15" fill="rgb(207,104,49)" fg:x="5860" fg:w="504"/><text x="35.3419%" y="1167.50">&lt;ch..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (504 samples, 3.02%)</title><rect x="35.0919%" y="1141" width="3.0181%" height="15" fill="rgb(248,211,50)" fg:x="5860" fg:w="504"/><text x="35.3419%" y="1151.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::inner (504 samples, 3.02%)</title><rect x="35.0919%" y="1125" width="3.0181%" height="15" fill="rgb(217,13,45)" fg:x="5860" fg:w="504"/><text x="35.3419%" y="1135.50">cha..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (504 samples, 3.02%)</title><rect x="35.0919%" y="1109" width="3.0181%" height="15" fill="rgb(211,216,49)" fg:x="5860" fg:w="504"/><text x="35.3419%" y="1119.50">&lt;ci..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (4 samples, 0.02%)</title><rect x="38.0861%" y="1093" width="0.0240%" height="15" fill="rgb(221,58,53)" fg:x="6360" fg:w="4"/><text x="38.3361%" y="1103.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.01%)</title><rect x="38.0981%" y="1077" width="0.0120%" height="15" fill="rgb(220,112,41)" fg:x="6362" fg:w="2"/><text x="38.3481%" y="1087.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.01%)</title><rect x="38.0981%" y="1061" width="0.0120%" height="15" fill="rgb(236,38,28)" fg:x="6362" fg:w="2"/><text x="38.3481%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="38.0981%" y="1045" width="0.0120%" height="15" fill="rgb(227,195,22)" fg:x="6362" fg:w="2"/><text x="38.3481%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="38.0981%" y="1029" width="0.0120%" height="15" fill="rgb(214,55,33)" fg:x="6362" fg:w="2"/><text x="38.3481%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="38.0981%" y="1013" width="0.0120%" height="15" fill="rgb(248,80,13)" fg:x="6362" fg:w="2"/><text x="38.3481%" y="1023.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2 samples, 0.01%)</title><rect x="38.1161%" y="1205" width="0.0120%" height="15" fill="rgb(238,52,6)" fg:x="6365" fg:w="2"/><text x="38.3661%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (13 samples, 0.08%)</title><rect x="38.1340%" y="1157" width="0.0778%" height="15" fill="rgb(224,198,47)" fg:x="6368" fg:w="13"/><text x="38.3840%" y="1167.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (2 samples, 0.01%)</title><rect x="38.1999%" y="1141" width="0.0120%" height="15" fill="rgb(233,171,20)" fg:x="6379" fg:w="2"/><text x="38.4499%" y="1151.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::build_envelope (522 samples, 3.13%)</title><rect x="35.0919%" y="1317" width="3.1259%" height="15" fill="rgb(241,30,25)" fg:x="5860" fg:w="522"/><text x="35.3419%" y="1327.50">vei..</text></g><g><title>veilid_core::network_manager::NetworkManager::build_envelope::{{closure}} (522 samples, 3.13%)</title><rect x="35.0919%" y="1301" width="3.1259%" height="15" fill="rgb(207,171,38)" fg:x="5860" fg:w="522"/><text x="35.3419%" y="1311.50">vei..</text></g><g><title>veilid_core::crypto::envelope::Envelope::to_encrypted_data (522 samples, 3.13%)</title><rect x="35.0919%" y="1285" width="3.1259%" height="15" fill="rgb(234,70,1)" fg:x="5860" fg:w="522"/><text x="35.3419%" y="1295.50">vei..</text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::sign (18 samples, 0.11%)</title><rect x="38.1101%" y="1269" width="0.1078%" height="15" fill="rgb(232,178,18)" fg:x="6364" fg:w="18"/><text x="38.3601%" y="1279.50"></text></g><g><title>ed25519_dalek::keypair::Keypair::from_bytes (17 samples, 0.10%)</title><rect x="38.1161%" y="1253" width="0.1018%" height="15" fill="rgb(241,78,40)" fg:x="6365" fg:w="17"/><text x="38.3661%" y="1263.50"></text></g><g><title>ed25519_dalek::public::PublicKey::from_bytes (17 samples, 0.10%)</title><rect x="38.1161%" y="1237" width="0.1018%" height="15" fill="rgb(222,35,25)" fg:x="6365" fg:w="17"/><text x="38.3661%" y="1247.50"></text></g><g><title>curve25519_dalek::edwards::CompressedEdwardsY::decompress (17 samples, 0.10%)</title><rect x="38.1161%" y="1221" width="0.1018%" height="15" fill="rgb(207,92,16)" fg:x="6365" fg:w="17"/><text x="38.3661%" y="1231.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (15 samples, 0.09%)</title><rect x="38.1280%" y="1205" width="0.0898%" height="15" fill="rgb(216,59,51)" fg:x="6367" fg:w="15"/><text x="38.3780%" y="1215.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow_p58 (14 samples, 0.08%)</title><rect x="38.1340%" y="1189" width="0.0838%" height="15" fill="rgb(213,80,28)" fg:x="6368" fg:w="14"/><text x="38.3840%" y="1199.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (14 samples, 0.08%)</title><rect x="38.1340%" y="1173" width="0.0838%" height="15" fill="rgb(220,93,7)" fg:x="6368" fg:w="14"/><text x="38.3840%" y="1183.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (2 samples, 0.01%)</title><rect x="38.2358%" y="1221" width="0.0120%" height="15" fill="rgb(225,24,44)" fg:x="6385" fg:w="2"/><text x="38.4858%" y="1231.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (6 samples, 0.04%)</title><rect x="38.2358%" y="1237" width="0.0359%" height="15" fill="rgb(243,74,40)" fg:x="6385" fg:w="6"/><text x="38.4858%" y="1247.50"></text></g><g><title>chacha20::xchacha::hchacha (4 samples, 0.02%)</title><rect x="38.2478%" y="1221" width="0.0240%" height="15" fill="rgb(228,39,7)" fg:x="6387" fg:w="4"/><text x="38.4978%" y="1231.50"></text></g><g><title>chacha20::xchacha::quarter_round (4 samples, 0.02%)</title><rect x="38.2478%" y="1205" width="0.0240%" height="15" fill="rgb(227,79,8)" fg:x="6387" fg:w="4"/><text x="38.4978%" y="1215.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (2 samples, 0.01%)</title><rect x="38.2598%" y="1189" width="0.0120%" height="15" fill="rgb(236,58,11)" fg:x="6389" fg:w="2"/><text x="38.5098%" y="1199.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (7 samples, 0.04%)</title><rect x="38.2358%" y="1253" width="0.0419%" height="15" fill="rgb(249,63,35)" fg:x="6385" fg:w="7"/><text x="38.4858%" y="1263.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="38.3077%" y="1093" width="0.0240%" height="15" fill="rgb(252,114,16)" fg:x="6397" fg:w="4"/><text x="38.5577%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="38.3197%" y="1077" width="0.0120%" height="15" fill="rgb(254,151,24)" fg:x="6399" fg:w="2"/><text x="38.5697%" y="1087.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (2 samples, 0.01%)</title><rect x="38.3197%" y="1061" width="0.0120%" height="15" fill="rgb(253,54,39)" fg:x="6399" fg:w="2"/><text x="38.5697%" y="1071.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (2 samples, 0.01%)</title><rect x="38.3197%" y="1045" width="0.0120%" height="15" fill="rgb(243,25,45)" fg:x="6399" fg:w="2"/><text x="38.5697%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (2 samples, 0.01%)</title><rect x="38.3197%" y="1029" width="0.0120%" height="15" fill="rgb(234,134,9)" fg:x="6399" fg:w="2"/><text x="38.5697%" y="1039.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="38.3197%" y="1013" width="0.0120%" height="15" fill="rgb(227,166,31)" fg:x="6399" fg:w="2"/><text x="38.5697%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="38.3795%" y="1045" width="0.0299%" height="15" fill="rgb(245,143,41)" fg:x="6409" fg:w="5"/><text x="38.6295%" y="1055.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (2 samples, 0.01%)</title><rect x="38.3975%" y="1029" width="0.0120%" height="15" fill="rgb(238,181,32)" fg:x="6412" fg:w="2"/><text x="38.6475%" y="1039.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (20 samples, 0.12%)</title><rect x="38.3616%" y="1061" width="0.1198%" height="15" fill="rgb(224,113,18)" fg:x="6406" fg:w="20"/><text x="38.6116%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (12 samples, 0.07%)</title><rect x="38.4095%" y="1045" width="0.0719%" height="15" fill="rgb(240,229,28)" fg:x="6414" fg:w="12"/><text x="38.6595%" y="1055.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.02%)</title><rect x="38.4574%" y="1029" width="0.0240%" height="15" fill="rgb(250,185,3)" fg:x="6422" fg:w="4"/><text x="38.7074%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.01%)</title><rect x="38.5113%" y="1029" width="0.0120%" height="15" fill="rgb(212,59,25)" fg:x="6431" fg:w="2"/><text x="38.7613%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.06%)</title><rect x="38.4873%" y="1045" width="0.0599%" height="15" fill="rgb(221,87,20)" fg:x="6427" fg:w="10"/><text x="38.7373%" y="1055.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (3 samples, 0.02%)</title><rect x="38.5293%" y="1029" width="0.0180%" height="15" fill="rgb(213,74,28)" fg:x="6434" fg:w="3"/><text x="38.7793%" y="1039.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (43 samples, 0.26%)</title><rect x="38.3556%" y="1077" width="0.2575%" height="15" fill="rgb(224,132,34)" fg:x="6405" fg:w="43"/><text x="38.6056%" y="1087.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (22 samples, 0.13%)</title><rect x="38.4813%" y="1061" width="0.1317%" height="15" fill="rgb(222,101,24)" fg:x="6426" fg:w="22"/><text x="38.7313%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (10 samples, 0.06%)</title><rect x="38.5532%" y="1045" width="0.0599%" height="15" fill="rgb(254,142,4)" fg:x="6438" fg:w="10"/><text x="38.8032%" y="1055.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.02%)</title><rect x="38.5891%" y="1029" width="0.0240%" height="15" fill="rgb(230,229,49)" fg:x="6444" fg:w="4"/><text x="38.8391%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.01%)</title><rect x="38.6311%" y="1045" width="0.0120%" height="15" fill="rgb(238,70,47)" fg:x="6451" fg:w="2"/><text x="38.8811%" y="1055.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="38.6430%" y="1029" width="0.0120%" height="15" fill="rgb(231,160,17)" fg:x="6453" fg:w="2"/><text x="38.8930%" y="1039.50"></text></g><g><title>chacha20::backends::avx2::rounds (55 samples, 0.33%)</title><rect x="38.3316%" y="1093" width="0.3294%" height="15" fill="rgb(218,68,53)" fg:x="6401" fg:w="55"/><text x="38.5816%" y="1103.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.04%)</title><rect x="38.6191%" y="1077" width="0.0419%" height="15" fill="rgb(236,111,10)" fg:x="6449" fg:w="7"/><text x="38.8691%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.04%)</title><rect x="38.6191%" y="1061" width="0.0419%" height="15" fill="rgb(224,34,41)" fg:x="6449" fg:w="7"/><text x="38.8691%" y="1071.50"></text></g><g><title>core::mem::replace (3 samples, 0.02%)</title><rect x="38.6430%" y="1045" width="0.0180%" height="15" fill="rgb(241,118,19)" fg:x="6453" fg:w="3"/><text x="38.8930%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.01%)</title><rect x="38.6670%" y="1093" width="0.0120%" height="15" fill="rgb(238,129,25)" fg:x="6457" fg:w="2"/><text x="38.9170%" y="1103.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (70 samples, 0.42%)</title><rect x="38.2837%" y="1109" width="0.4192%" height="15" fill="rgb(238,22,31)" fg:x="6393" fg:w="70"/><text x="38.5337%" y="1119.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.02%)</title><rect x="38.6790%" y="1093" width="0.0240%" height="15" fill="rgb(222,174,48)" fg:x="6459" fg:w="4"/><text x="38.9290%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.02%)</title><rect x="38.6790%" y="1077" width="0.0240%" height="15" fill="rgb(206,152,40)" fg:x="6459" fg:w="4"/><text x="38.9290%" y="1087.50"></text></g><g><title>core::mem::replace (3 samples, 0.02%)</title><rect x="38.6850%" y="1061" width="0.0180%" height="15" fill="rgb(218,99,54)" fg:x="6460" fg:w="3"/><text x="38.9350%" y="1071.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="38.6909%" y="1045" width="0.0120%" height="15" fill="rgb(220,174,26)" fg:x="6461" fg:w="2"/><text x="38.9409%" y="1055.50"></text></g><g><title>chacha20::backends::avx2::inner (10 samples, 0.06%)</title><rect x="38.7029%" y="1109" width="0.0599%" height="15" fill="rgb(245,116,9)" fg:x="6463" fg:w="10"/><text x="38.9529%" y="1119.50"></text></g><g><title>core::ptr::write (6 samples, 0.04%)</title><rect x="39.5293%" y="837" width="0.0359%" height="15" fill="rgb(209,72,35)" fg:x="6601" fg:w="6"/><text x="39.7793%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (96 samples, 0.57%)</title><rect x="38.9963%" y="885" width="0.5749%" height="15" fill="rgb(226,126,21)" fg:x="6512" fg:w="96"/><text x="39.2463%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (73 samples, 0.44%)</title><rect x="39.1341%" y="869" width="0.4372%" height="15" fill="rgb(227,192,1)" fg:x="6535" fg:w="73"/><text x="39.3841%" y="879.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (58 samples, 0.35%)</title><rect x="39.2239%" y="853" width="0.3473%" height="15" fill="rgb(237,180,29)" fg:x="6550" fg:w="58"/><text x="39.4739%" y="863.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="39.6670%" y="869" width="0.0120%" height="15" fill="rgb(230,197,35)" fg:x="6624" fg:w="2"/><text x="39.9170%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (10 samples, 0.06%)</title><rect x="39.6790%" y="869" width="0.0599%" height="15" fill="rgb(246,193,31)" fg:x="6626" fg:w="10"/><text x="39.9290%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (5 samples, 0.03%)</title><rect x="39.7090%" y="853" width="0.0299%" height="15" fill="rgb(241,36,4)" fg:x="6631" fg:w="5"/><text x="39.9590%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (5 samples, 0.03%)</title><rect x="39.7090%" y="837" width="0.0299%" height="15" fill="rgb(241,130,17)" fg:x="6631" fg:w="5"/><text x="39.9590%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.02%)</title><rect x="39.7868%" y="853" width="0.0240%" height="15" fill="rgb(206,137,32)" fg:x="6644" fg:w="4"/><text x="40.0368%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.02%)</title><rect x="39.7928%" y="837" width="0.0180%" height="15" fill="rgb(237,228,51)" fg:x="6645" fg:w="3"/><text x="40.0428%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (171 samples, 1.02%)</title><rect x="38.8047%" y="933" width="1.0240%" height="15" fill="rgb(243,6,42)" fg:x="6480" fg:w="171"/><text x="39.0547%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (170 samples, 1.02%)</title><rect x="38.8107%" y="917" width="1.0180%" height="15" fill="rgb(251,74,28)" fg:x="6481" fg:w="170"/><text x="39.0607%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (170 samples, 1.02%)</title><rect x="38.8107%" y="901" width="1.0180%" height="15" fill="rgb(218,20,49)" fg:x="6481" fg:w="170"/><text x="39.0607%" y="911.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.26%)</title><rect x="39.5712%" y="885" width="0.2575%" height="15" fill="rgb(238,28,14)" fg:x="6608" fg:w="43"/><text x="39.8212%" y="895.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (14 samples, 0.08%)</title><rect x="39.7449%" y="869" width="0.0838%" height="15" fill="rgb(229,40,46)" fg:x="6637" fg:w="14"/><text x="39.9949%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.02%)</title><rect x="39.8108%" y="853" width="0.0180%" height="15" fill="rgb(244,195,20)" fg:x="6648" fg:w="3"/><text x="40.0608%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.01%)</title><rect x="39.8287%" y="917" width="0.0120%" height="15" fill="rgb(253,56,35)" fg:x="6651" fg:w="2"/><text x="40.0787%" y="927.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (2 samples, 0.01%)</title><rect x="39.8287%" y="901" width="0.0120%" height="15" fill="rgb(210,149,44)" fg:x="6651" fg:w="2"/><text x="40.0787%" y="911.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (4 samples, 0.02%)</title><rect x="39.8287%" y="933" width="0.0240%" height="15" fill="rgb(240,135,12)" fg:x="6651" fg:w="4"/><text x="40.0787%" y="943.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="39.8407%" y="917" width="0.0120%" height="15" fill="rgb(251,24,50)" fg:x="6653" fg:w="2"/><text x="40.0907%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (182 samples, 1.09%)</title><rect x="38.7748%" y="1029" width="1.0899%" height="15" fill="rgb(243,200,47)" fg:x="6475" fg:w="182"/><text x="39.0248%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (180 samples, 1.08%)</title><rect x="38.7868%" y="1013" width="1.0779%" height="15" fill="rgb(224,166,26)" fg:x="6477" fg:w="180"/><text x="39.0368%" y="1023.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (180 samples, 1.08%)</title><rect x="38.7868%" y="997" width="1.0779%" height="15" fill="rgb(233,0,47)" fg:x="6477" fg:w="180"/><text x="39.0368%" y="1007.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (178 samples, 1.07%)</title><rect x="38.7987%" y="981" width="1.0659%" height="15" fill="rgb(253,80,5)" fg:x="6479" fg:w="178"/><text x="39.0487%" y="991.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (178 samples, 1.07%)</title><rect x="38.7987%" y="965" width="1.0659%" height="15" fill="rgb(214,133,25)" fg:x="6479" fg:w="178"/><text x="39.0487%" y="975.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (178 samples, 1.07%)</title><rect x="38.7987%" y="949" width="1.0659%" height="15" fill="rgb(209,27,14)" fg:x="6479" fg:w="178"/><text x="39.0487%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (184 samples, 1.10%)</title><rect x="38.7688%" y="1077" width="1.1019%" height="15" fill="rgb(219,102,51)" fg:x="6474" fg:w="184"/><text x="39.0188%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (184 samples, 1.10%)</title><rect x="38.7688%" y="1061" width="1.1019%" height="15" fill="rgb(237,18,16)" fg:x="6474" fg:w="184"/><text x="39.0188%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (184 samples, 1.10%)</title><rect x="38.7688%" y="1045" width="1.1019%" height="15" fill="rgb(241,85,17)" fg:x="6474" fg:w="184"/><text x="39.0188%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="39.8707%" y="1061" width="0.0120%" height="15" fill="rgb(236,90,42)" fg:x="6658" fg:w="2"/><text x="40.1207%" y="1071.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (188 samples, 1.13%)</title><rect x="38.7688%" y="1109" width="1.1258%" height="15" fill="rgb(249,57,21)" fg:x="6474" fg:w="188"/><text x="39.0188%" y="1119.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (188 samples, 1.13%)</title><rect x="38.7688%" y="1093" width="1.1258%" height="15" fill="rgb(243,12,36)" fg:x="6474" fg:w="188"/><text x="39.0188%" y="1103.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (4 samples, 0.02%)</title><rect x="39.8707%" y="1077" width="0.0240%" height="15" fill="rgb(253,128,47)" fg:x="6658" fg:w="4"/><text x="40.1207%" y="1087.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.01%)</title><rect x="39.8826%" y="1061" width="0.0120%" height="15" fill="rgb(207,33,20)" fg:x="6660" fg:w="2"/><text x="40.1326%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="39.8826%" y="1045" width="0.0120%" height="15" fill="rgb(233,215,35)" fg:x="6660" fg:w="2"/><text x="40.1326%" y="1055.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.02%)</title><rect x="40.5533%" y="1093" width="0.0240%" height="15" fill="rgb(249,188,52)" fg:x="6772" fg:w="4"/><text x="40.8033%" y="1103.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.02%)</title><rect x="40.5533%" y="1077" width="0.0240%" height="15" fill="rgb(225,12,32)" fg:x="6772" fg:w="4"/><text x="40.8033%" y="1087.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (3 samples, 0.02%)</title><rect x="40.9126%" y="1045" width="0.0180%" height="15" fill="rgb(247,98,14)" fg:x="6832" fg:w="3"/><text x="41.1626%" y="1055.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (105 samples, 0.63%)</title><rect x="40.5773%" y="1093" width="0.6288%" height="15" fill="rgb(247,219,48)" fg:x="6776" fg:w="105"/><text x="40.8273%" y="1103.50"></text></g><g><title>core::slice::raw::from_raw_parts (61 samples, 0.37%)</title><rect x="40.8408%" y="1077" width="0.3653%" height="15" fill="rgb(253,60,48)" fg:x="6820" fg:w="61"/><text x="41.0908%" y="1087.50"></text></g><g><title>core::ptr::slice_from_raw_parts (49 samples, 0.29%)</title><rect x="40.9126%" y="1061" width="0.2934%" height="15" fill="rgb(245,15,52)" fg:x="6832" fg:w="49"/><text x="41.1626%" y="1071.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (46 samples, 0.28%)</title><rect x="40.9306%" y="1045" width="0.2755%" height="15" fill="rgb(220,133,28)" fg:x="6835" fg:w="46"/><text x="41.1806%" y="1055.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (18 samples, 0.11%)</title><rect x="41.2959%" y="1045" width="0.1078%" height="15" fill="rgb(217,180,4)" fg:x="6896" fg:w="18"/><text x="41.5459%" y="1055.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (34 samples, 0.20%)</title><rect x="41.2061%" y="1093" width="0.2036%" height="15" fill="rgb(251,24,1)" fg:x="6881" fg:w="34"/><text x="41.4561%" y="1103.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (20 samples, 0.12%)</title><rect x="41.2899%" y="1077" width="0.1198%" height="15" fill="rgb(212,185,49)" fg:x="6895" fg:w="20"/><text x="41.5399%" y="1087.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (19 samples, 0.11%)</title><rect x="41.2959%" y="1061" width="0.1138%" height="15" fill="rgb(215,175,22)" fg:x="6896" fg:w="19"/><text x="41.5459%" y="1071.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.02%)</title><rect x="41.5175%" y="1061" width="0.0180%" height="15" fill="rgb(250,205,14)" fg:x="6933" fg:w="3"/><text x="41.7675%" y="1071.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3 samples, 0.02%)</title><rect x="41.5175%" y="1045" width="0.0180%" height="15" fill="rgb(225,211,22)" fg:x="6933" fg:w="3"/><text x="41.7675%" y="1055.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (4 samples, 0.02%)</title><rect x="41.5354%" y="1061" width="0.0240%" height="15" fill="rgb(251,179,42)" fg:x="6936" fg:w="4"/><text x="41.7854%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (5 samples, 0.03%)</title><rect x="41.5594%" y="1061" width="0.0299%" height="15" fill="rgb(208,216,51)" fg:x="6940" fg:w="5"/><text x="41.8094%" y="1071.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="41.6193%" y="1045" width="0.0120%" height="15" fill="rgb(235,36,11)" fg:x="6950" fg:w="2"/><text x="41.8693%" y="1055.50"></text></g><g><title>core::ptr::read (6 samples, 0.04%)</title><rect x="41.6312%" y="1045" width="0.0359%" height="15" fill="rgb(213,189,28)" fg:x="6952" fg:w="6"/><text x="41.8812%" y="1055.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (45 samples, 0.27%)</title><rect x="41.4157%" y="1093" width="0.2695%" height="15" fill="rgb(227,203,42)" fg:x="6916" fg:w="45"/><text x="41.6657%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (41 samples, 0.25%)</title><rect x="41.4396%" y="1077" width="0.2455%" height="15" fill="rgb(244,72,36)" fg:x="6920" fg:w="41"/><text x="41.6896%" y="1087.50"></text></g><g><title>core::mem::replace (16 samples, 0.10%)</title><rect x="41.5893%" y="1061" width="0.0958%" height="15" fill="rgb(213,53,17)" fg:x="6945" fg:w="16"/><text x="41.8393%" y="1071.50"></text></g><g><title>core::ptr::write (3 samples, 0.02%)</title><rect x="41.6672%" y="1045" width="0.0180%" height="15" fill="rgb(207,167,3)" fg:x="6958" fg:w="3"/><text x="41.9172%" y="1055.50"></text></g><g><title>core::ptr::write (5 samples, 0.03%)</title><rect x="42.3618%" y="821" width="0.0299%" height="15" fill="rgb(216,98,30)" fg:x="7074" fg:w="5"/><text x="42.6118%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (87 samples, 0.52%)</title><rect x="41.8887%" y="869" width="0.5210%" height="15" fill="rgb(236,123,15)" fg:x="6995" fg:w="87"/><text x="42.1387%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (69 samples, 0.41%)</title><rect x="41.9965%" y="853" width="0.4132%" height="15" fill="rgb(248,81,50)" fg:x="7013" fg:w="69"/><text x="42.2465%" y="863.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (56 samples, 0.34%)</title><rect x="42.0744%" y="837" width="0.3353%" height="15" fill="rgb(214,120,4)" fg:x="7026" fg:w="56"/><text x="42.3244%" y="847.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (3 samples, 0.02%)</title><rect x="42.3918%" y="821" width="0.0180%" height="15" fill="rgb(208,179,34)" fg:x="7079" fg:w="3"/><text x="42.6418%" y="831.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="42.5654%" y="853" width="0.0240%" height="15" fill="rgb(227,140,7)" fg:x="7108" fg:w="4"/><text x="42.8154%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.05%)</title><rect x="42.5894%" y="853" width="0.0479%" height="15" fill="rgb(214,22,6)" fg:x="7112" fg:w="8"/><text x="42.8394%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (3 samples, 0.02%)</title><rect x="42.6193%" y="837" width="0.0180%" height="15" fill="rgb(207,137,27)" fg:x="7117" fg:w="3"/><text x="42.8693%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (3 samples, 0.02%)</title><rect x="42.6193%" y="821" width="0.0180%" height="15" fill="rgb(210,8,46)" fg:x="7117" fg:w="3"/><text x="42.8693%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (8 samples, 0.05%)</title><rect x="42.6732%" y="837" width="0.0479%" height="15" fill="rgb(240,16,54)" fg:x="7126" fg:w="8"/><text x="42.9232%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (7 samples, 0.04%)</title><rect x="42.6792%" y="821" width="0.0419%" height="15" fill="rgb(211,209,29)" fg:x="7127" fg:w="7"/><text x="42.9292%" y="831.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.01%)</title><rect x="42.7211%" y="837" width="0.0120%" height="15" fill="rgb(226,228,24)" fg:x="7134" fg:w="2"/><text x="42.9711%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (173 samples, 1.04%)</title><rect x="41.7211%" y="917" width="1.0360%" height="15" fill="rgb(222,84,9)" fg:x="6967" fg:w="173"/><text x="41.9711%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (172 samples, 1.03%)</title><rect x="41.7270%" y="901" width="1.0300%" height="15" fill="rgb(234,203,30)" fg:x="6968" fg:w="172"/><text x="41.9770%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (172 samples, 1.03%)</title><rect x="41.7270%" y="885" width="1.0300%" height="15" fill="rgb(238,109,14)" fg:x="6968" fg:w="172"/><text x="41.9770%" y="895.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.35%)</title><rect x="42.4097%" y="869" width="0.3473%" height="15" fill="rgb(233,206,34)" fg:x="7082" fg:w="58"/><text x="42.6597%" y="879.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (20 samples, 0.12%)</title><rect x="42.6373%" y="853" width="0.1198%" height="15" fill="rgb(220,167,47)" fg:x="7120" fg:w="20"/><text x="42.8873%" y="863.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (4 samples, 0.02%)</title><rect x="42.7331%" y="837" width="0.0240%" height="15" fill="rgb(238,105,10)" fg:x="7136" fg:w="4"/><text x="42.9831%" y="847.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (7 samples, 0.04%)</title><rect x="42.7571%" y="917" width="0.0419%" height="15" fill="rgb(213,227,17)" fg:x="7140" fg:w="7"/><text x="43.0071%" y="927.50"></text></g><g><title>core::ptr::read (6 samples, 0.04%)</title><rect x="42.7630%" y="901" width="0.0359%" height="15" fill="rgb(217,132,38)" fg:x="7141" fg:w="6"/><text x="43.0130%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="42.7750%" y="885" width="0.0240%" height="15" fill="rgb(242,146,4)" fg:x="7143" fg:w="4"/><text x="43.0250%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (186 samples, 1.11%)</title><rect x="41.6971%" y="1013" width="1.1138%" height="15" fill="rgb(212,61,9)" fg:x="6963" fg:w="186"/><text x="41.9471%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (185 samples, 1.11%)</title><rect x="41.7031%" y="997" width="1.1079%" height="15" fill="rgb(247,126,22)" fg:x="6964" fg:w="185"/><text x="41.9531%" y="1007.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (184 samples, 1.10%)</title><rect x="41.7091%" y="981" width="1.1019%" height="15" fill="rgb(220,196,2)" fg:x="6965" fg:w="184"/><text x="41.9591%" y="991.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (183 samples, 1.10%)</title><rect x="41.7151%" y="965" width="1.0959%" height="15" fill="rgb(208,46,4)" fg:x="6966" fg:w="183"/><text x="41.9651%" y="975.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (183 samples, 1.10%)</title><rect x="41.7151%" y="949" width="1.0959%" height="15" fill="rgb(252,104,46)" fg:x="6966" fg:w="183"/><text x="41.9651%" y="959.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (183 samples, 1.10%)</title><rect x="41.7151%" y="933" width="1.0959%" height="15" fill="rgb(237,152,48)" fg:x="6966" fg:w="183"/><text x="41.9651%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (189 samples, 1.13%)</title><rect x="41.6851%" y="1061" width="1.1318%" height="15" fill="rgb(221,59,37)" fg:x="6961" fg:w="189"/><text x="41.9351%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (188 samples, 1.13%)</title><rect x="41.6911%" y="1045" width="1.1258%" height="15" fill="rgb(209,202,51)" fg:x="6962" fg:w="188"/><text x="41.9411%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (188 samples, 1.13%)</title><rect x="41.6911%" y="1029" width="1.1258%" height="15" fill="rgb(228,81,30)" fg:x="6962" fg:w="188"/><text x="41.9411%" y="1039.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (4 samples, 0.02%)</title><rect x="42.8169%" y="1061" width="0.0240%" height="15" fill="rgb(227,42,39)" fg:x="7150" fg:w="4"/><text x="43.0669%" y="1071.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="42.8229%" y="1045" width="0.0180%" height="15" fill="rgb(221,26,2)" fg:x="7151" fg:w="3"/><text x="43.0729%" y="1055.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (3 samples, 0.02%)</title><rect x="42.8229%" y="1029" width="0.0180%" height="15" fill="rgb(254,61,31)" fg:x="7151" fg:w="3"/><text x="43.0729%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="42.8229%" y="1013" width="0.0180%" height="15" fill="rgb(222,173,38)" fg:x="7151" fg:w="3"/><text x="43.0729%" y="1023.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (493 samples, 2.95%)</title><rect x="39.8946%" y="1109" width="2.9523%" height="15" fill="rgb(218,50,12)" fg:x="6662" fg:w="493"/><text x="40.1446%" y="1119.50">ino..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (194 samples, 1.16%)</title><rect x="41.6851%" y="1093" width="1.1617%" height="15" fill="rgb(223,88,40)" fg:x="6961" fg:w="194"/><text x="41.9351%" y="1103.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (194 samples, 1.16%)</title><rect x="41.6851%" y="1077" width="1.1617%" height="15" fill="rgb(237,54,19)" fg:x="6961" fg:w="194"/><text x="41.9351%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.01%)</title><rect x="42.8529%" y="1013" width="0.0120%" height="15" fill="rgb(251,129,25)" fg:x="7156" fg:w="2"/><text x="43.1029%" y="1023.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (768 samples, 4.60%)</title><rect x="38.2777%" y="1189" width="4.5991%" height="15" fill="rgb(238,97,19)" fg:x="6392" fg:w="768"/><text x="38.5277%" y="1199.50">ciphe..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (768 samples, 4.60%)</title><rect x="38.2777%" y="1173" width="4.5991%" height="15" fill="rgb(240,169,18)" fg:x="6392" fg:w="768"/><text x="38.5277%" y="1183.50">&lt;chac..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (768 samples, 4.60%)</title><rect x="38.2777%" y="1157" width="4.5991%" height="15" fill="rgb(230,187,49)" fg:x="6392" fg:w="768"/><text x="38.5277%" y="1167.50">&lt;chac..</text></g><g><title>chacha20::backends::avx2::inner (768 samples, 4.60%)</title><rect x="38.2777%" y="1141" width="4.5991%" height="15" fill="rgb(209,44,26)" fg:x="6392" fg:w="768"/><text x="38.5277%" y="1151.50">chach..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (768 samples, 4.60%)</title><rect x="38.2777%" y="1125" width="4.5991%" height="15" fill="rgb(244,0,6)" fg:x="6392" fg:w="768"/><text x="38.5277%" y="1135.50">&lt;ciph..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (5 samples, 0.03%)</title><rect x="42.8469%" y="1109" width="0.0299%" height="15" fill="rgb(248,18,21)" fg:x="7155" fg:w="5"/><text x="43.0969%" y="1119.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.02%)</title><rect x="42.8529%" y="1093" width="0.0240%" height="15" fill="rgb(245,180,19)" fg:x="7156" fg:w="4"/><text x="43.1029%" y="1103.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.02%)</title><rect x="42.8529%" y="1077" width="0.0240%" height="15" fill="rgb(252,118,36)" fg:x="7156" fg:w="4"/><text x="43.1029%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.02%)</title><rect x="42.8529%" y="1061" width="0.0240%" height="15" fill="rgb(210,224,19)" fg:x="7156" fg:w="4"/><text x="43.1029%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="42.8529%" y="1045" width="0.0240%" height="15" fill="rgb(218,30,24)" fg:x="7156" fg:w="4"/><text x="43.1029%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.02%)</title><rect x="42.8529%" y="1029" width="0.0240%" height="15" fill="rgb(219,75,50)" fg:x="7156" fg:w="4"/><text x="43.1029%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="42.8648%" y="1013" width="0.0120%" height="15" fill="rgb(234,72,50)" fg:x="7158" fg:w="2"/><text x="43.1148%" y="1023.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (4 samples, 0.02%)</title><rect x="42.8768%" y="1061" width="0.0240%" height="15" fill="rgb(219,100,48)" fg:x="7160" fg:w="4"/><text x="43.1268%" y="1071.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (6 samples, 0.04%)</title><rect x="42.8768%" y="1189" width="0.0359%" height="15" fill="rgb(253,5,41)" fg:x="7160" fg:w="6"/><text x="43.1268%" y="1199.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (6 samples, 0.04%)</title><rect x="42.8768%" y="1173" width="0.0359%" height="15" fill="rgb(247,181,11)" fg:x="7160" fg:w="6"/><text x="43.1268%" y="1183.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (6 samples, 0.04%)</title><rect x="42.8768%" y="1157" width="0.0359%" height="15" fill="rgb(222,223,25)" fg:x="7160" fg:w="6"/><text x="43.1268%" y="1167.50"></text></g><g><title>chacha20::backends::avx2::inner (6 samples, 0.04%)</title><rect x="42.8768%" y="1141" width="0.0359%" height="15" fill="rgb(214,198,28)" fg:x="7160" fg:w="6"/><text x="43.1268%" y="1151.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (6 samples, 0.04%)</title><rect x="42.8768%" y="1125" width="0.0359%" height="15" fill="rgb(230,46,43)" fg:x="7160" fg:w="6"/><text x="43.1268%" y="1135.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (6 samples, 0.04%)</title><rect x="42.8768%" y="1109" width="0.0359%" height="15" fill="rgb(233,65,53)" fg:x="7160" fg:w="6"/><text x="43.1268%" y="1119.50"></text></g><g><title>chacha20::backends::avx2::rounds (6 samples, 0.04%)</title><rect x="42.8768%" y="1093" width="0.0359%" height="15" fill="rgb(221,121,27)" fg:x="7160" fg:w="6"/><text x="43.1268%" y="1103.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (6 samples, 0.04%)</title><rect x="42.8768%" y="1077" width="0.0359%" height="15" fill="rgb(247,70,47)" fg:x="7160" fg:w="6"/><text x="43.1268%" y="1087.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.01%)</title><rect x="42.9008%" y="1061" width="0.0120%" height="15" fill="rgb(228,85,35)" fg:x="7164" fg:w="2"/><text x="43.1508%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.01%)</title><rect x="42.9008%" y="1045" width="0.0120%" height="15" fill="rgb(209,50,18)" fg:x="7164" fg:w="2"/><text x="43.1508%" y="1055.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_b2b_no_auth (782 samples, 4.68%)</title><rect x="38.2358%" y="1269" width="4.6829%" height="15" fill="rgb(250,19,35)" fg:x="6385" fg:w="782"/><text x="38.4858%" y="1279.50">&lt;veil..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b (775 samples, 4.64%)</title><rect x="38.2777%" y="1253" width="4.6410%" height="15" fill="rgb(253,107,29)" fg:x="6392" fg:w="775"/><text x="38.5277%" y="1263.50">ciphe..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (775 samples, 4.64%)</title><rect x="38.2777%" y="1237" width="4.6410%" height="15" fill="rgb(252,179,29)" fg:x="6392" fg:w="775"/><text x="38.5277%" y="1247.50">core:..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b::{{closure}} (775 samples, 4.64%)</title><rect x="38.2777%" y="1221" width="4.6410%" height="15" fill="rgb(238,194,6)" fg:x="6392" fg:w="775"/><text x="38.5277%" y="1231.50">ciphe..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (775 samples, 4.64%)</title><rect x="38.2777%" y="1205" width="4.6410%" height="15" fill="rgb(238,164,29)" fg:x="6392" fg:w="775"/><text x="38.5277%" y="1215.50">&lt;ciph..</text></g><g><title>veilid_core::crypto::envelope::Envelope::decrypt_body (784 samples, 4.69%)</title><rect x="38.2358%" y="1301" width="4.6949%" height="15" fill="rgb(224,25,9)" fg:x="6385" fg:w="784"/><text x="38.4858%" y="1311.50">veili..</text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_no_auth_aligned_8 (784 samples, 4.69%)</title><rect x="38.2358%" y="1285" width="4.6949%" height="15" fill="rgb(244,153,23)" fg:x="6385" fg:w="784"/><text x="38.4858%" y="1295.50">&lt;veil..</text></g><g><title>veilid_tools::tools::aligned_8_u8_vec_uninit (2 samples, 0.01%)</title><rect x="42.9187%" y="1269" width="0.0120%" height="15" fill="rgb(212,203,14)" fg:x="7167" fg:w="2"/><text x="43.1687%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.01%)</title><rect x="42.9187%" y="1253" width="0.0120%" height="15" fill="rgb(220,164,20)" fg:x="7167" fg:w="2"/><text x="43.1687%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="42.9187%" y="1237" width="0.0120%" height="15" fill="rgb(222,203,48)" fg:x="7167" fg:w="2"/><text x="43.1687%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="42.9187%" y="1221" width="0.0120%" height="15" fill="rgb(215,159,22)" fg:x="7167" fg:w="2"/><text x="43.1687%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="42.9187%" y="1205" width="0.0120%" height="15" fill="rgb(216,183,47)" fg:x="7167" fg:w="2"/><text x="43.1687%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="42.9187%" y="1189" width="0.0120%" height="15" fill="rgb(229,195,25)" fg:x="7167" fg:w="2"/><text x="43.1687%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="42.9187%" y="1173" width="0.0120%" height="15" fill="rgb(224,132,51)" fg:x="7167" fg:w="2"/><text x="43.1687%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="42.9187%" y="1157" width="0.0120%" height="15" fill="rgb(240,63,7)" fg:x="7167" fg:w="2"/><text x="43.1687%" y="1167.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="42.9187%" y="1141" width="0.0120%" height="15" fill="rgb(249,182,41)" fg:x="7167" fg:w="2"/><text x="43.1687%" y="1151.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="42.9187%" y="1125" width="0.0120%" height="15" fill="rgb(243,47,26)" fg:x="7167" fg:w="2"/><text x="43.1687%" y="1135.50"></text></g><g><title>blake3::ChunkState::update (2 samples, 0.01%)</title><rect x="42.9487%" y="1221" width="0.0120%" height="15" fill="rgb(233,48,2)" fg:x="7172" fg:w="2"/><text x="43.1987%" y="1231.50"></text></g><g><title>&lt;veilid_core::crypto::blake3digest512::Blake3Digest512 as digest::digest::Digest&gt;::update (4 samples, 0.02%)</title><rect x="42.9487%" y="1269" width="0.0240%" height="15" fill="rgb(244,165,34)" fg:x="7172" fg:w="4"/><text x="43.1987%" y="1279.50"></text></g><g><title>blake3::Hasher::update (4 samples, 0.02%)</title><rect x="42.9487%" y="1253" width="0.0240%" height="15" fill="rgb(207,89,7)" fg:x="7172" fg:w="4"/><text x="43.1987%" y="1263.50"></text></g><g><title>blake3::Hasher::update_with_join (4 samples, 0.02%)</title><rect x="42.9487%" y="1237" width="0.0240%" height="15" fill="rgb(244,117,36)" fg:x="7172" fg:w="4"/><text x="43.1987%" y="1247.50"></text></g><g><title>blake3::compress_subtree_to_parent_node (2 samples, 0.01%)</title><rect x="42.9607%" y="1221" width="0.0120%" height="15" fill="rgb(226,144,34)" fg:x="7174" fg:w="2"/><text x="43.2107%" y="1231.50"></text></g><g><title>blake3::compress_subtree_wide (2 samples, 0.01%)</title><rect x="42.9607%" y="1205" width="0.0120%" height="15" fill="rgb(213,23,19)" fg:x="7174" fg:w="2"/><text x="43.2107%" y="1215.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (4 samples, 0.02%)</title><rect x="42.9846%" y="1189" width="0.0240%" height="15" fill="rgb(217,75,12)" fg:x="7178" fg:w="4"/><text x="43.2346%" y="1199.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow_p58 (14 samples, 0.08%)</title><rect x="42.9846%" y="1221" width="0.0838%" height="15" fill="rgb(224,159,17)" fg:x="7178" fg:w="14"/><text x="43.2346%" y="1231.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (14 samples, 0.08%)</title><rect x="42.9846%" y="1205" width="0.0838%" height="15" fill="rgb(217,118,1)" fg:x="7178" fg:w="14"/><text x="43.2346%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (10 samples, 0.06%)</title><rect x="43.0086%" y="1189" width="0.0599%" height="15" fill="rgb(232,180,48)" fg:x="7182" fg:w="10"/><text x="43.2586%" y="1199.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (4 samples, 0.02%)</title><rect x="43.0445%" y="1173" width="0.0240%" height="15" fill="rgb(230,27,33)" fg:x="7188" fg:w="4"/><text x="43.2945%" y="1183.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (2 samples, 0.01%)</title><rect x="43.0684%" y="1205" width="0.0120%" height="15" fill="rgb(205,31,21)" fg:x="7192" fg:w="2"/><text x="43.3184%" y="1215.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (2 samples, 0.01%)</title><rect x="43.0684%" y="1189" width="0.0120%" height="15" fill="rgb(253,59,4)" fg:x="7192" fg:w="2"/><text x="43.3184%" y="1199.50"></text></g><g><title>ed25519_dalek::public::PublicKey::from_bytes (18 samples, 0.11%)</title><rect x="42.9786%" y="1269" width="0.1078%" height="15" fill="rgb(224,201,9)" fg:x="7177" fg:w="18"/><text x="43.2286%" y="1279.50"></text></g><g><title>curve25519_dalek::edwards::CompressedEdwardsY::decompress (18 samples, 0.11%)</title><rect x="42.9786%" y="1253" width="0.1078%" height="15" fill="rgb(229,206,30)" fg:x="7177" fg:w="18"/><text x="43.2286%" y="1263.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (18 samples, 0.11%)</title><rect x="42.9786%" y="1237" width="0.1078%" height="15" fill="rgb(212,67,47)" fg:x="7177" fg:w="18"/><text x="43.2286%" y="1247.50"></text></g><g><title>curve25519_dalek::field::&lt;impl subtle::ConstantTimeEq for curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::ct_eq (3 samples, 0.02%)</title><rect x="43.0684%" y="1221" width="0.0180%" height="15" fill="rgb(211,96,50)" fg:x="7192" fg:w="3"/><text x="43.3184%" y="1231.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="43.0864%" y="1253" width="0.0120%" height="15" fill="rgb(252,114,18)" fg:x="7195" fg:w="2"/><text x="43.3364%" y="1263.50"></text></g><g><title>sha2::sha512::Engine512::new (2 samples, 0.01%)</title><rect x="43.0864%" y="1237" width="0.0120%" height="15" fill="rgb(223,58,37)" fg:x="7195" fg:w="2"/><text x="43.3364%" y="1247.50"></text></g><g><title>&lt;block_buffer::BlockBuffer&lt;BlockSize&gt; as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="43.0864%" y="1221" width="0.0120%" height="15" fill="rgb(237,70,4)" fg:x="7195" fg:w="2"/><text x="43.3364%" y="1231.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.01%)</title><rect x="43.0864%" y="1205" width="0.0120%" height="15" fill="rgb(244,85,46)" fg:x="7195" fg:w="2"/><text x="43.3364%" y="1215.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.01%)</title><rect x="43.0864%" y="1189" width="0.0120%" height="15" fill="rgb(223,39,52)" fg:x="7195" fg:w="2"/><text x="43.3364%" y="1199.50"></text></g><g><title>&lt;veilid_core::crypto::blake3digest512::Blake3Digest512 as digest::digest::Digest&gt;::finalize (2 samples, 0.01%)</title><rect x="43.0984%" y="1253" width="0.0120%" height="15" fill="rgb(218,200,14)" fg:x="7197" fg:w="2"/><text x="43.3484%" y="1263.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (2 samples, 0.01%)</title><rect x="43.1164%" y="1237" width="0.0120%" height="15" fill="rgb(208,171,16)" fg:x="7200" fg:w="2"/><text x="43.3664%" y="1247.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (2 samples, 0.01%)</title><rect x="43.1164%" y="1221" width="0.0120%" height="15" fill="rgb(234,200,18)" fg:x="7200" fg:w="2"/><text x="43.3664%" y="1231.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::verify (33 samples, 0.20%)</title><rect x="42.9367%" y="1285" width="0.1976%" height="15" fill="rgb(228,45,11)" fg:x="7170" fg:w="33"/><text x="43.1867%" y="1295.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_prehashed (8 samples, 0.05%)</title><rect x="43.0864%" y="1269" width="0.0479%" height="15" fill="rgb(237,182,11)" fg:x="7195" fg:w="8"/><text x="43.3364%" y="1279.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::from_hash (3 samples, 0.02%)</title><rect x="43.1164%" y="1253" width="0.0180%" height="15" fill="rgb(241,175,49)" fg:x="7200" fg:w="3"/><text x="43.3664%" y="1263.50"></text></g><g><title>veilid_core::crypto::envelope::Envelope::from_signed_data (35 samples, 0.21%)</title><rect x="42.9307%" y="1301" width="0.2096%" height="15" fill="rgb(247,38,35)" fg:x="7169" fg:w="35"/><text x="43.1807%" y="1311.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (5 samples, 0.03%)</title><rect x="43.1403%" y="1253" width="0.0299%" height="15" fill="rgb(228,39,49)" fg:x="7204" fg:w="5"/><text x="43.3903%" y="1263.50"></text></g><g><title>chacha20::xchacha::hchacha (4 samples, 0.02%)</title><rect x="43.1463%" y="1237" width="0.0240%" height="15" fill="rgb(226,101,26)" fg:x="7205" fg:w="4"/><text x="43.3963%" y="1247.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.01%)</title><rect x="43.1583%" y="1221" width="0.0120%" height="15" fill="rgb(206,141,19)" fg:x="7207" fg:w="2"/><text x="43.4083%" y="1231.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.01%)</title><rect x="43.1583%" y="1205" width="0.0120%" height="15" fill="rgb(211,200,13)" fg:x="7207" fg:w="2"/><text x="43.4083%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="43.1583%" y="1189" width="0.0120%" height="15" fill="rgb(241,121,6)" fg:x="7207" fg:w="2"/><text x="43.4083%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="43.1583%" y="1173" width="0.0120%" height="15" fill="rgb(234,221,29)" fg:x="7207" fg:w="2"/><text x="43.4083%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="43.1583%" y="1157" width="0.0120%" height="15" fill="rgb(229,136,5)" fg:x="7207" fg:w="2"/><text x="43.4083%" y="1167.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (6 samples, 0.04%)</title><rect x="43.1403%" y="1269" width="0.0359%" height="15" fill="rgb(238,36,11)" fg:x="7204" fg:w="6"/><text x="43.3903%" y="1279.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="43.1942%" y="1125" width="0.0120%" height="15" fill="rgb(251,55,41)" fg:x="7213" fg:w="2"/><text x="43.4442%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="43.2062%" y="1125" width="0.0120%" height="15" fill="rgb(242,34,40)" fg:x="7215" fg:w="2"/><text x="43.4562%" y="1135.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.01%)</title><rect x="43.8350%" y="1077" width="0.0120%" height="15" fill="rgb(215,42,17)" fg:x="7320" fg:w="2"/><text x="44.0850%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.05%)</title><rect x="43.9308%" y="1061" width="0.0539%" height="15" fill="rgb(207,44,46)" fg:x="7336" fg:w="9"/><text x="44.1808%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (2 samples, 0.01%)</title><rect x="43.9727%" y="1045" width="0.0120%" height="15" fill="rgb(211,206,28)" fg:x="7343" fg:w="2"/><text x="44.2227%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (2 samples, 0.01%)</title><rect x="43.9727%" y="1029" width="0.0120%" height="15" fill="rgb(237,167,16)" fg:x="7343" fg:w="2"/><text x="44.2227%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.01%)</title><rect x="44.0386%" y="1045" width="0.0120%" height="15" fill="rgb(233,66,6)" fg:x="7354" fg:w="2"/><text x="44.2886%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="44.0386%" y="1029" width="0.0120%" height="15" fill="rgb(246,123,29)" fg:x="7354" fg:w="2"/><text x="44.2886%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.22%)</title><rect x="43.8469%" y="1077" width="0.2156%" height="15" fill="rgb(209,62,40)" fg:x="7322" fg:w="36"/><text x="44.0969%" y="1087.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (12 samples, 0.07%)</title><rect x="43.9907%" y="1061" width="0.0719%" height="15" fill="rgb(218,4,25)" fg:x="7346" fg:w="12"/><text x="44.2407%" y="1071.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.01%)</title><rect x="44.0505%" y="1045" width="0.0120%" height="15" fill="rgb(253,91,49)" fg:x="7356" fg:w="2"/><text x="44.3005%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (25 samples, 0.15%)</title><rect x="44.0685%" y="1077" width="0.1497%" height="15" fill="rgb(228,155,29)" fg:x="7359" fg:w="25"/><text x="44.3185%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.02%)</title><rect x="44.1943%" y="1061" width="0.0240%" height="15" fill="rgb(243,57,37)" fg:x="7380" fg:w="4"/><text x="44.4443%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (10 samples, 0.06%)</title><rect x="44.2182%" y="1077" width="0.0599%" height="15" fill="rgb(244,167,17)" fg:x="7384" fg:w="10"/><text x="44.4682%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (4 samples, 0.02%)</title><rect x="44.2541%" y="1061" width="0.0240%" height="15" fill="rgb(207,181,38)" fg:x="7390" fg:w="4"/><text x="44.5041%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (14 samples, 0.08%)</title><rect x="44.2781%" y="1077" width="0.0838%" height="15" fill="rgb(211,8,23)" fg:x="7394" fg:w="14"/><text x="44.5281%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (5 samples, 0.03%)</title><rect x="44.3320%" y="1061" width="0.0299%" height="15" fill="rgb(235,11,44)" fg:x="7403" fg:w="5"/><text x="44.5820%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (4 samples, 0.02%)</title><rect x="44.3619%" y="1077" width="0.0240%" height="15" fill="rgb(248,18,52)" fg:x="7408" fg:w="4"/><text x="44.6119%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (49 samples, 0.29%)</title><rect x="44.3859%" y="1077" width="0.2934%" height="15" fill="rgb(208,4,7)" fg:x="7412" fg:w="49"/><text x="44.6359%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (10 samples, 0.06%)</title><rect x="44.6194%" y="1061" width="0.0599%" height="15" fill="rgb(240,17,39)" fg:x="7451" fg:w="10"/><text x="44.8694%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (15 samples, 0.09%)</title><rect x="44.6793%" y="1077" width="0.0898%" height="15" fill="rgb(207,170,3)" fg:x="7461" fg:w="15"/><text x="44.9293%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (13 samples, 0.08%)</title><rect x="44.6913%" y="1061" width="0.0778%" height="15" fill="rgb(236,100,52)" fg:x="7463" fg:w="13"/><text x="44.9413%" y="1071.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (253 samples, 1.52%)</title><rect x="43.2661%" y="1093" width="1.5151%" height="15" fill="rgb(246,78,51)" fg:x="7225" fg:w="253"/><text x="43.5161%" y="1103.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (2 samples, 0.01%)</title><rect x="44.7691%" y="1077" width="0.0120%" height="15" fill="rgb(211,17,15)" fg:x="7476" fg:w="2"/><text x="45.0191%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="44.7991%" y="1077" width="0.0180%" height="15" fill="rgb(209,59,46)" fg:x="7481" fg:w="3"/><text x="45.0491%" y="1087.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (2 samples, 0.01%)</title><rect x="44.8051%" y="1061" width="0.0120%" height="15" fill="rgb(210,92,25)" fg:x="7482" fg:w="2"/><text x="45.0551%" y="1071.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (11 samples, 0.07%)</title><rect x="44.7811%" y="1093" width="0.0659%" height="15" fill="rgb(238,174,52)" fg:x="7478" fg:w="11"/><text x="45.0311%" y="1103.50"></text></g><g><title>core::array::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T: N]&gt;::into_iter (5 samples, 0.03%)</title><rect x="44.8171%" y="1077" width="0.0299%" height="15" fill="rgb(230,73,7)" fg:x="7484" fg:w="5"/><text x="45.0671%" y="1087.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (4 samples, 0.02%)</title><rect x="44.8230%" y="1061" width="0.0240%" height="15" fill="rgb(243,124,40)" fg:x="7485" fg:w="4"/><text x="45.0730%" y="1071.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="44.8230%" y="1045" width="0.0240%" height="15" fill="rgb(244,170,11)" fg:x="7485" fg:w="4"/><text x="45.0730%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.01%)</title><rect x="44.8350%" y="1029" width="0.0120%" height="15" fill="rgb(207,114,54)" fg:x="7487" fg:w="2"/><text x="45.0850%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="44.8350%" y="1013" width="0.0120%" height="15" fill="rgb(205,42,20)" fg:x="7487" fg:w="2"/><text x="45.0850%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="44.9069%" y="1077" width="0.0240%" height="15" fill="rgb(230,30,28)" fg:x="7499" fg:w="4"/><text x="45.1569%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.02%)</title><rect x="44.9129%" y="1061" width="0.0180%" height="15" fill="rgb(205,73,54)" fg:x="7500" fg:w="3"/><text x="45.1629%" y="1071.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (286 samples, 1.71%)</title><rect x="43.2661%" y="1109" width="1.7127%" height="15" fill="rgb(254,227,23)" fg:x="7225" fg:w="286"/><text x="43.5161%" y="1119.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (22 samples, 0.13%)</title><rect x="44.8470%" y="1093" width="0.1317%" height="15" fill="rgb(228,202,34)" fg:x="7489" fg:w="22"/><text x="45.0970%" y="1103.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (7 samples, 0.04%)</title><rect x="44.9368%" y="1077" width="0.0419%" height="15" fill="rgb(222,225,37)" fg:x="7504" fg:w="7"/><text x="45.1868%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.01%)</title><rect x="44.9668%" y="1061" width="0.0120%" height="15" fill="rgb(221,14,54)" fg:x="7509" fg:w="2"/><text x="45.2168%" y="1071.50"></text></g><g><title>chacha20::backends::avx2::rounds (299 samples, 1.79%)</title><rect x="43.2301%" y="1125" width="1.7905%" height="15" fill="rgb(254,102,2)" fg:x="7219" fg:w="299"/><text x="43.4801%" y="1135.50">c..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.03%)</title><rect x="44.9907%" y="1109" width="0.0299%" height="15" fill="rgb(232,104,17)" fg:x="7513" fg:w="5"/><text x="45.2407%" y="1119.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.03%)</title><rect x="44.9907%" y="1093" width="0.0299%" height="15" fill="rgb(250,220,14)" fg:x="7513" fg:w="5"/><text x="45.2407%" y="1103.50"></text></g><g><title>core::mem::replace (3 samples, 0.02%)</title><rect x="45.0027%" y="1077" width="0.0180%" height="15" fill="rgb(241,158,9)" fg:x="7515" fg:w="3"/><text x="45.2527%" y="1087.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (313 samples, 1.87%)</title><rect x="43.1762%" y="1141" width="1.8744%" height="15" fill="rgb(246,9,43)" fg:x="7210" fg:w="313"/><text x="43.4262%" y="1151.50">&lt;..</text></g><g><title>chacha20::backends::avx2::inner (8 samples, 0.05%)</title><rect x="45.0506%" y="1141" width="0.0479%" height="15" fill="rgb(206,73,33)" fg:x="7523" fg:w="8"/><text x="45.3006%" y="1151.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (7 samples, 0.04%)</title><rect x="45.0985%" y="1141" width="0.0419%" height="15" fill="rgb(222,79,8)" fg:x="7531" fg:w="7"/><text x="45.3485%" y="1151.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (7 samples, 0.04%)</title><rect x="45.0985%" y="1125" width="0.0419%" height="15" fill="rgb(234,8,54)" fg:x="7531" fg:w="7"/><text x="45.3485%" y="1135.50"></text></g><g><title>chacha20::backends::avx2::rounds (6 samples, 0.04%)</title><rect x="45.1045%" y="1109" width="0.0359%" height="15" fill="rgb(209,134,38)" fg:x="7532" fg:w="6"/><text x="45.3545%" y="1119.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (6 samples, 0.04%)</title><rect x="45.1045%" y="1093" width="0.0359%" height="15" fill="rgb(230,127,29)" fg:x="7532" fg:w="6"/><text x="45.3545%" y="1103.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (6 samples, 0.04%)</title><rect x="45.1045%" y="1077" width="0.0359%" height="15" fill="rgb(242,44,41)" fg:x="7532" fg:w="6"/><text x="45.3545%" y="1087.50"></text></g><g><title>core::ptr::write (6 samples, 0.04%)</title><rect x="45.9728%" y="869" width="0.0359%" height="15" fill="rgb(222,56,43)" fg:x="7677" fg:w="6"/><text x="46.2228%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (110 samples, 0.66%)</title><rect x="45.3860%" y="917" width="0.6587%" height="15" fill="rgb(238,39,47)" fg:x="7579" fg:w="110"/><text x="45.6360%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (80 samples, 0.48%)</title><rect x="45.5656%" y="901" width="0.4791%" height="15" fill="rgb(226,79,43)" fg:x="7609" fg:w="80"/><text x="45.8156%" y="911.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (68 samples, 0.41%)</title><rect x="45.6375%" y="885" width="0.4072%" height="15" fill="rgb(242,105,53)" fg:x="7621" fg:w="68"/><text x="45.8875%" y="895.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (6 samples, 0.04%)</title><rect x="46.0087%" y="869" width="0.0359%" height="15" fill="rgb(251,132,46)" fg:x="7683" fg:w="6"/><text x="46.2587%" y="879.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="46.1824%" y="901" width="0.0180%" height="15" fill="rgb(231,77,14)" fg:x="7712" fg:w="3"/><text x="46.4324%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (7 samples, 0.04%)</title><rect x="46.2004%" y="901" width="0.0419%" height="15" fill="rgb(240,135,9)" fg:x="7715" fg:w="7"/><text x="46.4504%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (3 samples, 0.02%)</title><rect x="46.2243%" y="885" width="0.0180%" height="15" fill="rgb(248,109,14)" fg:x="7719" fg:w="3"/><text x="46.4743%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (3 samples, 0.02%)</title><rect x="46.2243%" y="869" width="0.0180%" height="15" fill="rgb(227,146,52)" fg:x="7719" fg:w="3"/><text x="46.4743%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.04%)</title><rect x="46.2842%" y="885" width="0.0359%" height="15" fill="rgb(232,54,3)" fg:x="7729" fg:w="6"/><text x="46.5342%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.04%)</title><rect x="46.2842%" y="869" width="0.0359%" height="15" fill="rgb(229,201,43)" fg:x="7729" fg:w="6"/><text x="46.5342%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (196 samples, 1.17%)</title><rect x="45.1584%" y="965" width="1.1737%" height="15" fill="rgb(252,161,33)" fg:x="7541" fg:w="196"/><text x="45.4084%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (196 samples, 1.17%)</title><rect x="45.1584%" y="949" width="1.1737%" height="15" fill="rgb(226,146,40)" fg:x="7541" fg:w="196"/><text x="45.4084%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (196 samples, 1.17%)</title><rect x="45.1584%" y="933" width="1.1737%" height="15" fill="rgb(219,47,25)" fg:x="7541" fg:w="196"/><text x="45.4084%" y="943.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.29%)</title><rect x="46.0447%" y="917" width="0.2874%" height="15" fill="rgb(250,135,13)" fg:x="7689" fg:w="48"/><text x="46.2947%" y="927.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (15 samples, 0.09%)</title><rect x="46.2423%" y="901" width="0.0898%" height="15" fill="rgb(219,229,18)" fg:x="7722" fg:w="15"/><text x="46.4923%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.01%)</title><rect x="46.3201%" y="885" width="0.0120%" height="15" fill="rgb(217,152,27)" fg:x="7735" fg:w="2"/><text x="46.5701%" y="895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.01%)</title><rect x="46.3381%" y="949" width="0.0120%" height="15" fill="rgb(225,71,47)" fg:x="7738" fg:w="2"/><text x="46.5881%" y="959.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (5 samples, 0.03%)</title><rect x="46.3321%" y="965" width="0.0299%" height="15" fill="rgb(220,139,14)" fg:x="7737" fg:w="5"/><text x="46.5821%" y="975.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="46.3501%" y="949" width="0.0120%" height="15" fill="rgb(247,54,32)" fg:x="7740" fg:w="2"/><text x="46.6001%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="46.3501%" y="933" width="0.0120%" height="15" fill="rgb(252,131,39)" fg:x="7740" fg:w="2"/><text x="46.6001%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (204 samples, 1.22%)</title><rect x="45.1464%" y="1061" width="1.2216%" height="15" fill="rgb(210,108,39)" fg:x="7539" fg:w="204"/><text x="45.3964%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (204 samples, 1.22%)</title><rect x="45.1464%" y="1045" width="1.2216%" height="15" fill="rgb(205,23,29)" fg:x="7539" fg:w="204"/><text x="45.3964%" y="1055.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (204 samples, 1.22%)</title><rect x="45.1464%" y="1029" width="1.2216%" height="15" fill="rgb(246,139,46)" fg:x="7539" fg:w="204"/><text x="45.3964%" y="1039.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (203 samples, 1.22%)</title><rect x="45.1524%" y="1013" width="1.2156%" height="15" fill="rgb(250,81,26)" fg:x="7540" fg:w="203"/><text x="45.4024%" y="1023.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (203 samples, 1.22%)</title><rect x="45.1524%" y="997" width="1.2156%" height="15" fill="rgb(214,104,7)" fg:x="7540" fg:w="203"/><text x="45.4024%" y="1007.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (203 samples, 1.22%)</title><rect x="45.1524%" y="981" width="1.2156%" height="15" fill="rgb(233,189,8)" fg:x="7540" fg:w="203"/><text x="45.4024%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (208 samples, 1.25%)</title><rect x="45.1404%" y="1109" width="1.2456%" height="15" fill="rgb(228,141,17)" fg:x="7538" fg:w="208"/><text x="45.3904%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (208 samples, 1.25%)</title><rect x="45.1404%" y="1093" width="1.2456%" height="15" fill="rgb(247,157,1)" fg:x="7538" fg:w="208"/><text x="45.3904%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (208 samples, 1.25%)</title><rect x="45.1404%" y="1077" width="1.2456%" height="15" fill="rgb(249,225,5)" fg:x="7538" fg:w="208"/><text x="45.3904%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="46.3680%" y="1061" width="0.0180%" height="15" fill="rgb(242,55,13)" fg:x="7743" fg:w="3"/><text x="46.6180%" y="1071.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (211 samples, 1.26%)</title><rect x="45.1404%" y="1141" width="1.2635%" height="15" fill="rgb(230,49,50)" fg:x="7538" fg:w="211"/><text x="45.3904%" y="1151.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (211 samples, 1.26%)</title><rect x="45.1404%" y="1125" width="1.2635%" height="15" fill="rgb(241,111,38)" fg:x="7538" fg:w="211"/><text x="45.3904%" y="1135.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (3 samples, 0.02%)</title><rect x="46.3860%" y="1109" width="0.0180%" height="15" fill="rgb(252,155,4)" fg:x="7746" fg:w="3"/><text x="46.6360%" y="1119.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="46.3860%" y="1093" width="0.0180%" height="15" fill="rgb(212,69,32)" fg:x="7746" fg:w="3"/><text x="46.6360%" y="1103.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.01%)</title><rect x="46.3920%" y="1077" width="0.0120%" height="15" fill="rgb(243,107,47)" fg:x="7747" fg:w="2"/><text x="46.6420%" y="1087.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (2 samples, 0.01%)</title><rect x="46.3920%" y="1061" width="0.0120%" height="15" fill="rgb(247,130,12)" fg:x="7747" fg:w="2"/><text x="46.6420%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="46.3920%" y="1045" width="0.0120%" height="15" fill="rgb(233,74,16)" fg:x="7747" fg:w="2"/><text x="46.6420%" y="1055.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.02%)</title><rect x="47.0687%" y="1125" width="0.0240%" height="15" fill="rgb(208,58,18)" fg:x="7860" fg:w="4"/><text x="47.3187%" y="1135.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.02%)</title><rect x="47.0687%" y="1109" width="0.0240%" height="15" fill="rgb(242,225,1)" fg:x="7860" fg:w="4"/><text x="47.3187%" y="1119.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (61 samples, 0.37%)</title><rect x="47.0926%" y="1125" width="0.3653%" height="15" fill="rgb(249,39,40)" fg:x="7864" fg:w="61"/><text x="47.3426%" y="1135.50"></text></g><g><title>core::slice::raw::from_raw_parts (35 samples, 0.21%)</title><rect x="47.2483%" y="1109" width="0.2096%" height="15" fill="rgb(207,72,44)" fg:x="7890" fg:w="35"/><text x="47.4983%" y="1119.50"></text></g><g><title>core::ptr::slice_from_raw_parts (27 samples, 0.16%)</title><rect x="47.2962%" y="1093" width="0.1617%" height="15" fill="rgb(215,193,12)" fg:x="7898" fg:w="27"/><text x="47.5462%" y="1103.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (26 samples, 0.16%)</title><rect x="47.3022%" y="1077" width="0.1557%" height="15" fill="rgb(248,41,39)" fg:x="7899" fg:w="26"/><text x="47.5522%" y="1087.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (21 samples, 0.13%)</title><rect x="47.5897%" y="1077" width="0.1258%" height="15" fill="rgb(253,85,4)" fg:x="7947" fg:w="21"/><text x="47.8397%" y="1087.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (46 samples, 0.28%)</title><rect x="47.4579%" y="1125" width="0.2755%" height="15" fill="rgb(243,70,31)" fg:x="7925" fg:w="46"/><text x="47.7079%" y="1135.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (28 samples, 0.17%)</title><rect x="47.5657%" y="1109" width="0.1677%" height="15" fill="rgb(253,195,26)" fg:x="7943" fg:w="28"/><text x="47.8157%" y="1119.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (24 samples, 0.14%)</title><rect x="47.5897%" y="1093" width="0.1437%" height="15" fill="rgb(243,42,11)" fg:x="7947" fg:w="24"/><text x="47.8397%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (3 samples, 0.02%)</title><rect x="47.7154%" y="1077" width="0.0180%" height="15" fill="rgb(239,66,17)" fg:x="7968" fg:w="3"/><text x="47.9654%" y="1087.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.01%)</title><rect x="47.8532%" y="1093" width="0.0120%" height="15" fill="rgb(217,132,21)" fg:x="7991" fg:w="2"/><text x="48.1032%" y="1103.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.01%)</title><rect x="47.8532%" y="1077" width="0.0120%" height="15" fill="rgb(252,202,21)" fg:x="7991" fg:w="2"/><text x="48.1032%" y="1087.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (2 samples, 0.01%)</title><rect x="47.8651%" y="1093" width="0.0120%" height="15" fill="rgb(233,98,36)" fg:x="7993" fg:w="2"/><text x="48.1151%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (5 samples, 0.03%)</title><rect x="47.8771%" y="1093" width="0.0299%" height="15" fill="rgb(216,153,54)" fg:x="7995" fg:w="5"/><text x="48.1271%" y="1103.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="47.9789%" y="1077" width="0.0120%" height="15" fill="rgb(250,99,7)" fg:x="8012" fg:w="2"/><text x="48.2289%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (51 samples, 0.31%)</title><rect x="47.7514%" y="1109" width="0.3054%" height="15" fill="rgb(207,56,50)" fg:x="7974" fg:w="51"/><text x="48.0014%" y="1119.50"></text></g><g><title>core::mem::replace (25 samples, 0.15%)</title><rect x="47.9071%" y="1093" width="0.1497%" height="15" fill="rgb(244,61,34)" fg:x="8000" fg:w="25"/><text x="48.1571%" y="1103.50"></text></g><g><title>core::ptr::read (11 samples, 0.07%)</title><rect x="47.9909%" y="1077" width="0.0659%" height="15" fill="rgb(241,50,38)" fg:x="8014" fg:w="11"/><text x="48.2409%" y="1087.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (5 samples, 0.03%)</title><rect x="48.0268%" y="1061" width="0.0299%" height="15" fill="rgb(212,166,30)" fg:x="8020" fg:w="5"/><text x="48.2768%" y="1071.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (2 samples, 0.01%)</title><rect x="48.0448%" y="1045" width="0.0120%" height="15" fill="rgb(249,127,32)" fg:x="8023" fg:w="2"/><text x="48.2948%" y="1055.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (54 samples, 0.32%)</title><rect x="47.7394%" y="1125" width="0.3234%" height="15" fill="rgb(209,103,0)" fg:x="7972" fg:w="54"/><text x="47.9894%" y="1135.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="48.8412%" y="853" width="0.0120%" height="15" fill="rgb(238,209,51)" fg:x="8156" fg:w="2"/><text x="49.0912%" y="863.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="48.8412%" y="837" width="0.0120%" height="15" fill="rgb(237,56,23)" fg:x="8156" fg:w="2"/><text x="49.0912%" y="847.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="48.8412%" y="821" width="0.0120%" height="15" fill="rgb(215,153,46)" fg:x="8156" fg:w="2"/><text x="49.0912%" y="831.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="48.8412%" y="805" width="0.0120%" height="15" fill="rgb(224,49,31)" fg:x="8156" fg:w="2"/><text x="49.0912%" y="815.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="48.8412%" y="789" width="0.0120%" height="15" fill="rgb(250,18,42)" fg:x="8156" fg:w="2"/><text x="49.0912%" y="799.50"></text></g><g><title>core::ptr::write (5 samples, 0.03%)</title><rect x="48.8532%" y="853" width="0.0299%" height="15" fill="rgb(215,176,39)" fg:x="8158" fg:w="5"/><text x="49.1032%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (99 samples, 0.59%)</title><rect x="48.3083%" y="901" width="0.5928%" height="15" fill="rgb(223,77,29)" fg:x="8067" fg:w="99"/><text x="48.5583%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (70 samples, 0.42%)</title><rect x="48.4819%" y="885" width="0.4192%" height="15" fill="rgb(234,94,52)" fg:x="8096" fg:w="70"/><text x="48.7319%" y="895.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (63 samples, 0.38%)</title><rect x="48.5239%" y="869" width="0.3773%" height="15" fill="rgb(220,154,50)" fg:x="8103" fg:w="63"/><text x="48.7739%" y="879.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (3 samples, 0.02%)</title><rect x="48.8832%" y="853" width="0.0180%" height="15" fill="rgb(212,11,10)" fg:x="8163" fg:w="3"/><text x="49.1332%" y="863.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="49.0149%" y="885" width="0.0299%" height="15" fill="rgb(205,166,19)" fg:x="8185" fg:w="5"/><text x="49.2649%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.05%)</title><rect x="49.0449%" y="885" width="0.0539%" height="15" fill="rgb(244,198,16)" fg:x="8190" fg:w="9"/><text x="49.2949%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.04%)</title><rect x="49.1167%" y="869" width="0.0419%" height="15" fill="rgb(219,69,12)" fg:x="8202" fg:w="7"/><text x="49.3667%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (7 samples, 0.04%)</title><rect x="49.1167%" y="853" width="0.0419%" height="15" fill="rgb(245,30,7)" fg:x="8202" fg:w="7"/><text x="49.3667%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (179 samples, 1.07%)</title><rect x="48.1047%" y="949" width="1.0719%" height="15" fill="rgb(218,221,48)" fg:x="8033" fg:w="179"/><text x="48.3547%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (179 samples, 1.07%)</title><rect x="48.1047%" y="933" width="1.0719%" height="15" fill="rgb(216,66,15)" fg:x="8033" fg:w="179"/><text x="48.3547%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (178 samples, 1.07%)</title><rect x="48.1107%" y="917" width="1.0659%" height="15" fill="rgb(226,122,50)" fg:x="8034" fg:w="178"/><text x="48.3607%" y="927.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.28%)</title><rect x="48.9011%" y="901" width="0.2755%" height="15" fill="rgb(239,156,16)" fg:x="8166" fg:w="46"/><text x="49.1511%" y="911.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (13 samples, 0.08%)</title><rect x="49.0987%" y="885" width="0.0778%" height="15" fill="rgb(224,27,38)" fg:x="8199" fg:w="13"/><text x="49.3487%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.02%)</title><rect x="49.1586%" y="869" width="0.0180%" height="15" fill="rgb(224,39,27)" fg:x="8209" fg:w="3"/><text x="49.4086%" y="879.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="49.1826%" y="917" width="0.0120%" height="15" fill="rgb(215,92,29)" fg:x="8213" fg:w="2"/><text x="49.4326%" y="927.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (4 samples, 0.02%)</title><rect x="49.1826%" y="933" width="0.0240%" height="15" fill="rgb(207,159,16)" fg:x="8213" fg:w="4"/><text x="49.4326%" y="943.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (2 samples, 0.01%)</title><rect x="49.1946%" y="917" width="0.0120%" height="15" fill="rgb(238,163,47)" fg:x="8215" fg:w="2"/><text x="49.4446%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="49.1946%" y="901" width="0.0120%" height="15" fill="rgb(219,91,49)" fg:x="8215" fg:w="2"/><text x="49.4446%" y="911.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (7 samples, 0.04%)</title><rect x="49.1766%" y="949" width="0.0419%" height="15" fill="rgb(227,167,31)" fg:x="8212" fg:w="7"/><text x="49.4266%" y="959.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="49.2065%" y="933" width="0.0120%" height="15" fill="rgb(234,80,54)" fg:x="8217" fg:w="2"/><text x="49.4565%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="49.2065%" y="917" width="0.0120%" height="15" fill="rgb(212,114,2)" fg:x="8217" fg:w="2"/><text x="49.4565%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (191 samples, 1.14%)</title><rect x="48.0867%" y="1045" width="1.1438%" height="15" fill="rgb(234,50,24)" fg:x="8030" fg:w="191"/><text x="48.3367%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (190 samples, 1.14%)</title><rect x="48.0927%" y="1029" width="1.1378%" height="15" fill="rgb(221,68,8)" fg:x="8031" fg:w="190"/><text x="48.3427%" y="1039.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (190 samples, 1.14%)</title><rect x="48.0927%" y="1013" width="1.1378%" height="15" fill="rgb(254,180,31)" fg:x="8031" fg:w="190"/><text x="48.3427%" y="1023.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (190 samples, 1.14%)</title><rect x="48.0927%" y="997" width="1.1378%" height="15" fill="rgb(247,130,50)" fg:x="8031" fg:w="190"/><text x="48.3427%" y="1007.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (190 samples, 1.14%)</title><rect x="48.0927%" y="981" width="1.1378%" height="15" fill="rgb(211,109,4)" fg:x="8031" fg:w="190"/><text x="48.3427%" y="991.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (190 samples, 1.14%)</title><rect x="48.0927%" y="965" width="1.1378%" height="15" fill="rgb(238,50,21)" fg:x="8031" fg:w="190"/><text x="48.3427%" y="975.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (2 samples, 0.01%)</title><rect x="49.2185%" y="949" width="0.0120%" height="15" fill="rgb(225,57,45)" fg:x="8219" fg:w="2"/><text x="49.4685%" y="959.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.01%)</title><rect x="49.2185%" y="933" width="0.0120%" height="15" fill="rgb(209,196,50)" fg:x="8219" fg:w="2"/><text x="49.4685%" y="943.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (2 samples, 0.01%)</title><rect x="49.2185%" y="917" width="0.0120%" height="15" fill="rgb(242,140,13)" fg:x="8219" fg:w="2"/><text x="49.4685%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (195 samples, 1.17%)</title><rect x="48.0747%" y="1093" width="1.1677%" height="15" fill="rgb(217,111,7)" fg:x="8028" fg:w="195"/><text x="48.3247%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (194 samples, 1.16%)</title><rect x="48.0807%" y="1077" width="1.1617%" height="15" fill="rgb(253,193,51)" fg:x="8029" fg:w="194"/><text x="48.3307%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (194 samples, 1.16%)</title><rect x="48.0807%" y="1061" width="1.1617%" height="15" fill="rgb(252,70,29)" fg:x="8029" fg:w="194"/><text x="48.3307%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="49.2305%" y="1045" width="0.0120%" height="15" fill="rgb(232,127,12)" fg:x="8221" fg:w="2"/><text x="49.4805%" y="1055.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (476 samples, 2.85%)</title><rect x="46.4040%" y="1141" width="2.8505%" height="15" fill="rgb(211,180,21)" fg:x="7749" fg:w="476"/><text x="46.6540%" y="1151.50">in..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (198 samples, 1.19%)</title><rect x="48.0687%" y="1125" width="1.1857%" height="15" fill="rgb(229,72,13)" fg:x="8027" fg:w="198"/><text x="48.3187%" y="1135.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (198 samples, 1.19%)</title><rect x="48.0687%" y="1109" width="1.1857%" height="15" fill="rgb(240,211,49)" fg:x="8027" fg:w="198"/><text x="48.3187%" y="1119.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (2 samples, 0.01%)</title><rect x="49.2425%" y="1093" width="0.0120%" height="15" fill="rgb(219,149,40)" fg:x="8223" fg:w="2"/><text x="49.4925%" y="1103.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="49.2425%" y="1077" width="0.0120%" height="15" fill="rgb(210,127,46)" fg:x="8223" fg:w="2"/><text x="49.4925%" y="1087.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.01%)</title><rect x="49.2425%" y="1061" width="0.0120%" height="15" fill="rgb(220,106,7)" fg:x="8223" fg:w="2"/><text x="49.4925%" y="1071.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1,019 samples, 6.10%)</title><rect x="43.1762%" y="1157" width="6.1022%" height="15" fill="rgb(249,31,22)" fg:x="7210" fg:w="1019"/><text x="43.4262%" y="1167.50">&lt;cipher:..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (4 samples, 0.02%)</title><rect x="49.2544%" y="1141" width="0.0240%" height="15" fill="rgb(253,1,49)" fg:x="8225" fg:w="4"/><text x="49.5044%" y="1151.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.01%)</title><rect x="49.2664%" y="1125" width="0.0120%" height="15" fill="rgb(227,144,33)" fg:x="8227" fg:w="2"/><text x="49.5164%" y="1135.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.01%)</title><rect x="49.2664%" y="1109" width="0.0120%" height="15" fill="rgb(249,163,44)" fg:x="8227" fg:w="2"/><text x="49.5164%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="49.2664%" y="1093" width="0.0120%" height="15" fill="rgb(234,15,39)" fg:x="8227" fg:w="2"/><text x="49.5164%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="49.2664%" y="1077" width="0.0120%" height="15" fill="rgb(207,66,16)" fg:x="8227" fg:w="2"/><text x="49.5164%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="49.2664%" y="1061" width="0.0120%" height="15" fill="rgb(233,112,24)" fg:x="8227" fg:w="2"/><text x="49.5164%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.01%)</title><rect x="49.2664%" y="1045" width="0.0120%" height="15" fill="rgb(230,90,22)" fg:x="8227" fg:w="2"/><text x="49.5164%" y="1055.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (1,020 samples, 6.11%)</title><rect x="43.1762%" y="1221" width="6.1082%" height="15" fill="rgb(229,61,13)" fg:x="7210" fg:w="1020"/><text x="43.4262%" y="1231.50">cipher::..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1,020 samples, 6.11%)</title><rect x="43.1762%" y="1205" width="6.1082%" height="15" fill="rgb(225,57,24)" fg:x="7210" fg:w="1020"/><text x="43.4262%" y="1215.50">&lt;chacha2..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1,020 samples, 6.11%)</title><rect x="43.1762%" y="1189" width="6.1082%" height="15" fill="rgb(208,169,48)" fg:x="7210" fg:w="1020"/><text x="43.4262%" y="1199.50">&lt;chacha2..</text></g><g><title>chacha20::backends::avx2::inner (1,020 samples, 6.11%)</title><rect x="43.1762%" y="1173" width="6.1082%" height="15" fill="rgb(244,218,51)" fg:x="7210" fg:w="1020"/><text x="43.4262%" y="1183.50">chacha20..</text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.01%)</title><rect x="49.2964%" y="1077" width="0.0120%" height="15" fill="rgb(214,148,10)" fg:x="8232" fg:w="2"/><text x="49.5464%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.01%)</title><rect x="49.3143%" y="1077" width="0.0120%" height="15" fill="rgb(225,174,27)" fg:x="8235" fg:w="2"/><text x="49.5643%" y="1087.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (8 samples, 0.05%)</title><rect x="49.2844%" y="1221" width="0.0479%" height="15" fill="rgb(230,96,26)" fg:x="8230" fg:w="8"/><text x="49.5344%" y="1231.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (8 samples, 0.05%)</title><rect x="49.2844%" y="1205" width="0.0479%" height="15" fill="rgb(232,10,30)" fg:x="8230" fg:w="8"/><text x="49.5344%" y="1215.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (8 samples, 0.05%)</title><rect x="49.2844%" y="1189" width="0.0479%" height="15" fill="rgb(222,8,50)" fg:x="8230" fg:w="8"/><text x="49.5344%" y="1199.50"></text></g><g><title>chacha20::backends::avx2::inner (8 samples, 0.05%)</title><rect x="49.2844%" y="1173" width="0.0479%" height="15" fill="rgb(213,81,27)" fg:x="8230" fg:w="8"/><text x="49.5344%" y="1183.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (7 samples, 0.04%)</title><rect x="49.2904%" y="1157" width="0.0419%" height="15" fill="rgb(245,50,10)" fg:x="8231" fg:w="7"/><text x="49.5404%" y="1167.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (7 samples, 0.04%)</title><rect x="49.2904%" y="1141" width="0.0419%" height="15" fill="rgb(216,100,18)" fg:x="8231" fg:w="7"/><text x="49.5404%" y="1151.50"></text></g><g><title>chacha20::backends::avx2::rounds (7 samples, 0.04%)</title><rect x="49.2904%" y="1125" width="0.0419%" height="15" fill="rgb(236,147,54)" fg:x="8231" fg:w="7"/><text x="49.5404%" y="1135.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (7 samples, 0.04%)</title><rect x="49.2904%" y="1109" width="0.0419%" height="15" fill="rgb(205,143,26)" fg:x="8231" fg:w="7"/><text x="49.5404%" y="1119.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (7 samples, 0.04%)</title><rect x="49.2904%" y="1093" width="0.0419%" height="15" fill="rgb(236,26,9)" fg:x="8231" fg:w="7"/><text x="49.5404%" y="1103.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::apply_network_key (1,036 samples, 6.20%)</title><rect x="43.1403%" y="1301" width="6.2040%" height="15" fill="rgb(221,165,53)" fg:x="7204" fg:w="1036"/><text x="43.3903%" y="1311.50">veilid_c..</text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_in_place_no_auth (1,036 samples, 6.20%)</title><rect x="43.1403%" y="1285" width="6.2040%" height="15" fill="rgb(214,110,17)" fg:x="7204" fg:w="1036"/><text x="43.3903%" y="1295.50">&lt;veilid_..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1,030 samples, 6.17%)</title><rect x="43.1762%" y="1269" width="6.1680%" height="15" fill="rgb(237,197,12)" fg:x="7210" fg:w="1030"/><text x="43.4262%" y="1279.50">cipher::..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1,030 samples, 6.17%)</title><rect x="43.1762%" y="1253" width="6.1680%" height="15" fill="rgb(205,84,17)" fg:x="7210" fg:w="1030"/><text x="43.4262%" y="1263.50">cipher::..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1,030 samples, 6.17%)</title><rect x="43.1762%" y="1237" width="6.1680%" height="15" fill="rgb(237,18,45)" fg:x="7210" fg:w="1030"/><text x="43.4262%" y="1247.50">&lt;cipher:..</text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (2 samples, 0.01%)</title><rect x="49.3323%" y="1221" width="0.0120%" height="15" fill="rgb(221,87,14)" fg:x="8238" fg:w="2"/><text x="49.5823%" y="1231.50"></text></g><g><title>&lt;veilid_core::crypto::types::crypto_typed_set::CryptoTypedSet&lt;K&gt; as core::convert::From&lt;veilid_core::crypto::types::crypto_typed::CryptoTyped&lt;K&gt;&gt;&gt;::from (2 samples, 0.01%)</title><rect x="49.3622%" y="1269" width="0.0120%" height="15" fill="rgb(238,186,15)" fg:x="8243" fg:w="2"/><text x="49.6122%" y="1279.50"></text></g><g><title>veilid_core::crypto::types::crypto_typed_set::CryptoTypedSet&lt;K&gt;::with_capacity (2 samples, 0.01%)</title><rect x="49.3622%" y="1253" width="0.0120%" height="15" fill="rgb(208,115,11)" fg:x="8243" fg:w="2"/><text x="49.6122%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.01%)</title><rect x="49.3622%" y="1237" width="0.0120%" height="15" fill="rgb(254,175,0)" fg:x="8243" fg:w="2"/><text x="49.6122%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="49.3622%" y="1221" width="0.0120%" height="15" fill="rgb(227,24,42)" fg:x="8243" fg:w="2"/><text x="49.6122%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="49.3622%" y="1205" width="0.0120%" height="15" fill="rgb(223,211,37)" fg:x="8243" fg:w="2"/><text x="49.6122%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="49.3622%" y="1189" width="0.0120%" height="15" fill="rgb(235,49,27)" fg:x="8243" fg:w="2"/><text x="49.6122%" y="1199.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.01%)</title><rect x="49.3622%" y="1173" width="0.0120%" height="15" fill="rgb(254,97,51)" fg:x="8243" fg:w="2"/><text x="49.6122%" y="1183.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.01%)</title><rect x="49.3622%" y="1157" width="0.0120%" height="15" fill="rgb(249,51,40)" fg:x="8243" fg:w="2"/><text x="49.6122%" y="1167.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (2 samples, 0.01%)</title><rect x="49.3742%" y="1141" width="0.0120%" height="15" fill="rgb(210,128,45)" fg:x="8245" fg:w="2"/><text x="49.6242%" y="1151.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (2 samples, 0.01%)</title><rect x="49.3742%" y="1125" width="0.0120%" height="15" fill="rgb(224,137,50)" fg:x="8245" fg:w="2"/><text x="49.6242%" y="1135.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_hash (2 samples, 0.01%)</title><rect x="49.3742%" y="1109" width="0.0120%" height="15" fill="rgb(242,15,9)" fg:x="8245" fg:w="2"/><text x="49.6242%" y="1119.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search (2 samples, 0.01%)</title><rect x="49.3742%" y="1093" width="0.0120%" height="15" fill="rgb(233,187,41)" fg:x="8245" fg:w="2"/><text x="49.6242%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="49.3742%" y="1077" width="0.0120%" height="15" fill="rgb(227,2,29)" fg:x="8245" fg:w="2"/><text x="49.6242%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.01%)</title><rect x="49.3742%" y="1061" width="0.0120%" height="15" fill="rgb(222,70,3)" fg:x="8245" fg:w="2"/><text x="49.6242%" y="1071.50"></text></g><g><title>veilid_core::routing_table::node_ref::NodeRefBase::set_last_connection (4 samples, 0.02%)</title><rect x="49.3742%" y="1269" width="0.0240%" height="15" fill="rgb(213,11,42)" fg:x="8245" fg:w="4"/><text x="49.6242%" y="1279.50"></text></g><g><title>&lt;veilid_core::routing_table::node_ref::NodeRefLockedMut as veilid_core::routing_table::node_ref::NodeRefBase&gt;::operate_mut (4 samples, 0.02%)</title><rect x="49.3742%" y="1253" width="0.0240%" height="15" fill="rgb(225,150,9)" fg:x="8245" fg:w="4"/><text x="49.6242%" y="1263.50"></text></g><g><title>veilid_core::routing_table::bucket_entry::BucketEntry::with_mut (4 samples, 0.02%)</title><rect x="49.3742%" y="1237" width="0.0240%" height="15" fill="rgb(230,162,45)" fg:x="8245" fg:w="4"/><text x="49.6242%" y="1247.50"></text></g><g><title>veilid_core::routing_table::node_ref::NodeRefBase::set_last_connection::{{closure}} (4 samples, 0.02%)</title><rect x="49.3742%" y="1221" width="0.0240%" height="15" fill="rgb(222,14,52)" fg:x="8245" fg:w="4"/><text x="49.6242%" y="1231.50"></text></g><g><title>veilid_core::routing_table::routing_table_inner::RoutingTableInner::touch_recent_peer (4 samples, 0.02%)</title><rect x="49.3742%" y="1205" width="0.0240%" height="15" fill="rgb(254,198,14)" fg:x="8245" fg:w="4"/><text x="49.6242%" y="1215.50"></text></g><g><title>hashlink::lru_cache::LruCache&lt;K,V,S&gt;::insert (4 samples, 0.02%)</title><rect x="49.3742%" y="1189" width="0.0240%" height="15" fill="rgb(220,217,30)" fg:x="8245" fg:w="4"/><text x="49.6242%" y="1199.50"></text></g><g><title>hashlink::linked_hash_map::LinkedHashMap&lt;K,V,S&gt;::insert (4 samples, 0.02%)</title><rect x="49.3742%" y="1173" width="0.0240%" height="15" fill="rgb(215,146,41)" fg:x="8245" fg:w="4"/><text x="49.6242%" y="1183.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (4 samples, 0.02%)</title><rect x="49.3742%" y="1157" width="0.0240%" height="15" fill="rgb(217,27,36)" fg:x="8245" fg:w="4"/><text x="49.6242%" y="1167.50"></text></g><g><title>hashlink::linked_hash_map::hash_key (2 samples, 0.01%)</title><rect x="49.3862%" y="1141" width="0.0120%" height="15" fill="rgb(219,218,39)" fg:x="8247" fg:w="2"/><text x="49.6362%" y="1151.50"></text></g><g><title>&lt;veilid_core::crypto::types::crypto_typed::CryptoTyped&lt;K&gt; as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="49.3862%" y="1125" width="0.0120%" height="15" fill="rgb(219,4,42)" fg:x="8247" fg:w="2"/><text x="49.6362%" y="1135.50"></text></g><g><title>&lt;veilid_core::veilid_api::types::fourcc::FourCC as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="49.3862%" y="1109" width="0.0120%" height="15" fill="rgb(249,119,36)" fg:x="8247" fg:w="2"/><text x="49.6362%" y="1119.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (2 samples, 0.01%)</title><rect x="49.3862%" y="1093" width="0.0120%" height="15" fill="rgb(209,23,33)" fg:x="8247" fg:w="2"/><text x="49.6362%" y="1103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.01%)</title><rect x="49.3862%" y="1077" width="0.0120%" height="15" fill="rgb(211,10,0)" fg:x="8247" fg:w="2"/><text x="49.6362%" y="1087.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (2 samples, 0.01%)</title><rect x="49.3862%" y="1061" width="0.0120%" height="15" fill="rgb(208,99,37)" fg:x="8247" fg:w="2"/><text x="49.6362%" y="1071.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="49.3862%" y="1045" width="0.0120%" height="15" fill="rgb(213,132,31)" fg:x="8247" fg:w="2"/><text x="49.6362%" y="1055.50"></text></g><g><title>veilid_core::routing_table::RoutingTable::register_node_with_existing_connection (9 samples, 0.05%)</title><rect x="49.3622%" y="1301" width="0.0539%" height="15" fill="rgb(243,129,40)" fg:x="8243" fg:w="9"/><text x="49.6122%" y="1311.50"></text></g><g><title>veilid_core::routing_table::routing_table_inner::RoutingTableInner::register_node_with_existing_connection (9 samples, 0.05%)</title><rect x="49.3622%" y="1285" width="0.0539%" height="15" fill="rgb(210,66,33)" fg:x="8243" fg:w="9"/><text x="49.6122%" y="1295.50"></text></g><g><title>veilid_core::routing_table::routing_table_inner::RoutingTableInner::create_node_ref (3 samples, 0.02%)</title><rect x="49.3982%" y="1269" width="0.0180%" height="15" fill="rgb(209,189,4)" fg:x="8249" fg:w="3"/><text x="49.6482%" y="1279.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::on_recv_envelope::{{closure}}::{{closure}}::{{closure}} (1,872 samples, 11.21%)</title><rect x="38.2238%" y="1317" width="11.2103%" height="15" fill="rgb(214,107,37)" fg:x="6383" fg:w="1872"/><text x="38.4738%" y="1327.50">veilid_core::netw..</text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="49.4401%" y="1125" width="0.0359%" height="15" fill="rgb(245,88,54)" fg:x="8256" fg:w="6"/><text x="49.6901%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.04%)</title><rect x="49.4401%" y="1109" width="0.0359%" height="15" fill="rgb(205,146,20)" fg:x="8256" fg:w="6"/><text x="49.6901%" y="1119.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (4 samples, 0.02%)</title><rect x="49.4521%" y="1093" width="0.0240%" height="15" fill="rgb(220,161,25)" fg:x="8258" fg:w="4"/><text x="49.7021%" y="1103.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (2 samples, 0.01%)</title><rect x="49.4640%" y="1077" width="0.0120%" height="15" fill="rgb(215,152,15)" fg:x="8260" fg:w="2"/><text x="49.7140%" y="1087.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (2 samples, 0.01%)</title><rect x="49.4640%" y="1061" width="0.0120%" height="15" fill="rgb(233,192,44)" fg:x="8260" fg:w="2"/><text x="49.7140%" y="1071.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="49.4640%" y="1045" width="0.0120%" height="15" fill="rgb(240,170,46)" fg:x="8260" fg:w="2"/><text x="49.7140%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="49.4640%" y="1029" width="0.0120%" height="15" fill="rgb(207,104,33)" fg:x="8260" fg:w="2"/><text x="49.7140%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (9 samples, 0.05%)</title><rect x="50.6438%" y="1061" width="0.0539%" height="15" fill="rgb(219,21,39)" fg:x="8457" fg:w="9"/><text x="50.8938%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (6 samples, 0.04%)</title><rect x="50.6617%" y="1045" width="0.0359%" height="15" fill="rgb(214,133,29)" fg:x="8460" fg:w="6"/><text x="50.9117%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (6 samples, 0.04%)</title><rect x="50.6617%" y="1029" width="0.0359%" height="15" fill="rgb(226,93,6)" fg:x="8460" fg:w="6"/><text x="50.9117%" y="1039.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.04%)</title><rect x="50.6976%" y="1061" width="0.0359%" height="15" fill="rgb(252,222,34)" fg:x="8466" fg:w="6"/><text x="50.9476%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.03%)</title><rect x="50.7755%" y="1045" width="0.0299%" height="15" fill="rgb(252,92,48)" fg:x="8479" fg:w="5"/><text x="51.0255%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.02%)</title><rect x="50.7875%" y="1029" width="0.0180%" height="15" fill="rgb(245,223,24)" fg:x="8481" fg:w="3"/><text x="51.0375%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.32%)</title><rect x="50.5000%" y="1077" width="0.3174%" height="15" fill="rgb(205,176,3)" fg:x="8433" fg:w="53"/><text x="50.7500%" y="1087.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (14 samples, 0.08%)</title><rect x="50.7336%" y="1061" width="0.0838%" height="15" fill="rgb(235,151,15)" fg:x="8472" fg:w="14"/><text x="50.9836%" y="1071.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.01%)</title><rect x="50.8054%" y="1045" width="0.0120%" height="15" fill="rgb(237,209,11)" fg:x="8484" fg:w="2"/><text x="51.0554%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (43 samples, 0.26%)</title><rect x="50.8174%" y="1077" width="0.2575%" height="15" fill="rgb(243,227,24)" fg:x="8486" fg:w="43"/><text x="51.0674%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (12 samples, 0.07%)</title><rect x="51.0031%" y="1061" width="0.0719%" height="15" fill="rgb(239,193,16)" fg:x="8517" fg:w="12"/><text x="51.2531%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (13 samples, 0.08%)</title><rect x="51.0749%" y="1077" width="0.0778%" height="15" fill="rgb(231,27,9)" fg:x="8529" fg:w="13"/><text x="51.3249%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (6 samples, 0.04%)</title><rect x="51.1168%" y="1061" width="0.0359%" height="15" fill="rgb(219,169,10)" fg:x="8536" fg:w="6"/><text x="51.3668%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (12 samples, 0.07%)</title><rect x="51.1528%" y="1077" width="0.0719%" height="15" fill="rgb(244,229,43)" fg:x="8542" fg:w="12"/><text x="51.4028%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (7 samples, 0.04%)</title><rect x="51.1827%" y="1061" width="0.0419%" height="15" fill="rgb(254,38,20)" fg:x="8547" fg:w="7"/><text x="51.4327%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (4 samples, 0.02%)</title><rect x="51.2246%" y="1077" width="0.0240%" height="15" fill="rgb(250,47,30)" fg:x="8554" fg:w="4"/><text x="51.4746%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (63 samples, 0.38%)</title><rect x="51.2486%" y="1077" width="0.3773%" height="15" fill="rgb(224,124,36)" fg:x="8558" fg:w="63"/><text x="51.4986%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (9 samples, 0.05%)</title><rect x="51.5720%" y="1061" width="0.0539%" height="15" fill="rgb(246,68,51)" fg:x="8612" fg:w="9"/><text x="51.8220%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (21 samples, 0.13%)</title><rect x="51.6258%" y="1077" width="0.1258%" height="15" fill="rgb(253,43,49)" fg:x="8621" fg:w="21"/><text x="51.8758%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (20 samples, 0.12%)</title><rect x="51.6318%" y="1061" width="0.1198%" height="15" fill="rgb(219,54,36)" fg:x="8622" fg:w="20"/><text x="51.8818%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (4 samples, 0.02%)</title><rect x="51.8295%" y="1045" width="0.0240%" height="15" fill="rgb(227,133,34)" fg:x="8655" fg:w="4"/><text x="52.0795%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (2 samples, 0.01%)</title><rect x="51.8414%" y="1029" width="0.0120%" height="15" fill="rgb(247,227,15)" fg:x="8657" fg:w="2"/><text x="52.0914%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (2 samples, 0.01%)</title><rect x="51.8414%" y="1013" width="0.0120%" height="15" fill="rgb(229,96,14)" fg:x="8657" fg:w="2"/><text x="52.0914%" y="1023.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (390 samples, 2.34%)</title><rect x="49.5239%" y="1093" width="2.3355%" height="15" fill="rgb(220,79,17)" fg:x="8270" fg:w="390"/><text x="49.7739%" y="1103.50">c..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (18 samples, 0.11%)</title><rect x="51.7516%" y="1077" width="0.1078%" height="15" fill="rgb(205,131,53)" fg:x="8642" fg:w="18"/><text x="52.0016%" y="1087.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (13 samples, 0.08%)</title><rect x="51.7815%" y="1061" width="0.0778%" height="15" fill="rgb(209,50,29)" fg:x="8647" fg:w="13"/><text x="52.0315%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="51.9073%" y="1077" width="0.0180%" height="15" fill="rgb(245,86,46)" fg:x="8668" fg:w="3"/><text x="52.1573%" y="1087.50"></text></g><g><title>core::array::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T: N]&gt;::into_iter (4 samples, 0.02%)</title><rect x="51.9253%" y="1077" width="0.0240%" height="15" fill="rgb(235,66,46)" fg:x="8671" fg:w="4"/><text x="52.1753%" y="1087.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (4 samples, 0.02%)</title><rect x="51.9253%" y="1061" width="0.0240%" height="15" fill="rgb(232,148,31)" fg:x="8671" fg:w="4"/><text x="52.1753%" y="1071.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="51.9253%" y="1045" width="0.0240%" height="15" fill="rgb(217,149,8)" fg:x="8671" fg:w="4"/><text x="52.1753%" y="1055.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (23 samples, 0.14%)</title><rect x="51.8594%" y="1093" width="0.1377%" height="15" fill="rgb(209,183,11)" fg:x="8660" fg:w="23"/><text x="52.1094%" y="1103.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (8 samples, 0.05%)</title><rect x="51.9492%" y="1077" width="0.0479%" height="15" fill="rgb(208,55,20)" fg:x="8675" fg:w="8"/><text x="52.1992%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.02%)</title><rect x="51.9792%" y="1061" width="0.0180%" height="15" fill="rgb(218,39,14)" fg:x="8680" fg:w="3"/><text x="52.2292%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="52.0450%" y="1077" width="0.0299%" height="15" fill="rgb(216,169,33)" fg:x="8691" fg:w="5"/><text x="52.2950%" y="1087.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (2 samples, 0.01%)</title><rect x="52.0630%" y="1061" width="0.0120%" height="15" fill="rgb(233,80,24)" fg:x="8694" fg:w="2"/><text x="52.3130%" y="1071.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (435 samples, 2.60%)</title><rect x="49.5239%" y="1109" width="2.6049%" height="15" fill="rgb(213,179,31)" fg:x="8270" fg:w="435"/><text x="49.7739%" y="1119.50">ch..</text></g><g><title>chacha20::backends::avx2::rows_to_cols (22 samples, 0.13%)</title><rect x="51.9971%" y="1093" width="0.1317%" height="15" fill="rgb(209,19,5)" fg:x="8683" fg:w="22"/><text x="52.2471%" y="1103.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (9 samples, 0.05%)</title><rect x="52.0750%" y="1077" width="0.0539%" height="15" fill="rgb(219,18,35)" fg:x="8696" fg:w="9"/><text x="52.3250%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.01%)</title><rect x="52.1169%" y="1061" width="0.0120%" height="15" fill="rgb(209,169,16)" fg:x="8703" fg:w="2"/><text x="52.3669%" y="1071.50"></text></g><g><title>chacha20::backends::avx2::rounds (453 samples, 2.71%)</title><rect x="49.4820%" y="1125" width="2.7127%" height="15" fill="rgb(245,90,51)" fg:x="8263" fg:w="453"/><text x="49.7320%" y="1135.50">ch..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11 samples, 0.07%)</title><rect x="52.1289%" y="1109" width="0.0659%" height="15" fill="rgb(220,99,45)" fg:x="8705" fg:w="11"/><text x="52.3789%" y="1119.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (10 samples, 0.06%)</title><rect x="52.1349%" y="1093" width="0.0599%" height="15" fill="rgb(249,89,25)" fg:x="8706" fg:w="10"/><text x="52.3849%" y="1103.50"></text></g><g><title>core::mem::replace (3 samples, 0.02%)</title><rect x="52.1768%" y="1077" width="0.0180%" height="15" fill="rgb(239,193,0)" fg:x="8713" fg:w="3"/><text x="52.4268%" y="1087.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (461 samples, 2.76%)</title><rect x="49.4401%" y="1141" width="2.7606%" height="15" fill="rgb(231,126,1)" fg:x="8256" fg:w="461"/><text x="49.6901%" y="1151.50">&lt;c..</text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.01%)</title><rect x="52.2546%" y="1061" width="0.0120%" height="15" fill="rgb(243,166,3)" fg:x="8726" fg:w="2"/><text x="52.5046%" y="1071.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (12 samples, 0.07%)</title><rect x="52.2007%" y="1077" width="0.0719%" height="15" fill="rgb(223,22,34)" fg:x="8717" fg:w="12"/><text x="52.4507%" y="1087.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (15 samples, 0.09%)</title><rect x="52.2007%" y="1093" width="0.0898%" height="15" fill="rgb(251,52,51)" fg:x="8717" fg:w="15"/><text x="52.4507%" y="1103.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (3 samples, 0.02%)</title><rect x="52.2726%" y="1077" width="0.0180%" height="15" fill="rgb(221,165,28)" fg:x="8729" fg:w="3"/><text x="52.5226%" y="1087.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (16 samples, 0.10%)</title><rect x="52.2007%" y="1141" width="0.0958%" height="15" fill="rgb(218,121,47)" fg:x="8717" fg:w="16"/><text x="52.4507%" y="1151.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (16 samples, 0.10%)</title><rect x="52.2007%" y="1125" width="0.0958%" height="15" fill="rgb(209,120,9)" fg:x="8717" fg:w="16"/><text x="52.4507%" y="1135.50"></text></g><g><title>chacha20::backends::avx2::rounds (16 samples, 0.10%)</title><rect x="52.2007%" y="1109" width="0.0958%" height="15" fill="rgb(236,68,12)" fg:x="8717" fg:w="16"/><text x="52.4507%" y="1119.50"></text></g><g><title>core::ptr::write (7 samples, 0.04%)</title><rect x="53.4942%" y="869" width="0.0419%" height="15" fill="rgb(225,194,26)" fg:x="8933" fg:w="7"/><text x="53.7442%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (146 samples, 0.87%)</title><rect x="52.6858%" y="917" width="0.8743%" height="15" fill="rgb(231,84,39)" fg:x="8798" fg:w="146"/><text x="52.9358%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (111 samples, 0.66%)</title><rect x="52.8954%" y="901" width="0.6647%" height="15" fill="rgb(210,11,45)" fg:x="8833" fg:w="111"/><text x="53.1454%" y="911.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (97 samples, 0.58%)</title><rect x="52.9792%" y="885" width="0.5809%" height="15" fill="rgb(224,54,52)" fg:x="8847" fg:w="97"/><text x="53.2292%" y="895.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (4 samples, 0.02%)</title><rect x="53.5361%" y="869" width="0.0240%" height="15" fill="rgb(238,102,14)" fg:x="8940" fg:w="4"/><text x="53.7861%" y="879.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="53.7936%" y="901" width="0.0240%" height="15" fill="rgb(243,160,52)" fg:x="8983" fg:w="4"/><text x="54.0436%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (7 samples, 0.04%)</title><rect x="53.8176%" y="901" width="0.0419%" height="15" fill="rgb(216,114,19)" fg:x="8987" fg:w="7"/><text x="54.0676%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (2 samples, 0.01%)</title><rect x="53.8475%" y="885" width="0.0120%" height="15" fill="rgb(244,166,37)" fg:x="8992" fg:w="2"/><text x="54.0975%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (2 samples, 0.01%)</title><rect x="53.8475%" y="869" width="0.0120%" height="15" fill="rgb(246,29,44)" fg:x="8992" fg:w="2"/><text x="54.0975%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.02%)</title><rect x="53.8895%" y="885" width="0.0240%" height="15" fill="rgb(215,56,53)" fg:x="8999" fg:w="4"/><text x="54.1395%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.02%)</title><rect x="53.8895%" y="869" width="0.0240%" height="15" fill="rgb(217,60,2)" fg:x="8999" fg:w="4"/><text x="54.1395%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (260 samples, 1.56%)</title><rect x="52.3804%" y="965" width="1.5570%" height="15" fill="rgb(207,26,24)" fg:x="8747" fg:w="260"/><text x="52.6304%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (258 samples, 1.55%)</title><rect x="52.3924%" y="949" width="1.5450%" height="15" fill="rgb(252,210,15)" fg:x="8749" fg:w="258"/><text x="52.6424%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (258 samples, 1.55%)</title><rect x="52.3924%" y="933" width="1.5450%" height="15" fill="rgb(253,209,26)" fg:x="8749" fg:w="258"/><text x="52.6424%" y="943.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.38%)</title><rect x="53.5601%" y="917" width="0.3773%" height="15" fill="rgb(238,170,14)" fg:x="8944" fg:w="63"/><text x="53.8101%" y="927.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (13 samples, 0.08%)</title><rect x="53.8595%" y="901" width="0.0778%" height="15" fill="rgb(216,178,15)" fg:x="8994" fg:w="13"/><text x="54.1095%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (4 samples, 0.02%)</title><rect x="53.9134%" y="885" width="0.0240%" height="15" fill="rgb(250,197,2)" fg:x="9003" fg:w="4"/><text x="54.1634%" y="895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.01%)</title><rect x="53.9493%" y="949" width="0.0120%" height="15" fill="rgb(212,70,42)" fg:x="9009" fg:w="2"/><text x="54.1993%" y="959.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (2 samples, 0.01%)</title><rect x="53.9493%" y="933" width="0.0120%" height="15" fill="rgb(227,213,9)" fg:x="9009" fg:w="2"/><text x="54.1993%" y="943.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (6 samples, 0.04%)</title><rect x="53.9374%" y="965" width="0.0359%" height="15" fill="rgb(245,99,25)" fg:x="9007" fg:w="6"/><text x="54.1874%" y="975.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="53.9613%" y="949" width="0.0120%" height="15" fill="rgb(250,82,29)" fg:x="9011" fg:w="2"/><text x="54.2113%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (282 samples, 1.69%)</title><rect x="52.3025%" y="1109" width="1.6887%" height="15" fill="rgb(241,226,54)" fg:x="8734" fg:w="282"/><text x="52.5525%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (281 samples, 1.68%)</title><rect x="52.3085%" y="1093" width="1.6827%" height="15" fill="rgb(221,99,41)" fg:x="8735" fg:w="281"/><text x="52.5585%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (281 samples, 1.68%)</title><rect x="52.3085%" y="1077" width="1.6827%" height="15" fill="rgb(213,90,21)" fg:x="8735" fg:w="281"/><text x="52.5585%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (280 samples, 1.68%)</title><rect x="52.3145%" y="1061" width="1.6767%" height="15" fill="rgb(205,208,24)" fg:x="8736" fg:w="280"/><text x="52.5645%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (275 samples, 1.65%)</title><rect x="52.3445%" y="1045" width="1.6468%" height="15" fill="rgb(246,31,12)" fg:x="8741" fg:w="275"/><text x="52.5945%" y="1055.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (274 samples, 1.64%)</title><rect x="52.3504%" y="1029" width="1.6408%" height="15" fill="rgb(213,154,6)" fg:x="8742" fg:w="274"/><text x="52.6004%" y="1039.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (274 samples, 1.64%)</title><rect x="52.3504%" y="1013" width="1.6408%" height="15" fill="rgb(222,163,29)" fg:x="8742" fg:w="274"/><text x="52.6004%" y="1023.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (274 samples, 1.64%)</title><rect x="52.3504%" y="997" width="1.6408%" height="15" fill="rgb(227,201,8)" fg:x="8742" fg:w="274"/><text x="52.6004%" y="1007.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (274 samples, 1.64%)</title><rect x="52.3504%" y="981" width="1.6408%" height="15" fill="rgb(233,9,32)" fg:x="8742" fg:w="274"/><text x="52.6004%" y="991.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (3 samples, 0.02%)</title><rect x="53.9733%" y="965" width="0.0180%" height="15" fill="rgb(217,54,24)" fg:x="9013" fg:w="3"/><text x="54.2233%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (3 samples, 0.02%)</title><rect x="53.9733%" y="949" width="0.0180%" height="15" fill="rgb(235,192,0)" fg:x="9013" fg:w="3"/><text x="54.2233%" y="959.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="53.9733%" y="933" width="0.0180%" height="15" fill="rgb(235,45,9)" fg:x="9013" fg:w="3"/><text x="54.2233%" y="943.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (4 samples, 0.02%)</title><rect x="53.9913%" y="1109" width="0.0240%" height="15" fill="rgb(246,42,40)" fg:x="9016" fg:w="4"/><text x="54.2413%" y="1119.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (4 samples, 0.02%)</title><rect x="53.9913%" y="1093" width="0.0240%" height="15" fill="rgb(248,111,24)" fg:x="9016" fg:w="4"/><text x="54.2413%" y="1103.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (4 samples, 0.02%)</title><rect x="53.9913%" y="1077" width="0.0240%" height="15" fill="rgb(249,65,22)" fg:x="9016" fg:w="4"/><text x="54.2413%" y="1087.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="53.9913%" y="1061" width="0.0240%" height="15" fill="rgb(238,111,51)" fg:x="9016" fg:w="4"/><text x="54.2413%" y="1071.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (288 samples, 1.72%)</title><rect x="52.2965%" y="1141" width="1.7247%" height="15" fill="rgb(250,118,22)" fg:x="8733" fg:w="288"/><text x="52.5465%" y="1151.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (288 samples, 1.72%)</title><rect x="52.2965%" y="1125" width="1.7247%" height="15" fill="rgb(234,84,26)" fg:x="8733" fg:w="288"/><text x="52.5465%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="54.0212%" y="1109" width="0.0120%" height="15" fill="rgb(243,172,12)" fg:x="9021" fg:w="2"/><text x="54.2712%" y="1119.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="54.0212%" y="1125" width="0.0180%" height="15" fill="rgb(236,150,49)" fg:x="9021" fg:w="3"/><text x="54.2712%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="54.0392%" y="1093" width="0.0120%" height="15" fill="rgb(225,197,26)" fg:x="9024" fg:w="2"/><text x="54.2892%" y="1103.50"></text></g><g><title>core::ptr::write (7 samples, 0.04%)</title><rect x="55.0632%" y="853" width="0.0419%" height="15" fill="rgb(214,17,42)" fg:x="9195" fg:w="7"/><text x="55.3132%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (133 samples, 0.80%)</title><rect x="54.3326%" y="901" width="0.7965%" height="15" fill="rgb(224,165,40)" fg:x="9073" fg:w="133"/><text x="54.5826%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (97 samples, 0.58%)</title><rect x="54.5482%" y="885" width="0.5809%" height="15" fill="rgb(246,100,4)" fg:x="9109" fg:w="97"/><text x="54.7982%" y="895.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (86 samples, 0.52%)</title><rect x="54.6140%" y="869" width="0.5150%" height="15" fill="rgb(222,103,0)" fg:x="9120" fg:w="86"/><text x="54.8640%" y="879.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (4 samples, 0.02%)</title><rect x="55.1051%" y="853" width="0.0240%" height="15" fill="rgb(227,189,26)" fg:x="9202" fg:w="4"/><text x="55.3551%" y="863.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="55.3027%" y="885" width="0.0240%" height="15" fill="rgb(214,202,17)" fg:x="9235" fg:w="4"/><text x="55.5527%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (11 samples, 0.07%)</title><rect x="55.3267%" y="885" width="0.0659%" height="15" fill="rgb(229,111,3)" fg:x="9239" fg:w="11"/><text x="55.5767%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (4 samples, 0.02%)</title><rect x="55.3686%" y="869" width="0.0240%" height="15" fill="rgb(229,172,15)" fg:x="9246" fg:w="4"/><text x="55.6186%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (4 samples, 0.02%)</title><rect x="55.3686%" y="853" width="0.0240%" height="15" fill="rgb(230,224,35)" fg:x="9246" fg:w="4"/><text x="55.6186%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.04%)</title><rect x="55.4884%" y="869" width="0.0359%" height="15" fill="rgb(251,141,6)" fg:x="9266" fg:w="6"/><text x="55.7384%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.03%)</title><rect x="55.4943%" y="853" width="0.0299%" height="15" fill="rgb(225,208,6)" fg:x="9267" fg:w="5"/><text x="55.7443%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (243 samples, 1.46%)</title><rect x="54.0811%" y="949" width="1.4552%" height="15" fill="rgb(246,181,16)" fg:x="9031" fg:w="243"/><text x="54.3311%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (241 samples, 1.44%)</title><rect x="54.0931%" y="933" width="1.4432%" height="15" fill="rgb(227,129,36)" fg:x="9033" fg:w="241"/><text x="54.3431%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (241 samples, 1.44%)</title><rect x="54.0931%" y="917" width="1.4432%" height="15" fill="rgb(248,117,24)" fg:x="9033" fg:w="241"/><text x="54.3431%" y="927.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.41%)</title><rect x="55.1290%" y="901" width="0.4072%" height="15" fill="rgb(214,185,35)" fg:x="9206" fg:w="68"/><text x="55.3790%" y="911.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (24 samples, 0.14%)</title><rect x="55.3925%" y="885" width="0.1437%" height="15" fill="rgb(236,150,34)" fg:x="9250" fg:w="24"/><text x="55.6425%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.01%)</title><rect x="55.5243%" y="869" width="0.0120%" height="15" fill="rgb(243,228,27)" fg:x="9272" fg:w="2"/><text x="55.7743%" y="879.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (5 samples, 0.03%)</title><rect x="55.5363%" y="949" width="0.0299%" height="15" fill="rgb(245,77,44)" fg:x="9274" fg:w="5"/><text x="55.7863%" y="959.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="55.5482%" y="933" width="0.0180%" height="15" fill="rgb(235,214,42)" fg:x="9276" fg:w="3"/><text x="55.7982%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (255 samples, 1.53%)</title><rect x="54.0511%" y="1093" width="1.5270%" height="15" fill="rgb(221,74,3)" fg:x="9026" fg:w="255"/><text x="54.3011%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (255 samples, 1.53%)</title><rect x="54.0511%" y="1077" width="1.5270%" height="15" fill="rgb(206,121,29)" fg:x="9026" fg:w="255"/><text x="54.3011%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (255 samples, 1.53%)</title><rect x="54.0511%" y="1061" width="1.5270%" height="15" fill="rgb(249,131,53)" fg:x="9026" fg:w="255"/><text x="54.3011%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (254 samples, 1.52%)</title><rect x="54.0571%" y="1045" width="1.5210%" height="15" fill="rgb(236,170,29)" fg:x="9027" fg:w="254"/><text x="54.3071%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (253 samples, 1.52%)</title><rect x="54.0631%" y="1029" width="1.5151%" height="15" fill="rgb(247,96,15)" fg:x="9028" fg:w="253"/><text x="54.3131%" y="1039.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (253 samples, 1.52%)</title><rect x="54.0631%" y="1013" width="1.5151%" height="15" fill="rgb(211,210,7)" fg:x="9028" fg:w="253"/><text x="54.3131%" y="1023.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (252 samples, 1.51%)</title><rect x="54.0691%" y="997" width="1.5091%" height="15" fill="rgb(240,88,50)" fg:x="9029" fg:w="252"/><text x="54.3191%" y="1007.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (252 samples, 1.51%)</title><rect x="54.0691%" y="981" width="1.5091%" height="15" fill="rgb(209,229,26)" fg:x="9029" fg:w="252"/><text x="54.3191%" y="991.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (252 samples, 1.51%)</title><rect x="54.0691%" y="965" width="1.5091%" height="15" fill="rgb(210,68,23)" fg:x="9029" fg:w="252"/><text x="54.3191%" y="975.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (2 samples, 0.01%)</title><rect x="55.5662%" y="949" width="0.0120%" height="15" fill="rgb(229,180,13)" fg:x="9279" fg:w="2"/><text x="55.8162%" y="959.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (262 samples, 1.57%)</title><rect x="54.0212%" y="1141" width="1.5690%" height="15" fill="rgb(236,53,44)" fg:x="9021" fg:w="262"/><text x="54.2712%" y="1151.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (259 samples, 1.55%)</title><rect x="54.0392%" y="1125" width="1.5510%" height="15" fill="rgb(244,214,29)" fg:x="9024" fg:w="259"/><text x="54.2892%" y="1135.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (259 samples, 1.55%)</title><rect x="54.0392%" y="1109" width="1.5510%" height="15" fill="rgb(220,75,29)" fg:x="9024" fg:w="259"/><text x="54.2892%" y="1119.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (2 samples, 0.01%)</title><rect x="55.5782%" y="1093" width="0.0120%" height="15" fill="rgb(214,183,37)" fg:x="9281" fg:w="2"/><text x="55.8282%" y="1103.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::apply_network_key (1,030 samples, 6.17%)</title><rect x="49.4401%" y="1301" width="6.1680%" height="15" fill="rgb(239,117,29)" fg:x="8256" fg:w="1030"/><text x="49.6901%" y="1311.50">veilid_c..</text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_in_place_no_auth (1,030 samples, 6.17%)</title><rect x="49.4401%" y="1285" width="6.1680%" height="15" fill="rgb(237,171,35)" fg:x="8256" fg:w="1030"/><text x="49.6901%" y="1295.50">&lt;veilid_..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1,030 samples, 6.17%)</title><rect x="49.4401%" y="1269" width="6.1680%" height="15" fill="rgb(229,178,53)" fg:x="8256" fg:w="1030"/><text x="49.6901%" y="1279.50">cipher::..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1,030 samples, 6.17%)</title><rect x="49.4401%" y="1253" width="6.1680%" height="15" fill="rgb(210,102,19)" fg:x="8256" fg:w="1030"/><text x="49.6901%" y="1263.50">cipher::..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1,030 samples, 6.17%)</title><rect x="49.4401%" y="1237" width="6.1680%" height="15" fill="rgb(235,127,22)" fg:x="8256" fg:w="1030"/><text x="49.6901%" y="1247.50">&lt;cipher:..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (1,030 samples, 6.17%)</title><rect x="49.4401%" y="1221" width="6.1680%" height="15" fill="rgb(244,31,31)" fg:x="8256" fg:w="1030"/><text x="49.6901%" y="1231.50">cipher::..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1,030 samples, 6.17%)</title><rect x="49.4401%" y="1205" width="6.1680%" height="15" fill="rgb(231,43,21)" fg:x="8256" fg:w="1030"/><text x="49.6901%" y="1215.50">&lt;chacha2..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1,030 samples, 6.17%)</title><rect x="49.4401%" y="1189" width="6.1680%" height="15" fill="rgb(217,131,35)" fg:x="8256" fg:w="1030"/><text x="49.6901%" y="1199.50">&lt;chacha2..</text></g><g><title>chacha20::backends::avx2::inner (1,030 samples, 6.17%)</title><rect x="49.4401%" y="1173" width="6.1680%" height="15" fill="rgb(221,149,4)" fg:x="8256" fg:w="1030"/><text x="49.6901%" y="1183.50">chacha20..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1,030 samples, 6.17%)</title><rect x="49.4401%" y="1157" width="6.1680%" height="15" fill="rgb(232,170,28)" fg:x="8256" fg:w="1030"/><text x="49.6901%" y="1167.50">&lt;cipher:..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (3 samples, 0.02%)</title><rect x="55.5902%" y="1141" width="0.0180%" height="15" fill="rgb(238,56,10)" fg:x="9283" fg:w="3"/><text x="55.8402%" y="1151.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.02%)</title><rect x="55.5902%" y="1125" width="0.0180%" height="15" fill="rgb(235,196,14)" fg:x="9283" fg:w="3"/><text x="55.8402%" y="1135.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.02%)</title><rect x="55.5902%" y="1109" width="0.0180%" height="15" fill="rgb(216,45,48)" fg:x="9283" fg:w="3"/><text x="55.8402%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.02%)</title><rect x="55.5902%" y="1093" width="0.0180%" height="15" fill="rgb(238,213,17)" fg:x="9283" fg:w="3"/><text x="55.8402%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="55.5902%" y="1077" width="0.0180%" height="15" fill="rgb(212,13,2)" fg:x="9283" fg:w="3"/><text x="55.8402%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="55.5902%" y="1061" width="0.0180%" height="15" fill="rgb(240,114,20)" fg:x="9283" fg:w="3"/><text x="55.8402%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.01%)</title><rect x="55.5961%" y="1045" width="0.0120%" height="15" fill="rgb(228,41,40)" fg:x="9284" fg:w="2"/><text x="55.8461%" y="1055.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (4 samples, 0.02%)</title><rect x="55.6141%" y="1029" width="0.0240%" height="15" fill="rgb(244,132,35)" fg:x="9287" fg:w="4"/><text x="55.8641%" y="1039.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_no_auth_unaligned (8 samples, 0.05%)</title><rect x="55.6081%" y="1253" width="0.0479%" height="15" fill="rgb(253,189,4)" fg:x="9286" fg:w="8"/><text x="55.8581%" y="1263.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_b2b_no_auth (8 samples, 0.05%)</title><rect x="55.6081%" y="1237" width="0.0479%" height="15" fill="rgb(224,37,19)" fg:x="9286" fg:w="8"/><text x="55.8581%" y="1247.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b (8 samples, 0.05%)</title><rect x="55.6081%" y="1221" width="0.0479%" height="15" fill="rgb(235,223,18)" fg:x="9286" fg:w="8"/><text x="55.8581%" y="1231.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (8 samples, 0.05%)</title><rect x="55.6081%" y="1205" width="0.0479%" height="15" fill="rgb(235,163,25)" fg:x="9286" fg:w="8"/><text x="55.8581%" y="1215.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b::{{closure}} (8 samples, 0.05%)</title><rect x="55.6081%" y="1189" width="0.0479%" height="15" fill="rgb(217,145,28)" fg:x="9286" fg:w="8"/><text x="55.8581%" y="1199.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (8 samples, 0.05%)</title><rect x="55.6081%" y="1173" width="0.0479%" height="15" fill="rgb(223,223,32)" fg:x="9286" fg:w="8"/><text x="55.8581%" y="1183.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (8 samples, 0.05%)</title><rect x="55.6081%" y="1157" width="0.0479%" height="15" fill="rgb(227,189,39)" fg:x="9286" fg:w="8"/><text x="55.8581%" y="1167.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (8 samples, 0.05%)</title><rect x="55.6081%" y="1141" width="0.0479%" height="15" fill="rgb(248,10,22)" fg:x="9286" fg:w="8"/><text x="55.8581%" y="1151.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (8 samples, 0.05%)</title><rect x="55.6081%" y="1125" width="0.0479%" height="15" fill="rgb(248,46,39)" fg:x="9286" fg:w="8"/><text x="55.8581%" y="1135.50"></text></g><g><title>chacha20::backends::avx2::inner (8 samples, 0.05%)</title><rect x="55.6081%" y="1109" width="0.0479%" height="15" fill="rgb(248,113,48)" fg:x="9286" fg:w="8"/><text x="55.8581%" y="1119.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (8 samples, 0.05%)</title><rect x="55.6081%" y="1093" width="0.0479%" height="15" fill="rgb(245,16,25)" fg:x="9286" fg:w="8"/><text x="55.8581%" y="1103.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (8 samples, 0.05%)</title><rect x="55.6081%" y="1077" width="0.0479%" height="15" fill="rgb(249,152,16)" fg:x="9286" fg:w="8"/><text x="55.8581%" y="1087.50"></text></g><g><title>chacha20::backends::avx2::rounds (8 samples, 0.05%)</title><rect x="55.6081%" y="1061" width="0.0479%" height="15" fill="rgb(250,16,1)" fg:x="9286" fg:w="8"/><text x="55.8581%" y="1071.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (7 samples, 0.04%)</title><rect x="55.6141%" y="1045" width="0.0419%" height="15" fill="rgb(249,138,3)" fg:x="9287" fg:w="7"/><text x="55.8641%" y="1055.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.01%)</title><rect x="55.6441%" y="1029" width="0.0120%" height="15" fill="rgb(227,71,41)" fg:x="9292" fg:w="2"/><text x="55.8941%" y="1039.50"></text></g><g><title>blake3::ChunkState::update (2 samples, 0.01%)</title><rect x="55.6680%" y="1189" width="0.0120%" height="15" fill="rgb(209,184,23)" fg:x="9296" fg:w="2"/><text x="55.9180%" y="1199.50"></text></g><g><title>&lt;veilid_core::crypto::blake3digest512::Blake3Digest512 as digest::digest::Digest&gt;::update (4 samples, 0.02%)</title><rect x="55.6620%" y="1237" width="0.0240%" height="15" fill="rgb(223,215,31)" fg:x="9295" fg:w="4"/><text x="55.9120%" y="1247.50"></text></g><g><title>blake3::Hasher::update (4 samples, 0.02%)</title><rect x="55.6620%" y="1221" width="0.0240%" height="15" fill="rgb(210,146,28)" fg:x="9295" fg:w="4"/><text x="55.9120%" y="1231.50"></text></g><g><title>blake3::Hasher::update_with_join (4 samples, 0.02%)</title><rect x="55.6620%" y="1205" width="0.0240%" height="15" fill="rgb(209,183,41)" fg:x="9295" fg:w="4"/><text x="55.9120%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (3 samples, 0.02%)</title><rect x="55.6920%" y="1189" width="0.0180%" height="15" fill="rgb(209,224,45)" fg:x="9300" fg:w="3"/><text x="55.9420%" y="1199.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (3 samples, 0.02%)</title><rect x="55.6920%" y="1173" width="0.0180%" height="15" fill="rgb(224,209,51)" fg:x="9300" fg:w="3"/><text x="55.9420%" y="1183.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (2 samples, 0.01%)</title><rect x="55.7099%" y="1157" width="0.0120%" height="15" fill="rgb(223,17,39)" fg:x="9303" fg:w="2"/><text x="55.9599%" y="1167.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (2 samples, 0.01%)</title><rect x="55.7099%" y="1141" width="0.0120%" height="15" fill="rgb(234,204,37)" fg:x="9303" fg:w="2"/><text x="55.9599%" y="1151.50"></text></g><g><title>ed25519_dalek::keypair::Keypair::from_bytes (7 samples, 0.04%)</title><rect x="55.6860%" y="1237" width="0.0419%" height="15" fill="rgb(236,120,5)" fg:x="9299" fg:w="7"/><text x="55.9360%" y="1247.50"></text></g><g><title>ed25519_dalek::public::PublicKey::from_bytes (6 samples, 0.04%)</title><rect x="55.6920%" y="1221" width="0.0359%" height="15" fill="rgb(248,97,27)" fg:x="9300" fg:w="6"/><text x="55.9420%" y="1231.50"></text></g><g><title>curve25519_dalek::edwards::CompressedEdwardsY::decompress (6 samples, 0.04%)</title><rect x="55.6920%" y="1205" width="0.0359%" height="15" fill="rgb(240,66,17)" fg:x="9300" fg:w="6"/><text x="55.9420%" y="1215.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (3 samples, 0.02%)</title><rect x="55.7099%" y="1189" width="0.0180%" height="15" fill="rgb(210,79,3)" fg:x="9303" fg:w="3"/><text x="55.9599%" y="1199.50"></text></g><g><title>curve25519_dalek::field::&lt;impl subtle::ConstantTimeEq for curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::ct_eq (3 samples, 0.02%)</title><rect x="55.7099%" y="1173" width="0.0180%" height="15" fill="rgb(214,176,27)" fg:x="9303" fg:w="3"/><text x="55.9599%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.02%)</title><rect x="55.7339%" y="1125" width="0.0180%" height="15" fill="rgb(235,185,3)" fg:x="9307" fg:w="3"/><text x="55.9839%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="55.7339%" y="1109" width="0.0180%" height="15" fill="rgb(227,24,12)" fg:x="9307" fg:w="3"/><text x="55.9839%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="55.7339%" y="1093" width="0.0180%" height="15" fill="rgb(252,169,48)" fg:x="9307" fg:w="3"/><text x="55.9839%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.01%)</title><rect x="55.7399%" y="1077" width="0.0120%" height="15" fill="rgb(212,65,1)" fg:x="9308" fg:w="2"/><text x="55.9899%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.01%)</title><rect x="55.7399%" y="1061" width="0.0120%" height="15" fill="rgb(242,39,24)" fg:x="9308" fg:w="2"/><text x="55.9899%" y="1071.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.01%)</title><rect x="55.7399%" y="1045" width="0.0120%" height="15" fill="rgb(249,32,23)" fg:x="9308" fg:w="2"/><text x="55.9899%" y="1055.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (5 samples, 0.03%)</title><rect x="55.7279%" y="1189" width="0.0299%" height="15" fill="rgb(251,195,23)" fg:x="9306" fg:w="5"/><text x="55.9779%" y="1199.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (5 samples, 0.03%)</title><rect x="55.7279%" y="1173" width="0.0299%" height="15" fill="rgb(236,174,8)" fg:x="9306" fg:w="5"/><text x="55.9779%" y="1183.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.02%)</title><rect x="55.7339%" y="1157" width="0.0240%" height="15" fill="rgb(220,197,8)" fg:x="9307" fg:w="4"/><text x="55.9839%" y="1167.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.02%)</title><rect x="55.7339%" y="1141" width="0.0240%" height="15" fill="rgb(240,108,37)" fg:x="9307" fg:w="4"/><text x="55.9839%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="55.7578%" y="1109" width="0.0120%" height="15" fill="rgb(232,176,24)" fg:x="9311" fg:w="2"/><text x="56.0078%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="55.7578%" y="1093" width="0.0120%" height="15" fill="rgb(243,35,29)" fg:x="9311" fg:w="2"/><text x="56.0078%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="55.7578%" y="1077" width="0.0120%" height="15" fill="rgb(210,37,18)" fg:x="9311" fg:w="2"/><text x="56.0078%" y="1087.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.05%)</title><rect x="55.7279%" y="1221" width="0.0479%" height="15" fill="rgb(224,184,40)" fg:x="9306" fg:w="8"/><text x="55.9779%" y="1231.50"></text></g><g><title>&lt;ed25519_dalek::secret::ExpandedSecretKey as core::convert::From&lt;&amp;ed25519_dalek::secret::SecretKey&gt;&gt;::from (8 samples, 0.05%)</title><rect x="55.7279%" y="1205" width="0.0479%" height="15" fill="rgb(236,39,29)" fg:x="9306" fg:w="8"/><text x="55.9779%" y="1215.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as core::default::Default&gt;::default (3 samples, 0.02%)</title><rect x="55.7578%" y="1189" width="0.0180%" height="15" fill="rgb(232,48,39)" fg:x="9311" fg:w="3"/><text x="56.0078%" y="1199.50"></text></g><g><title>sha2::sha512::Engine512::new (3 samples, 0.02%)</title><rect x="55.7578%" y="1173" width="0.0180%" height="15" fill="rgb(236,34,42)" fg:x="9311" fg:w="3"/><text x="56.0078%" y="1183.50"></text></g><g><title>&lt;block_buffer::BlockBuffer&lt;BlockSize&gt; as core::default::Default&gt;::default (3 samples, 0.02%)</title><rect x="55.7578%" y="1157" width="0.0180%" height="15" fill="rgb(243,106,37)" fg:x="9311" fg:w="3"/><text x="56.0078%" y="1167.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.02%)</title><rect x="55.7578%" y="1141" width="0.0180%" height="15" fill="rgb(218,96,6)" fg:x="9311" fg:w="3"/><text x="56.0078%" y="1151.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.02%)</title><rect x="55.7578%" y="1125" width="0.0180%" height="15" fill="rgb(235,130,12)" fg:x="9311" fg:w="3"/><text x="56.0078%" y="1135.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::send_envelope::{{closure}}::{{closure}}::{{closure}} (1,060 samples, 6.35%)</title><rect x="49.4401%" y="1317" width="6.3477%" height="15" fill="rgb(231,95,0)" fg:x="8256" fg:w="1060"/><text x="49.6901%" y="1327.50">veilid_c..</text></g><g><title>veilid_core::network_manager::NetworkManager::build_envelope (30 samples, 0.18%)</title><rect x="55.6081%" y="1301" width="0.1797%" height="15" fill="rgb(228,12,23)" fg:x="9286" fg:w="30"/><text x="55.8581%" y="1311.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::build_envelope::{{closure}} (30 samples, 0.18%)</title><rect x="55.6081%" y="1285" width="0.1797%" height="15" fill="rgb(216,12,1)" fg:x="9286" fg:w="30"/><text x="55.8581%" y="1295.50"></text></g><g><title>veilid_core::crypto::envelope::Envelope::to_encrypted_data (30 samples, 0.18%)</title><rect x="55.6081%" y="1269" width="0.1797%" height="15" fill="rgb(219,59,3)" fg:x="9286" fg:w="30"/><text x="55.8581%" y="1279.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::sign (22 samples, 0.13%)</title><rect x="55.6560%" y="1253" width="0.1317%" height="15" fill="rgb(215,208,46)" fg:x="9294" fg:w="22"/><text x="55.9060%" y="1263.50"></text></g><g><title>ed25519_dalek::keypair::Keypair::sign_prehashed (10 samples, 0.06%)</title><rect x="55.7279%" y="1237" width="0.0599%" height="15" fill="rgb(254,224,29)" fg:x="9306" fg:w="10"/><text x="55.9779%" y="1247.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="55.8357%" y="1109" width="0.0120%" height="15" fill="rgb(232,14,29)" fg:x="9324" fg:w="2"/><text x="56.0857%" y="1119.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (2 samples, 0.01%)</title><rect x="55.8357%" y="1093" width="0.0120%" height="15" fill="rgb(208,45,52)" fg:x="9324" fg:w="2"/><text x="56.0857%" y="1103.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.01%)</title><rect x="55.8536%" y="1109" width="0.0120%" height="15" fill="rgb(234,191,28)" fg:x="9327" fg:w="2"/><text x="56.1036%" y="1119.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (2 samples, 0.01%)</title><rect x="55.8536%" y="1093" width="0.0120%" height="15" fill="rgb(244,67,43)" fg:x="9327" fg:w="2"/><text x="56.1036%" y="1103.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="55.8716%" y="1109" width="0.0180%" height="15" fill="rgb(236,189,24)" fg:x="9330" fg:w="3"/><text x="56.1216%" y="1119.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="55.8716%" y="1093" width="0.0180%" height="15" fill="rgb(239,214,33)" fg:x="9330" fg:w="3"/><text x="56.1216%" y="1103.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (21 samples, 0.13%)</title><rect x="55.7878%" y="1125" width="0.1258%" height="15" fill="rgb(226,176,41)" fg:x="9316" fg:w="21"/><text x="56.0378%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.02%)</title><rect x="55.8956%" y="1109" width="0.0180%" height="15" fill="rgb(248,47,8)" fg:x="9334" fg:w="3"/><text x="56.1456%" y="1119.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.02%)</title><rect x="55.8956%" y="1093" width="0.0180%" height="15" fill="rgb(218,81,44)" fg:x="9334" fg:w="3"/><text x="56.1456%" y="1103.50"></text></g><g><title>chacha20::backends::avx2::inner (6 samples, 0.04%)</title><rect x="55.9195%" y="1125" width="0.0359%" height="15" fill="rgb(213,98,6)" fg:x="9338" fg:w="6"/><text x="56.1695%" y="1135.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (2 samples, 0.01%)</title><rect x="55.9554%" y="1125" width="0.0120%" height="15" fill="rgb(222,85,22)" fg:x="9344" fg:w="2"/><text x="56.2054%" y="1135.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (2 samples, 0.01%)</title><rect x="55.9554%" y="1109" width="0.0120%" height="15" fill="rgb(239,46,39)" fg:x="9344" fg:w="2"/><text x="56.2054%" y="1119.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (105 samples, 0.63%)</title><rect x="57.0633%" y="1109" width="0.6288%" height="15" fill="rgb(237,12,29)" fg:x="9529" fg:w="105"/><text x="57.3133%" y="1119.50"></text></g><g><title>core::slice::raw::from_raw_parts (52 samples, 0.31%)</title><rect x="57.3807%" y="1093" width="0.3114%" height="15" fill="rgb(214,77,8)" fg:x="9582" fg:w="52"/><text x="57.6307%" y="1103.50"></text></g><g><title>core::ptr::slice_from_raw_parts (45 samples, 0.27%)</title><rect x="57.4226%" y="1077" width="0.2695%" height="15" fill="rgb(217,168,37)" fg:x="9589" fg:w="45"/><text x="57.6726%" y="1087.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (44 samples, 0.26%)</title><rect x="57.4286%" y="1061" width="0.2635%" height="15" fill="rgb(221,217,23)" fg:x="9590" fg:w="44"/><text x="57.6786%" y="1071.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (20 samples, 0.12%)</title><rect x="57.9077%" y="1061" width="0.1198%" height="15" fill="rgb(243,229,36)" fg:x="9670" fg:w="20"/><text x="58.1577%" y="1071.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (57 samples, 0.34%)</title><rect x="57.6921%" y="1109" width="0.3413%" height="15" fill="rgb(251,163,40)" fg:x="9634" fg:w="57"/><text x="57.9421%" y="1119.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (25 samples, 0.15%)</title><rect x="57.8837%" y="1093" width="0.1497%" height="15" fill="rgb(237,222,12)" fg:x="9666" fg:w="25"/><text x="58.1337%" y="1103.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (21 samples, 0.13%)</title><rect x="57.9077%" y="1077" width="0.1258%" height="15" fill="rgb(248,132,6)" fg:x="9670" fg:w="21"/><text x="58.1577%" y="1087.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (5 samples, 0.03%)</title><rect x="58.2250%" y="1077" width="0.0299%" height="15" fill="rgb(227,167,50)" fg:x="9723" fg:w="5"/><text x="58.4750%" y="1087.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (5 samples, 0.03%)</title><rect x="58.2250%" y="1061" width="0.0299%" height="15" fill="rgb(242,84,37)" fg:x="9723" fg:w="5"/><text x="58.4750%" y="1071.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (3 samples, 0.02%)</title><rect x="58.2550%" y="1077" width="0.0180%" height="15" fill="rgb(212,4,50)" fg:x="9728" fg:w="3"/><text x="58.5050%" y="1087.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (9 samples, 0.05%)</title><rect x="58.2730%" y="1077" width="0.0539%" height="15" fill="rgb(230,228,32)" fg:x="9731" fg:w="9"/><text x="58.5230%" y="1087.50"></text></g><g><title>core::mem::replace (5 samples, 0.03%)</title><rect x="58.3867%" y="1061" width="0.0299%" height="15" fill="rgb(248,217,23)" fg:x="9750" fg:w="5"/><text x="58.6367%" y="1071.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (417 samples, 2.50%)</title><rect x="55.9674%" y="1125" width="2.4972%" height="15" fill="rgb(238,197,32)" fg:x="9346" fg:w="417"/><text x="56.2174%" y="1135.50">in..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (71 samples, 0.43%)</title><rect x="58.0394%" y="1109" width="0.4252%" height="15" fill="rgb(236,106,1)" fg:x="9692" fg:w="71"/><text x="58.2894%" y="1119.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (70 samples, 0.42%)</title><rect x="58.0454%" y="1093" width="0.4192%" height="15" fill="rgb(219,228,13)" fg:x="9693" fg:w="70"/><text x="58.2954%" y="1103.50"></text></g><g><title>core::mem::replace (23 samples, 0.14%)</title><rect x="58.3268%" y="1077" width="0.1377%" height="15" fill="rgb(238,30,35)" fg:x="9740" fg:w="23"/><text x="58.5768%" y="1087.50"></text></g><g><title>core::ptr::read (8 samples, 0.05%)</title><rect x="58.4167%" y="1061" width="0.0479%" height="15" fill="rgb(236,70,23)" fg:x="9755" fg:w="8"/><text x="58.6667%" y="1071.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (449 samples, 2.69%)</title><rect x="55.7878%" y="1205" width="2.6888%" height="15" fill="rgb(249,104,48)" fg:x="9316" fg:w="449"/><text x="56.0378%" y="1215.50">ci..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (449 samples, 2.69%)</title><rect x="55.7878%" y="1189" width="2.6888%" height="15" fill="rgb(254,117,50)" fg:x="9316" fg:w="449"/><text x="56.0378%" y="1199.50">&lt;c..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (449 samples, 2.69%)</title><rect x="55.7878%" y="1173" width="2.6888%" height="15" fill="rgb(223,152,4)" fg:x="9316" fg:w="449"/><text x="56.0378%" y="1183.50">&lt;c..</text></g><g><title>chacha20::backends::avx2::inner (449 samples, 2.69%)</title><rect x="55.7878%" y="1157" width="2.6888%" height="15" fill="rgb(245,6,2)" fg:x="9316" fg:w="449"/><text x="56.0378%" y="1167.50">ch..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (449 samples, 2.69%)</title><rect x="55.7878%" y="1141" width="2.6888%" height="15" fill="rgb(249,150,24)" fg:x="9316" fg:w="449"/><text x="56.0378%" y="1151.50">&lt;c..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (2 samples, 0.01%)</title><rect x="58.4646%" y="1125" width="0.0120%" height="15" fill="rgb(228,185,42)" fg:x="9763" fg:w="2"/><text x="58.7146%" y="1135.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::apply_network_key (457 samples, 2.74%)</title><rect x="55.7878%" y="1285" width="2.7367%" height="15" fill="rgb(226,39,33)" fg:x="9316" fg:w="457"/><text x="56.0378%" y="1295.50">ve..</text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_in_place_no_auth (457 samples, 2.74%)</title><rect x="55.7878%" y="1269" width="2.7367%" height="15" fill="rgb(221,166,19)" fg:x="9316" fg:w="457"/><text x="56.0378%" y="1279.50">&lt;v..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (457 samples, 2.74%)</title><rect x="55.7878%" y="1253" width="2.7367%" height="15" fill="rgb(209,109,2)" fg:x="9316" fg:w="457"/><text x="56.0378%" y="1263.50">ci..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (457 samples, 2.74%)</title><rect x="55.7878%" y="1237" width="2.7367%" height="15" fill="rgb(252,216,26)" fg:x="9316" fg:w="457"/><text x="56.0378%" y="1247.50">ci..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (457 samples, 2.74%)</title><rect x="55.7878%" y="1221" width="2.7367%" height="15" fill="rgb(227,173,36)" fg:x="9316" fg:w="457"/><text x="56.0378%" y="1231.50">&lt;c..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (8 samples, 0.05%)</title><rect x="58.4766%" y="1205" width="0.0479%" height="15" fill="rgb(209,90,7)" fg:x="9765" fg:w="8"/><text x="58.7266%" y="1215.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (8 samples, 0.05%)</title><rect x="58.4766%" y="1189" width="0.0479%" height="15" fill="rgb(250,194,11)" fg:x="9765" fg:w="8"/><text x="58.7266%" y="1199.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (8 samples, 0.05%)</title><rect x="58.4766%" y="1173" width="0.0479%" height="15" fill="rgb(220,72,50)" fg:x="9765" fg:w="8"/><text x="58.7266%" y="1183.50"></text></g><g><title>chacha20::backends::avx2::inner (8 samples, 0.05%)</title><rect x="58.4766%" y="1157" width="0.0479%" height="15" fill="rgb(222,106,48)" fg:x="9765" fg:w="8"/><text x="58.7266%" y="1167.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (8 samples, 0.05%)</title><rect x="58.4766%" y="1141" width="0.0479%" height="15" fill="rgb(216,220,45)" fg:x="9765" fg:w="8"/><text x="58.7266%" y="1151.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (8 samples, 0.05%)</title><rect x="58.4766%" y="1125" width="0.0479%" height="15" fill="rgb(234,112,18)" fg:x="9765" fg:w="8"/><text x="58.7266%" y="1135.50"></text></g><g><title>chacha20::backends::avx2::rounds (8 samples, 0.05%)</title><rect x="58.4766%" y="1109" width="0.0479%" height="15" fill="rgb(206,179,9)" fg:x="9765" fg:w="8"/><text x="58.7266%" y="1119.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (8 samples, 0.05%)</title><rect x="58.4766%" y="1093" width="0.0479%" height="15" fill="rgb(215,115,40)" fg:x="9765" fg:w="8"/><text x="58.7266%" y="1103.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (8 samples, 0.05%)</title><rect x="58.4766%" y="1077" width="0.0479%" height="15" fill="rgb(222,69,34)" fg:x="9765" fg:w="8"/><text x="58.7266%" y="1087.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::send_envelope::{{closure}}::{{closure}} (460 samples, 2.75%)</title><rect x="55.7878%" y="1317" width="2.7547%" height="15" fill="rgb(209,161,10)" fg:x="9316" fg:w="460"/><text x="56.0378%" y="1327.50">ve..</text></g><g><title>veilid_core::network_manager::NetworkManager::send_envelope::{{closure}}::{{closure}}::{{closure}} (460 samples, 2.75%)</title><rect x="55.7878%" y="1301" width="2.7547%" height="15" fill="rgb(217,6,38)" fg:x="9316" fg:w="460"/><text x="56.0378%" y="1311.50">ve..</text></g><g><title>veilid_core::network_manager::NetworkManager::build_envelope (3 samples, 0.02%)</title><rect x="58.5245%" y="1285" width="0.0180%" height="15" fill="rgb(229,229,48)" fg:x="9773" fg:w="3"/><text x="58.7745%" y="1295.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::build_envelope::{{closure}} (3 samples, 0.02%)</title><rect x="58.5245%" y="1269" width="0.0180%" height="15" fill="rgb(225,21,28)" fg:x="9773" fg:w="3"/><text x="58.7745%" y="1279.50"></text></g><g><title>veilid_core::crypto::envelope::Envelope::to_encrypted_data (3 samples, 0.02%)</title><rect x="58.5245%" y="1253" width="0.0180%" height="15" fill="rgb(206,33,13)" fg:x="9773" fg:w="3"/><text x="58.7745%" y="1263.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::sign (2 samples, 0.01%)</title><rect x="58.5305%" y="1237" width="0.0120%" height="15" fill="rgb(242,178,17)" fg:x="9774" fg:w="2"/><text x="58.7805%" y="1247.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::cached_dh (2 samples, 0.01%)</title><rect x="58.5484%" y="1221" width="0.0120%" height="15" fill="rgb(220,162,5)" fg:x="9777" fg:w="2"/><text x="58.7984%" y="1231.50"></text></g><g><title>veilid_core::crypto::Crypto::cached_dh_internal (2 samples, 0.01%)</title><rect x="58.5484%" y="1205" width="0.0120%" height="15" fill="rgb(210,33,43)" fg:x="9777" fg:w="2"/><text x="58.7984%" y="1215.50"></text></g><g><title>hashlink::lru_cache::LruCache&lt;K,V,S&gt;::entry (2 samples, 0.01%)</title><rect x="58.5484%" y="1189" width="0.0120%" height="15" fill="rgb(216,116,54)" fg:x="9777" fg:w="2"/><text x="58.7984%" y="1199.50"></text></g><g><title>chacha20::xchacha::quarter_round (5 samples, 0.03%)</title><rect x="58.5724%" y="1141" width="0.0299%" height="15" fill="rgb(249,92,24)" fg:x="9781" fg:w="5"/><text x="58.8224%" y="1151.50"></text></g><g><title>chacha20::xchacha::hchacha (8 samples, 0.05%)</title><rect x="58.5664%" y="1157" width="0.0479%" height="15" fill="rgb(231,189,14)" fg:x="9780" fg:w="8"/><text x="58.8164%" y="1167.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (10 samples, 0.06%)</title><rect x="58.5604%" y="1173" width="0.0599%" height="15" fill="rgb(230,8,41)" fg:x="9779" fg:w="10"/><text x="58.8104%" y="1183.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (11 samples, 0.07%)</title><rect x="58.5604%" y="1189" width="0.0659%" height="15" fill="rgb(249,7,27)" fg:x="9779" fg:w="11"/><text x="58.8104%" y="1199.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_no_auth_unaligned (12 samples, 0.07%)</title><rect x="58.5604%" y="1221" width="0.0719%" height="15" fill="rgb(232,86,5)" fg:x="9779" fg:w="12"/><text x="58.8104%" y="1231.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_b2b_no_auth (12 samples, 0.07%)</title><rect x="58.5604%" y="1205" width="0.0719%" height="15" fill="rgb(224,175,18)" fg:x="9779" fg:w="12"/><text x="58.8104%" y="1215.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::send_envelope::{{closure}} (17 samples, 0.10%)</title><rect x="58.5424%" y="1317" width="0.1018%" height="15" fill="rgb(220,129,12)" fg:x="9776" fg:w="17"/><text x="58.7924%" y="1327.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::send_envelope::{{closure}}::{{closure}} (17 samples, 0.10%)</title><rect x="58.5424%" y="1301" width="0.1018%" height="15" fill="rgb(210,19,36)" fg:x="9776" fg:w="17"/><text x="58.7924%" y="1311.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::send_envelope::{{closure}}::{{closure}}::{{closure}} (17 samples, 0.10%)</title><rect x="58.5424%" y="1285" width="0.1018%" height="15" fill="rgb(219,96,14)" fg:x="9776" fg:w="17"/><text x="58.7924%" y="1295.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::build_envelope (16 samples, 0.10%)</title><rect x="58.5484%" y="1269" width="0.0958%" height="15" fill="rgb(249,106,1)" fg:x="9777" fg:w="16"/><text x="58.7984%" y="1279.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::build_envelope::{{closure}} (16 samples, 0.10%)</title><rect x="58.5484%" y="1253" width="0.0958%" height="15" fill="rgb(249,155,20)" fg:x="9777" fg:w="16"/><text x="58.7984%" y="1263.50"></text></g><g><title>veilid_core::crypto::envelope::Envelope::to_encrypted_data (16 samples, 0.10%)</title><rect x="58.5484%" y="1237" width="0.0958%" height="15" fill="rgb(244,168,9)" fg:x="9777" fg:w="16"/><text x="58.7984%" y="1247.50"></text></g><g><title>alloc::vec::from_elem (2 samples, 0.01%)</title><rect x="58.6323%" y="1221" width="0.0120%" height="15" fill="rgb(216,23,50)" fg:x="9791" fg:w="2"/><text x="58.8823%" y="1231.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2 samples, 0.01%)</title><rect x="58.6323%" y="1205" width="0.0120%" height="15" fill="rgb(224,219,20)" fg:x="9791" fg:w="2"/><text x="58.8823%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (2 samples, 0.01%)</title><rect x="58.6323%" y="1189" width="0.0120%" height="15" fill="rgb(222,156,15)" fg:x="9791" fg:w="2"/><text x="58.8823%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="58.6323%" y="1173" width="0.0120%" height="15" fill="rgb(231,97,17)" fg:x="9791" fg:w="2"/><text x="58.8823%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (2 samples, 0.01%)</title><rect x="58.6323%" y="1157" width="0.0120%" height="15" fill="rgb(218,70,48)" fg:x="9791" fg:w="2"/><text x="58.8823%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="58.6323%" y="1141" width="0.0120%" height="15" fill="rgb(212,196,52)" fg:x="9791" fg:w="2"/><text x="58.8823%" y="1151.50"></text></g><g><title>veilid_core::network_manager::native::Network::network_interfaces_task_routine::{{closure}} (2 samples, 0.01%)</title><rect x="58.6502%" y="1317" width="0.0120%" height="15" fill="rgb(243,203,18)" fg:x="9794" fg:w="2"/><text x="58.9002%" y="1327.50"></text></g><g><title>veilid_core::network_manager::native::Network::network_interfaces_task_routine::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="58.6502%" y="1301" width="0.0120%" height="15" fill="rgb(252,125,41)" fg:x="9794" fg:w="2"/><text x="58.9002%" y="1311.50"></text></g><g><title>veilid_core::network_manager::native::Network::network_interfaces_task_routine::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="58.6502%" y="1285" width="0.0120%" height="15" fill="rgb(223,180,33)" fg:x="9794" fg:w="2"/><text x="58.9002%" y="1295.50"></text></g><g><title>veilid_core::network_manager::native::Network::check_interface_addresses::{{closure}} (2 samples, 0.01%)</title><rect x="58.6502%" y="1269" width="0.0120%" height="15" fill="rgb(254,159,46)" fg:x="9794" fg:w="2"/><text x="58.9002%" y="1279.50"></text></g><g><title>veilid_core::intf::native::network_interfaces::NetworkInterfaces::refresh::{{closure}} (2 samples, 0.01%)</title><rect x="58.6502%" y="1253" width="0.0120%" height="15" fill="rgb(254,38,10)" fg:x="9794" fg:w="2"/><text x="58.9002%" y="1263.50"></text></g><g><title>veilid_core::intf::native::network_interfaces::netlink::PlatformSupportNetlink::get_interfaces::{{closure}} (2 samples, 0.01%)</title><rect x="58.6502%" y="1237" width="0.0120%" height="15" fill="rgb(208,217,32)" fg:x="9794" fg:w="2"/><text x="58.9002%" y="1247.50"></text></g><g><title>veilid_core::intf::native::network_interfaces::netlink::PlatformSupportNetlink::get_interfaces_internal::{{closure}} (2 samples, 0.01%)</title><rect x="58.6502%" y="1221" width="0.0120%" height="15" fill="rgb(221,120,13)" fg:x="9794" fg:w="2"/><text x="58.9002%" y="1231.50"></text></g><g><title>ip_make_skb (2 samples, 0.01%)</title><rect x="58.6742%" y="965" width="0.0120%" height="15" fill="rgb(246,54,52)" fg:x="9798" fg:w="2"/><text x="58.9242%" y="975.50"></text></g><g><title>__ip_append_data (2 samples, 0.01%)</title><rect x="58.6742%" y="949" width="0.0120%" height="15" fill="rgb(242,34,25)" fg:x="9798" fg:w="2"/><text x="58.9242%" y="959.50"></text></g><g><title>__dev_xmit_skb (2 samples, 0.01%)</title><rect x="58.6921%" y="837" width="0.0120%" height="15" fill="rgb(247,209,9)" fg:x="9801" fg:w="2"/><text x="58.9421%" y="847.50"></text></g><g><title>veilid_core::network_manager::native::protocol::udp::RawUdpProtocolHandler::send_message::{{closure}}::{{closure}}::{{closure}} (8 samples, 0.05%)</title><rect x="58.6622%" y="1269" width="0.0479%" height="15" fill="rgb(228,71,26)" fg:x="9796" fg:w="8"/><text x="58.9122%" y="1279.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to::{{closure}} (7 samples, 0.04%)</title><rect x="58.6682%" y="1253" width="0.0419%" height="15" fill="rgb(222,145,49)" fg:x="9797" fg:w="7"/><text x="58.9182%" y="1263.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}} (7 samples, 0.04%)</title><rect x="58.6682%" y="1237" width="0.0419%" height="15" fill="rgb(218,121,17)" fg:x="9797" fg:w="7"/><text x="58.9182%" y="1247.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (7 samples, 0.04%)</title><rect x="58.6682%" y="1221" width="0.0419%" height="15" fill="rgb(244,50,7)" fg:x="9797" fg:w="7"/><text x="58.9182%" y="1231.50"></text></g><g><title>tokio::net::udp::UdpSocket::send_to_addr::{{closure}}::{{closure}} (7 samples, 0.04%)</title><rect x="58.6682%" y="1205" width="0.0419%" height="15" fill="rgb(246,229,37)" fg:x="9797" fg:w="7"/><text x="58.9182%" y="1215.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to (7 samples, 0.04%)</title><rect x="58.6682%" y="1189" width="0.0419%" height="15" fill="rgb(225,18,5)" fg:x="9797" fg:w="7"/><text x="58.9182%" y="1199.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (7 samples, 0.04%)</title><rect x="58.6682%" y="1173" width="0.0419%" height="15" fill="rgb(213,204,8)" fg:x="9797" fg:w="7"/><text x="58.9182%" y="1183.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (7 samples, 0.04%)</title><rect x="58.6682%" y="1157" width="0.0419%" height="15" fill="rgb(238,103,6)" fg:x="9797" fg:w="7"/><text x="58.9182%" y="1167.50"></text></g><g><title>mio::net::udp::UdpSocket::send_to::{{closure}} (7 samples, 0.04%)</title><rect x="58.6682%" y="1141" width="0.0419%" height="15" fill="rgb(222,25,35)" fg:x="9797" fg:w="7"/><text x="58.9182%" y="1151.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (7 samples, 0.04%)</title><rect x="58.6682%" y="1125" width="0.0419%" height="15" fill="rgb(213,203,35)" fg:x="9797" fg:w="7"/><text x="58.9182%" y="1135.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (7 samples, 0.04%)</title><rect x="58.6682%" y="1109" width="0.0419%" height="15" fill="rgb(221,79,53)" fg:x="9797" fg:w="7"/><text x="58.9182%" y="1119.50"></text></g><g><title>__libc_sendto (7 samples, 0.04%)</title><rect x="58.6682%" y="1093" width="0.0419%" height="15" fill="rgb(243,200,35)" fg:x="9797" fg:w="7"/><text x="58.9182%" y="1103.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="58.6682%" y="1077" width="0.0419%" height="15" fill="rgb(248,60,25)" fg:x="9797" fg:w="7"/><text x="58.9182%" y="1087.50"></text></g><g><title>do_syscall_64 (7 samples, 0.04%)</title><rect x="58.6682%" y="1061" width="0.0419%" height="15" fill="rgb(227,53,46)" fg:x="9797" fg:w="7"/><text x="58.9182%" y="1071.50"></text></g><g><title>__x64_sys_sendto (7 samples, 0.04%)</title><rect x="58.6682%" y="1045" width="0.0419%" height="15" fill="rgb(216,120,32)" fg:x="9797" fg:w="7"/><text x="58.9182%" y="1055.50"></text></g><g><title>__sys_sendto (7 samples, 0.04%)</title><rect x="58.6682%" y="1029" width="0.0419%" height="15" fill="rgb(220,134,1)" fg:x="9797" fg:w="7"/><text x="58.9182%" y="1039.50"></text></g><g><title>sock_sendmsg (6 samples, 0.04%)</title><rect x="58.6742%" y="1013" width="0.0359%" height="15" fill="rgb(237,168,5)" fg:x="9798" fg:w="6"/><text x="58.9242%" y="1023.50"></text></g><g><title>inet_sendmsg (6 samples, 0.04%)</title><rect x="58.6742%" y="997" width="0.0359%" height="15" fill="rgb(231,100,33)" fg:x="9798" fg:w="6"/><text x="58.9242%" y="1007.50"></text></g><g><title>udp_sendmsg (6 samples, 0.04%)</title><rect x="58.6742%" y="981" width="0.0359%" height="15" fill="rgb(236,177,47)" fg:x="9798" fg:w="6"/><text x="58.9242%" y="991.50"></text></g><g><title>udp_send_skb (3 samples, 0.02%)</title><rect x="58.6921%" y="965" width="0.0180%" height="15" fill="rgb(235,7,49)" fg:x="9801" fg:w="3"/><text x="58.9421%" y="975.50"></text></g><g><title>ip_send_skb (3 samples, 0.02%)</title><rect x="58.6921%" y="949" width="0.0180%" height="15" fill="rgb(232,119,22)" fg:x="9801" fg:w="3"/><text x="58.9421%" y="959.50"></text></g><g><title>ip_output (3 samples, 0.02%)</title><rect x="58.6921%" y="933" width="0.0180%" height="15" fill="rgb(254,73,53)" fg:x="9801" fg:w="3"/><text x="58.9421%" y="943.50"></text></g><g><title>ip_finish_output (3 samples, 0.02%)</title><rect x="58.6921%" y="917" width="0.0180%" height="15" fill="rgb(251,35,20)" fg:x="9801" fg:w="3"/><text x="58.9421%" y="927.50"></text></g><g><title>__ip_finish_output (3 samples, 0.02%)</title><rect x="58.6921%" y="901" width="0.0180%" height="15" fill="rgb(241,119,20)" fg:x="9801" fg:w="3"/><text x="58.9421%" y="911.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.02%)</title><rect x="58.6921%" y="885" width="0.0180%" height="15" fill="rgb(207,102,14)" fg:x="9801" fg:w="3"/><text x="58.9421%" y="895.50"></text></g><g><title>neigh_hh_output (3 samples, 0.02%)</title><rect x="58.6921%" y="869" width="0.0180%" height="15" fill="rgb(248,201,50)" fg:x="9801" fg:w="3"/><text x="58.9421%" y="879.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.02%)</title><rect x="58.6921%" y="853" width="0.0180%" height="15" fill="rgb(222,185,44)" fg:x="9801" fg:w="3"/><text x="58.9421%" y="863.50"></text></g><g><title>veilid_core::network_manager::native::Network::send_data_to_dial_info::{{closure}}::{{closure}}::{{closure}} (9 samples, 0.05%)</title><rect x="58.6622%" y="1317" width="0.0539%" height="15" fill="rgb(218,107,18)" fg:x="9796" fg:w="9"/><text x="58.9122%" y="1327.50"></text></g><g><title>veilid_core::network_manager::native::protocol::udp::RawUdpProtocolHandler::send_message::{{closure}} (9 samples, 0.05%)</title><rect x="58.6622%" y="1301" width="0.0539%" height="15" fill="rgb(237,177,39)" fg:x="9796" fg:w="9"/><text x="58.9122%" y="1311.50"></text></g><g><title>veilid_tools::assembly_buffer::AssemblyBuffer::split_message::{{closure}} (9 samples, 0.05%)</title><rect x="58.6622%" y="1285" width="0.0539%" height="15" fill="rgb(246,69,6)" fg:x="9796" fg:w="9"/><text x="58.9122%" y="1295.50"></text></g><g><title>veilid_core::network_manager::connection_handle::ConnectionHandle::send_async::{{closure}} (2 samples, 0.01%)</title><rect x="58.7161%" y="1301" width="0.0120%" height="15" fill="rgb(234,208,37)" fg:x="9805" fg:w="2"/><text x="58.9661%" y="1311.50"></text></g><g><title>veilid_core::network_manager::connection_handle::ConnectionHandle::send_async::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="58.7161%" y="1285" width="0.0120%" height="15" fill="rgb(225,4,6)" fg:x="9805" fg:w="2"/><text x="58.9661%" y="1295.50"></text></g><g><title>veilid_core::network_manager::native::protocol::udp::RawUdpProtocolHandler::send_message::{{closure}} (2 samples, 0.01%)</title><rect x="58.7281%" y="1301" width="0.0120%" height="15" fill="rgb(233,45,0)" fg:x="9807" fg:w="2"/><text x="58.9781%" y="1311.50"></text></g><g><title>veilid_tools::assembly_buffer::AssemblyBuffer::split_message::{{closure}} (2 samples, 0.01%)</title><rect x="58.7281%" y="1285" width="0.0120%" height="15" fill="rgb(226,136,5)" fg:x="9807" fg:w="2"/><text x="58.9781%" y="1295.50"></text></g><g><title>veilid_core::network_manager::native::Network::send_data_to_existing_connection::{{closure}}::{{closure}}::{{closure}} (5 samples, 0.03%)</title><rect x="58.7161%" y="1317" width="0.0299%" height="15" fill="rgb(211,91,47)" fg:x="9805" fg:w="5"/><text x="58.9661%" y="1327.50"></text></g><g><title>veilid_core::network_manager::native::Network::send_data_to_existing_connection::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="58.7460%" y="1317" width="0.0180%" height="15" fill="rgb(242,88,51)" fg:x="9810" fg:w="3"/><text x="58.9960%" y="1327.50"></text></g><g><title>veilid_core::network_manager::native::Network::send_data_to_existing_connection::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="58.7460%" y="1301" width="0.0180%" height="15" fill="rgb(230,91,28)" fg:x="9810" fg:w="3"/><text x="58.9960%" y="1311.50"></text></g><g><title>veilid_core::network_manager::stats::&lt;impl veilid_core::network_manager::NetworkManager&gt;::stats_packet_sent (2 samples, 0.01%)</title><rect x="58.7520%" y="1285" width="0.0120%" height="15" fill="rgb(254,186,29)" fg:x="9811" fg:w="2"/><text x="59.0020%" y="1295.50"></text></g><g><title>veilid_core::network_manager::types::dial_info::DialInfo::try_ws (6 samples, 0.04%)</title><rect x="58.7640%" y="1285" width="0.0359%" height="15" fill="rgb(238,6,4)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1295.50"></text></g><g><title>&lt;veilid_tools::split_url::SplitUrl as core::str::traits::FromStr&gt;::from_str (6 samples, 0.04%)</title><rect x="58.7640%" y="1269" width="0.0359%" height="15" fill="rgb(221,151,16)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1279.50"></text></g><g><title>core::str::&lt;impl str&gt;::split_once (6 samples, 0.04%)</title><rect x="58.7640%" y="1253" width="0.0359%" height="15" fill="rgb(251,143,52)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1263.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (6 samples, 0.04%)</title><rect x="58.7640%" y="1237" width="0.0359%" height="15" fill="rgb(206,90,15)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1247.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (6 samples, 0.04%)</title><rect x="58.7640%" y="1221" width="0.0359%" height="15" fill="rgb(218,35,8)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1231.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.04%)</title><rect x="58.7640%" y="1205" width="0.0359%" height="15" fill="rgb(239,215,6)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1215.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.04%)</title><rect x="58.7640%" y="1189" width="0.0359%" height="15" fill="rgb(245,116,39)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1199.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.04%)</title><rect x="58.7640%" y="1173" width="0.0359%" height="15" fill="rgb(242,65,28)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1183.50"></text></g><g><title>exc_page_fault (6 samples, 0.04%)</title><rect x="58.7640%" y="1157" width="0.0359%" height="15" fill="rgb(252,132,53)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1167.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.04%)</title><rect x="58.7640%" y="1141" width="0.0359%" height="15" fill="rgb(224,159,50)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1151.50"></text></g><g><title>down_read (6 samples, 0.04%)</title><rect x="58.7640%" y="1125" width="0.0359%" height="15" fill="rgb(224,93,4)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1135.50"></text></g><g><title>rwsem_down_read_slowpath (6 samples, 0.04%)</title><rect x="58.7640%" y="1109" width="0.0359%" height="15" fill="rgb(208,81,34)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1119.50"></text></g><g><title>schedule_preempt_disabled (6 samples, 0.04%)</title><rect x="58.7640%" y="1093" width="0.0359%" height="15" fill="rgb(233,92,54)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1103.50"></text></g><g><title>schedule (6 samples, 0.04%)</title><rect x="58.7640%" y="1077" width="0.0359%" height="15" fill="rgb(237,21,14)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1087.50"></text></g><g><title>__schedule (6 samples, 0.04%)</title><rect x="58.7640%" y="1061" width="0.0359%" height="15" fill="rgb(249,128,51)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1071.50"></text></g><g><title>finish_task_switch.isra.0 (6 samples, 0.04%)</title><rect x="58.7640%" y="1045" width="0.0359%" height="15" fill="rgb(223,129,24)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1055.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 0.04%)</title><rect x="58.7640%" y="1029" width="0.0359%" height="15" fill="rgb(231,168,25)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1039.50"></text></g><g><title>perf_ctx_enable (6 samples, 0.04%)</title><rect x="58.7640%" y="1013" width="0.0359%" height="15" fill="rgb(224,39,20)" fg:x="9813" fg:w="6"/><text x="59.0140%" y="1023.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.03%)</title><rect x="58.7700%" y="997" width="0.0299%" height="15" fill="rgb(225,152,53)" fg:x="9814" fg:w="5"/><text x="59.0200%" y="1007.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.03%)</title><rect x="58.7700%" y="981" width="0.0299%" height="15" fill="rgb(252,17,24)" fg:x="9814" fg:w="5"/><text x="59.0200%" y="991.50"></text></g><g><title>native_write_msr (5 samples, 0.03%)</title><rect x="58.7700%" y="965" width="0.0299%" height="15" fill="rgb(250,114,30)" fg:x="9814" fg:w="5"/><text x="59.0200%" y="975.50"></text></g><g><title>veilid_core::network_manager::native::Network::startup::{{closure}}::{{closure}}::{{closure}} (7 samples, 0.04%)</title><rect x="58.7640%" y="1317" width="0.0419%" height="15" fill="rgb(229,5,4)" fg:x="9813" fg:w="7"/><text x="59.0140%" y="1327.50"></text></g><g><title>veilid_core::network_manager::native::start_protocols::&lt;impl veilid_core::network_manager::native::Network&gt;::start_ws_listeners::{{closure}} (7 samples, 0.04%)</title><rect x="58.7640%" y="1301" width="0.0419%" height="15" fill="rgb(225,176,49)" fg:x="9813" fg:w="7"/><text x="59.0140%" y="1311.50"></text></g><g><title>veilid_core::network_manager::native::igd_manager::IGDManager::map_any_port::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="58.8059%" y="1317" width="0.0180%" height="15" fill="rgb(224,221,49)" fg:x="9820" fg:w="3"/><text x="59.0559%" y="1327.50"></text></g><g><title>veilid_core::network_manager::native::igd_manager::IGDManager::find_gateway (2 samples, 0.01%)</title><rect x="58.8119%" y="1301" width="0.0120%" height="15" fill="rgb(253,169,27)" fg:x="9821" fg:w="2"/><text x="59.0619%" y="1311.50"></text></g><g><title>igd::search::search_gateway (2 samples, 0.01%)</title><rect x="58.8119%" y="1285" width="0.0120%" height="15" fill="rgb(211,206,16)" fg:x="9821" fg:w="2"/><text x="59.0619%" y="1295.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="58.8598%" y="1269" width="0.0120%" height="15" fill="rgb(244,87,35)" fg:x="9829" fg:w="2"/><text x="59.1098%" y="1279.50"></text></g><g><title>&lt;core::result::Result&lt;T,std::io::error::Error&gt; as veilid_tools::network_result::IoNetworkResultExt&lt;T&gt;&gt;::into_network_result (3 samples, 0.02%)</title><rect x="58.8718%" y="1269" width="0.0180%" height="15" fill="rgb(246,28,10)" fg:x="9831" fg:w="3"/><text x="59.1218%" y="1279.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="58.8718%" y="1253" width="0.0180%" height="15" fill="rgb(229,12,44)" fg:x="9831" fg:w="3"/><text x="59.1218%" y="1263.50"></text></g><g><title>__skb_recv_udp (4 samples, 0.02%)</title><rect x="58.9916%" y="965" width="0.0240%" height="15" fill="rgb(210,145,37)" fg:x="9851" fg:w="4"/><text x="59.2416%" y="975.50"></text></g><g><title>kfree_skbmem (3 samples, 0.02%)</title><rect x="59.0155%" y="933" width="0.0180%" height="15" fill="rgb(227,112,52)" fg:x="9855" fg:w="3"/><text x="59.2655%" y="943.50"></text></g><g><title>kmem_cache_free (3 samples, 0.02%)</title><rect x="59.0155%" y="917" width="0.0180%" height="15" fill="rgb(238,155,34)" fg:x="9855" fg:w="3"/><text x="59.2655%" y="927.50"></text></g><g><title>inet_recvmsg (14 samples, 0.08%)</title><rect x="58.9616%" y="997" width="0.0838%" height="15" fill="rgb(239,226,36)" fg:x="9846" fg:w="14"/><text x="59.2116%" y="1007.50"></text></g><g><title>udp_recvmsg (14 samples, 0.08%)</title><rect x="58.9616%" y="981" width="0.0838%" height="15" fill="rgb(230,16,23)" fg:x="9846" fg:w="14"/><text x="59.2116%" y="991.50"></text></g><g><title>skb_consume_udp (5 samples, 0.03%)</title><rect x="59.0155%" y="965" width="0.0299%" height="15" fill="rgb(236,171,36)" fg:x="9855" fg:w="5"/><text x="59.2655%" y="975.50"></text></g><g><title>__consume_stateless_skb (5 samples, 0.03%)</title><rect x="59.0155%" y="949" width="0.0299%" height="15" fill="rgb(221,22,14)" fg:x="9855" fg:w="5"/><text x="59.2655%" y="959.50"></text></g><g><title>sock_recvmsg (15 samples, 0.09%)</title><rect x="58.9616%" y="1013" width="0.0898%" height="15" fill="rgb(242,43,11)" fg:x="9846" fg:w="15"/><text x="59.2116%" y="1023.50"></text></g><g><title>__sys_recvfrom (22 samples, 0.13%)</title><rect x="58.9377%" y="1029" width="0.1317%" height="15" fill="rgb(232,69,23)" fg:x="9842" fg:w="22"/><text x="59.1877%" y="1039.50"></text></g><g><title>sockfd_lookup_light (3 samples, 0.02%)</title><rect x="59.0514%" y="1013" width="0.0180%" height="15" fill="rgb(216,180,54)" fg:x="9861" fg:w="3"/><text x="59.3014%" y="1023.50"></text></g><g><title>__fdget (3 samples, 0.02%)</title><rect x="59.0514%" y="997" width="0.0180%" height="15" fill="rgb(216,5,24)" fg:x="9861" fg:w="3"/><text x="59.3014%" y="1007.50"></text></g><g><title>__fget_light (3 samples, 0.02%)</title><rect x="59.0514%" y="981" width="0.0180%" height="15" fill="rgb(225,89,9)" fg:x="9861" fg:w="3"/><text x="59.3014%" y="991.50"></text></g><g><title>__x64_sys_recvfrom (23 samples, 0.14%)</title><rect x="58.9377%" y="1045" width="0.1377%" height="15" fill="rgb(243,75,33)" fg:x="9842" fg:w="23"/><text x="59.1877%" y="1055.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.18%)</title><rect x="58.9137%" y="1077" width="0.1797%" height="15" fill="rgb(247,141,45)" fg:x="9838" fg:w="30"/><text x="59.1637%" y="1087.50"></text></g><g><title>do_syscall_64 (28 samples, 0.17%)</title><rect x="58.9257%" y="1061" width="0.1677%" height="15" fill="rgb(232,177,36)" fg:x="9840" fg:w="28"/><text x="59.1757%" y="1071.50"></text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.02%)</title><rect x="59.0754%" y="1045" width="0.0180%" height="15" fill="rgb(219,125,36)" fg:x="9865" fg:w="3"/><text x="59.3254%" y="1055.50"></text></g><g><title>tokio::net::udp::UdpSocket::recv_from::{{closure}}::{{closure}} (33 samples, 0.20%)</title><rect x="58.9077%" y="1237" width="0.1976%" height="15" fill="rgb(227,94,9)" fg:x="9837" fg:w="33"/><text x="59.1577%" y="1247.50"></text></g><g><title>mio::net::udp::UdpSocket::recv_from (33 samples, 0.20%)</title><rect x="58.9077%" y="1221" width="0.1976%" height="15" fill="rgb(240,34,52)" fg:x="9837" fg:w="33"/><text x="59.1577%" y="1231.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (33 samples, 0.20%)</title><rect x="58.9077%" y="1205" width="0.1976%" height="15" fill="rgb(216,45,12)" fg:x="9837" fg:w="33"/><text x="59.1577%" y="1215.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (33 samples, 0.20%)</title><rect x="58.9077%" y="1189" width="0.1976%" height="15" fill="rgb(246,21,19)" fg:x="9837" fg:w="33"/><text x="59.1577%" y="1199.50"></text></g><g><title>mio::net::udp::UdpSocket::recv_from::{{closure}} (33 samples, 0.20%)</title><rect x="58.9077%" y="1173" width="0.1976%" height="15" fill="rgb(213,98,42)" fg:x="9837" fg:w="33"/><text x="59.1577%" y="1183.50"></text></g><g><title>std::net::udp::UdpSocket::recv_from (33 samples, 0.20%)</title><rect x="58.9077%" y="1157" width="0.1976%" height="15" fill="rgb(250,136,47)" fg:x="9837" fg:w="33"/><text x="59.1577%" y="1167.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv_from (33 samples, 0.20%)</title><rect x="58.9077%" y="1141" width="0.1976%" height="15" fill="rgb(251,124,27)" fg:x="9837" fg:w="33"/><text x="59.1577%" y="1151.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from (33 samples, 0.20%)</title><rect x="58.9077%" y="1125" width="0.1976%" height="15" fill="rgb(229,180,14)" fg:x="9837" fg:w="33"/><text x="59.1577%" y="1135.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from_with_flags (33 samples, 0.20%)</title><rect x="58.9077%" y="1109" width="0.1976%" height="15" fill="rgb(245,216,25)" fg:x="9837" fg:w="33"/><text x="59.1577%" y="1119.50"></text></g><g><title>__libc_recvfrom (33 samples, 0.20%)</title><rect x="58.9077%" y="1093" width="0.1976%" height="15" fill="rgb(251,43,5)" fg:x="9837" fg:w="33"/><text x="59.1577%" y="1103.50"></text></g><g><title>syscall_return_via_sysret (2 samples, 0.01%)</title><rect x="59.0934%" y="1077" width="0.0120%" height="15" fill="rgb(250,128,24)" fg:x="9868" fg:w="2"/><text x="59.3434%" y="1087.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="59.1293%" y="1189" width="0.0120%" height="15" fill="rgb(217,117,27)" fg:x="9874" fg:w="2"/><text x="59.3793%" y="1199.50"></text></g><g><title>&lt;tokio::loom::std::parking_lot::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.01%)</title><rect x="59.1293%" y="1173" width="0.0120%" height="15" fill="rgb(245,147,4)" fg:x="9874" fg:w="2"/><text x="59.3793%" y="1183.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.01%)</title><rect x="59.1293%" y="1157" width="0.0120%" height="15" fill="rgb(242,201,35)" fg:x="9874" fg:w="2"/><text x="59.3793%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::scheduled_io::Readiness&gt; (3 samples, 0.02%)</title><rect x="59.1293%" y="1205" width="0.0180%" height="15" fill="rgb(218,181,1)" fg:x="9874" fg:w="3"/><text x="59.3793%" y="1215.50"></text></g><g><title>tokio::net::udp::UdpSocket::recv_from::{{closure}} (43 samples, 0.26%)</title><rect x="58.8957%" y="1269" width="0.2575%" height="15" fill="rgb(222,6,29)" fg:x="9835" fg:w="43"/><text x="59.1457%" y="1279.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (42 samples, 0.25%)</title><rect x="58.9017%" y="1253" width="0.2515%" height="15" fill="rgb(208,186,3)" fg:x="9836" fg:w="42"/><text x="59.1517%" y="1263.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (8 samples, 0.05%)</title><rect x="59.1053%" y="1237" width="0.0479%" height="15" fill="rgb(216,36,26)" fg:x="9870" fg:w="8"/><text x="59.3553%" y="1247.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (5 samples, 0.03%)</title><rect x="59.1233%" y="1221" width="0.0299%" height="15" fill="rgb(248,201,23)" fg:x="9873" fg:w="5"/><text x="59.3733%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (2 samples, 0.01%)</title><rect x="59.1772%" y="1205" width="0.0120%" height="15" fill="rgb(251,170,31)" fg:x="9882" fg:w="2"/><text x="59.4272%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.01%)</title><rect x="59.1772%" y="1189" width="0.0120%" height="15" fill="rgb(207,110,25)" fg:x="9882" fg:w="2"/><text x="59.4272%" y="1199.50"></text></g><g><title>futex_wake (5 samples, 0.03%)</title><rect x="59.2251%" y="1077" width="0.0299%" height="15" fill="rgb(250,54,15)" fg:x="9890" fg:w="5"/><text x="59.4751%" y="1087.50"></text></g><g><title>wake_up_q (3 samples, 0.02%)</title><rect x="59.2371%" y="1061" width="0.0180%" height="15" fill="rgb(227,68,33)" fg:x="9892" fg:w="3"/><text x="59.4871%" y="1071.50"></text></g><g><title>try_to_wake_up (2 samples, 0.01%)</title><rect x="59.2431%" y="1045" width="0.0120%" height="15" fill="rgb(238,34,41)" fg:x="9893" fg:w="2"/><text x="59.4931%" y="1055.50"></text></g><g><title>ttwu_queue_wakelist (2 samples, 0.01%)</title><rect x="59.2431%" y="1029" width="0.0120%" height="15" fill="rgb(220,11,15)" fg:x="9893" fg:w="2"/><text x="59.4931%" y="1039.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.04%)</title><rect x="59.2251%" y="1109" width="0.0359%" height="15" fill="rgb(246,111,35)" fg:x="9890" fg:w="6"/><text x="59.4751%" y="1119.50"></text></g><g><title>do_futex (6 samples, 0.04%)</title><rect x="59.2251%" y="1093" width="0.0359%" height="15" fill="rgb(209,88,53)" fg:x="9890" fg:w="6"/><text x="59.4751%" y="1103.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.08%)</title><rect x="59.2071%" y="1141" width="0.0778%" height="15" fill="rgb(231,185,47)" fg:x="9887" fg:w="13"/><text x="59.4571%" y="1151.50"></text></g><g><title>do_syscall_64 (10 samples, 0.06%)</title><rect x="59.2251%" y="1125" width="0.0599%" height="15" fill="rgb(233,154,1)" fg:x="9890" fg:w="10"/><text x="59.4751%" y="1135.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.02%)</title><rect x="59.2610%" y="1109" width="0.0240%" height="15" fill="rgb(225,15,46)" fg:x="9896" fg:w="4"/><text x="59.5110%" y="1119.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (17 samples, 0.10%)</title><rect x="59.1952%" y="1173" width="0.1018%" height="15" fill="rgb(211,135,41)" fg:x="9885" fg:w="17"/><text x="59.4452%" y="1183.50"></text></g><g><title>syscall (17 samples, 0.10%)</title><rect x="59.1952%" y="1157" width="0.1018%" height="15" fill="rgb(208,54,0)" fg:x="9885" fg:w="17"/><text x="59.4452%" y="1167.50"></text></g><g><title>syscall_return_via_sysret (2 samples, 0.01%)</title><rect x="59.2850%" y="1141" width="0.0120%" height="15" fill="rgb(244,136,14)" fg:x="9900" fg:w="2"/><text x="59.5350%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,veilid_tools::assembly_buffer::AssemblyBufferInner&gt;&gt; (21 samples, 0.13%)</title><rect x="59.1772%" y="1253" width="0.1258%" height="15" fill="rgb(241,56,14)" fg:x="9882" fg:w="21"/><text x="59.4272%" y="1263.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.13%)</title><rect x="59.1772%" y="1237" width="0.1258%" height="15" fill="rgb(205,80,24)" fg:x="9882" fg:w="21"/><text x="59.4272%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (21 samples, 0.13%)</title><rect x="59.1772%" y="1221" width="0.1258%" height="15" fill="rgb(220,57,4)" fg:x="9882" fg:w="21"/><text x="59.4272%" y="1231.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (19 samples, 0.11%)</title><rect x="59.1892%" y="1205" width="0.1138%" height="15" fill="rgb(226,193,50)" fg:x="9884" fg:w="19"/><text x="59.4392%" y="1215.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (19 samples, 0.11%)</title><rect x="59.1892%" y="1189" width="0.1138%" height="15" fill="rgb(231,168,22)" fg:x="9884" fg:w="19"/><text x="59.4392%" y="1199.50"></text></g><g><title>update_load_avg (2 samples, 0.01%)</title><rect x="59.4048%" y="933" width="0.0120%" height="15" fill="rgb(254,215,14)" fg:x="9920" fg:w="2"/><text x="59.6548%" y="943.50"></text></g><g><title>dequeue_task (5 samples, 0.03%)</title><rect x="59.3928%" y="981" width="0.0299%" height="15" fill="rgb(211,115,16)" fg:x="9918" fg:w="5"/><text x="59.6428%" y="991.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.03%)</title><rect x="59.3928%" y="965" width="0.0299%" height="15" fill="rgb(236,210,16)" fg:x="9918" fg:w="5"/><text x="59.6428%" y="975.50"></text></g><g><title>dequeue_entity (5 samples, 0.03%)</title><rect x="59.3928%" y="949" width="0.0299%" height="15" fill="rgb(221,94,12)" fg:x="9918" fg:w="5"/><text x="59.6428%" y="959.50"></text></g><g><title>__perf_event_task_sched_in (100 samples, 0.60%)</title><rect x="59.4407%" y="965" width="0.5988%" height="15" fill="rgb(235,218,49)" fg:x="9926" fg:w="100"/><text x="59.6907%" y="975.50"></text></g><g><title>perf_ctx_enable (100 samples, 0.60%)</title><rect x="59.4407%" y="949" width="0.5988%" height="15" fill="rgb(217,114,14)" fg:x="9926" fg:w="100"/><text x="59.6907%" y="959.50"></text></g><g><title>x86_pmu_enable (100 samples, 0.60%)</title><rect x="59.4407%" y="933" width="0.5988%" height="15" fill="rgb(216,145,22)" fg:x="9926" fg:w="100"/><text x="59.6907%" y="943.50"></text></g><g><title>intel_pmu_enable_all (100 samples, 0.60%)</title><rect x="59.4407%" y="917" width="0.5988%" height="15" fill="rgb(217,112,39)" fg:x="9926" fg:w="100"/><text x="59.6907%" y="927.50"></text></g><g><title>native_write_msr (100 samples, 0.60%)</title><rect x="59.4407%" y="901" width="0.5988%" height="15" fill="rgb(225,85,32)" fg:x="9926" fg:w="100"/><text x="59.6907%" y="911.50"></text></g><g><title>finish_task_switch.isra.0 (105 samples, 0.63%)</title><rect x="59.4227%" y="981" width="0.6288%" height="15" fill="rgb(245,209,47)" fg:x="9923" fg:w="105"/><text x="59.6727%" y="991.50"></text></g><g><title>pick_next_task_fair (3 samples, 0.02%)</title><rect x="60.0515%" y="965" width="0.0180%" height="15" fill="rgb(218,220,15)" fg:x="10028" fg:w="3"/><text x="60.3015%" y="975.50"></text></g><g><title>newidle_balance (2 samples, 0.01%)</title><rect x="60.0575%" y="949" width="0.0120%" height="15" fill="rgb(222,202,31)" fg:x="10029" fg:w="2"/><text x="60.3075%" y="959.50"></text></g><g><title>pick_next_task (5 samples, 0.03%)</title><rect x="60.0515%" y="981" width="0.0299%" height="15" fill="rgb(243,203,4)" fg:x="10028" fg:w="5"/><text x="60.3015%" y="991.50"></text></g><g><title>put_prev_task_fair (2 samples, 0.01%)</title><rect x="60.0695%" y="965" width="0.0120%" height="15" fill="rgb(237,92,17)" fg:x="10031" fg:w="2"/><text x="60.3195%" y="975.50"></text></g><g><title>check_cfs_rq_runtime (2 samples, 0.01%)</title><rect x="60.0695%" y="949" width="0.0120%" height="15" fill="rgb(231,119,7)" fg:x="10031" fg:w="2"/><text x="60.3195%" y="959.50"></text></g><g><title>psi_group_change (6 samples, 0.04%)</title><rect x="60.0874%" y="965" width="0.0359%" height="15" fill="rgb(237,82,41)" fg:x="10034" fg:w="6"/><text x="60.3374%" y="975.50"></text></g><g><title>__x64_sys_futex (127 samples, 0.76%)</title><rect x="59.3688%" y="1077" width="0.7605%" height="15" fill="rgb(226,81,48)" fg:x="9914" fg:w="127"/><text x="59.6188%" y="1087.50"></text></g><g><title>do_futex (127 samples, 0.76%)</title><rect x="59.3688%" y="1061" width="0.7605%" height="15" fill="rgb(234,70,51)" fg:x="9914" fg:w="127"/><text x="59.6188%" y="1071.50"></text></g><g><title>futex_wait (125 samples, 0.75%)</title><rect x="59.3808%" y="1045" width="0.7485%" height="15" fill="rgb(251,86,4)" fg:x="9916" fg:w="125"/><text x="59.6308%" y="1055.50"></text></g><g><title>futex_wait_queue (124 samples, 0.74%)</title><rect x="59.3868%" y="1029" width="0.7426%" height="15" fill="rgb(244,144,28)" fg:x="9917" fg:w="124"/><text x="59.6368%" y="1039.50"></text></g><g><title>schedule (124 samples, 0.74%)</title><rect x="59.3868%" y="1013" width="0.7426%" height="15" fill="rgb(232,161,39)" fg:x="9917" fg:w="124"/><text x="59.6368%" y="1023.50"></text></g><g><title>__schedule (124 samples, 0.74%)</title><rect x="59.3868%" y="997" width="0.7426%" height="15" fill="rgb(247,34,51)" fg:x="9917" fg:w="124"/><text x="59.6368%" y="1007.50"></text></g><g><title>psi_task_switch (8 samples, 0.05%)</title><rect x="60.0814%" y="981" width="0.0479%" height="15" fill="rgb(225,132,2)" fg:x="10033" fg:w="8"/><text x="60.3314%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (132 samples, 0.79%)</title><rect x="59.3628%" y="1109" width="0.7905%" height="15" fill="rgb(209,159,44)" fg:x="9913" fg:w="132"/><text x="59.6128%" y="1119.50"></text></g><g><title>do_syscall_64 (131 samples, 0.78%)</title><rect x="59.3688%" y="1093" width="0.7845%" height="15" fill="rgb(251,214,1)" fg:x="9914" fg:w="131"/><text x="59.6188%" y="1103.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.02%)</title><rect x="60.1293%" y="1077" width="0.0240%" height="15" fill="rgb(247,84,47)" fg:x="10041" fg:w="4"/><text x="60.3793%" y="1087.50"></text></g><g><title>exit_to_user_mode_prepare (3 samples, 0.02%)</title><rect x="60.1353%" y="1061" width="0.0180%" height="15" fill="rgb(240,111,43)" fg:x="10042" fg:w="3"/><text x="60.3853%" y="1071.50"></text></g><g><title>exit_to_user_mode_loop (3 samples, 0.02%)</title><rect x="60.1353%" y="1045" width="0.0180%" height="15" fill="rgb(215,214,35)" fg:x="10042" fg:w="3"/><text x="60.3853%" y="1055.50"></text></g><g><title>__rseq_handle_notify_resume (3 samples, 0.02%)</title><rect x="60.1353%" y="1029" width="0.0180%" height="15" fill="rgb(248,207,23)" fg:x="10042" fg:w="3"/><text x="60.3853%" y="1039.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (140 samples, 0.84%)</title><rect x="59.3269%" y="1157" width="0.8384%" height="15" fill="rgb(214,186,4)" fg:x="9907" fg:w="140"/><text x="59.5769%" y="1167.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (139 samples, 0.83%)</title><rect x="59.3329%" y="1141" width="0.8324%" height="15" fill="rgb(220,133,22)" fg:x="9908" fg:w="139"/><text x="59.5829%" y="1151.50"></text></g><g><title>syscall (138 samples, 0.83%)</title><rect x="59.3389%" y="1125" width="0.8264%" height="15" fill="rgb(239,134,19)" fg:x="9909" fg:w="138"/><text x="59.5889%" y="1135.50"></text></g><g><title>syscall_return_via_sysret (2 samples, 0.01%)</title><rect x="60.1533%" y="1109" width="0.0120%" height="15" fill="rgb(250,140,9)" fg:x="10045" fg:w="2"/><text x="60.4033%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (2 samples, 0.01%)</title><rect x="60.1832%" y="1157" width="0.0120%" height="15" fill="rgb(225,59,14)" fg:x="10050" fg:w="2"/><text x="60.4332%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::park (148 samples, 0.89%)</title><rect x="59.3149%" y="1205" width="0.8863%" height="15" fill="rgb(214,152,51)" fg:x="9905" fg:w="148"/><text x="59.5649%" y="1215.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (148 samples, 0.89%)</title><rect x="59.3149%" y="1189" width="0.8863%" height="15" fill="rgb(251,227,43)" fg:x="9905" fg:w="148"/><text x="59.5649%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (147 samples, 0.88%)</title><rect x="59.3209%" y="1173" width="0.8803%" height="15" fill="rgb(241,96,17)" fg:x="9906" fg:w="147"/><text x="59.5709%" y="1183.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="60.2072%" y="1157" width="0.0299%" height="15" fill="rgb(234,198,43)" fg:x="10054" fg:w="5"/><text x="60.4572%" y="1167.50"></text></g><g><title>do_syscall_64 (4 samples, 0.02%)</title><rect x="60.2132%" y="1141" width="0.0240%" height="15" fill="rgb(220,108,29)" fg:x="10055" fg:w="4"/><text x="60.4632%" y="1151.50"></text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.02%)</title><rect x="60.2192%" y="1125" width="0.0180%" height="15" fill="rgb(226,163,33)" fg:x="10056" fg:w="3"/><text x="60.4692%" y="1135.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (158 samples, 0.95%)</title><rect x="59.3089%" y="1253" width="0.9462%" height="15" fill="rgb(205,194,45)" fg:x="9904" fg:w="158"/><text x="59.5589%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (158 samples, 0.95%)</title><rect x="59.3089%" y="1237" width="0.9462%" height="15" fill="rgb(206,143,44)" fg:x="9904" fg:w="158"/><text x="59.5589%" y="1247.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (158 samples, 0.95%)</title><rect x="59.3089%" y="1221" width="0.9462%" height="15" fill="rgb(236,136,36)" fg:x="9904" fg:w="158"/><text x="59.5589%" y="1231.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (9 samples, 0.05%)</title><rect x="60.2012%" y="1205" width="0.0539%" height="15" fill="rgb(249,172,42)" fg:x="10053" fg:w="9"/><text x="60.4512%" y="1215.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (9 samples, 0.05%)</title><rect x="60.2012%" y="1189" width="0.0539%" height="15" fill="rgb(216,139,23)" fg:x="10053" fg:w="9"/><text x="60.4512%" y="1199.50"></text></g><g><title>__GI___sched_yield (9 samples, 0.05%)</title><rect x="60.2012%" y="1173" width="0.0539%" height="15" fill="rgb(207,166,20)" fg:x="10053" fg:w="9"/><text x="60.4512%" y="1183.50"></text></g><g><title>syscall_return_via_sysret (3 samples, 0.02%)</title><rect x="60.2371%" y="1157" width="0.0180%" height="15" fill="rgb(210,209,22)" fg:x="10059" fg:w="3"/><text x="60.4871%" y="1167.50"></text></g><g><title>hashbrown::map::make_insert_hash (4 samples, 0.02%)</title><rect x="60.2731%" y="1221" width="0.0240%" height="15" fill="rgb(232,118,20)" fg:x="10065" fg:w="4"/><text x="60.5231%" y="1231.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="60.2731%" y="1205" width="0.0240%" height="15" fill="rgb(238,113,42)" fg:x="10065" fg:w="4"/><text x="60.5231%" y="1215.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.02%)</title><rect x="60.2791%" y="1189" width="0.0180%" height="15" fill="rgb(231,42,5)" fg:x="10066" fg:w="3"/><text x="60.5291%" y="1199.50"></text></g><g><title>&lt;veilid_tools::assembly_buffer::PeerKey as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="60.2791%" y="1173" width="0.0180%" height="15" fill="rgb(243,166,24)" fg:x="10066" fg:w="3"/><text x="60.5291%" y="1183.50"></text></g><g><title>&lt;core::net::socket_addr::SocketAddr as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="60.2791%" y="1157" width="0.0180%" height="15" fill="rgb(237,226,12)" fg:x="10066" fg:w="3"/><text x="60.5291%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.01%)</title><rect x="60.2850%" y="1141" width="0.0120%" height="15" fill="rgb(229,133,24)" fg:x="10067" fg:w="2"/><text x="60.5350%" y="1151.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.01%)</title><rect x="60.2850%" y="1125" width="0.0120%" height="15" fill="rgb(238,33,43)" fg:x="10067" fg:w="2"/><text x="60.5350%" y="1135.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.01%)</title><rect x="60.2850%" y="1109" width="0.0120%" height="15" fill="rgb(227,59,38)" fg:x="10067" fg:w="2"/><text x="60.5350%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="60.2850%" y="1093" width="0.0120%" height="15" fill="rgb(230,97,0)" fg:x="10067" fg:w="2"/><text x="60.5350%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="60.2850%" y="1077" width="0.0120%" height="15" fill="rgb(250,173,50)" fg:x="10067" fg:w="2"/><text x="60.5350%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="60.2850%" y="1061" width="0.0120%" height="15" fill="rgb(240,15,50)" fg:x="10067" fg:w="2"/><text x="60.5350%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (12 samples, 0.07%)</title><rect x="60.2551%" y="1253" width="0.0719%" height="15" fill="rgb(221,93,22)" fg:x="10062" fg:w="12"/><text x="60.5051%" y="1263.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (12 samples, 0.07%)</title><rect x="60.2551%" y="1237" width="0.0719%" height="15" fill="rgb(245,180,53)" fg:x="10062" fg:w="12"/><text x="60.5051%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.03%)</title><rect x="60.2970%" y="1221" width="0.0299%" height="15" fill="rgb(231,88,51)" fg:x="10069" fg:w="5"/><text x="60.5470%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.02%)</title><rect x="60.3030%" y="1205" width="0.0240%" height="15" fill="rgb(240,58,21)" fg:x="10070" fg:w="4"/><text x="60.5530%" y="1215.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::get (2 samples, 0.01%)</title><rect x="60.3449%" y="1221" width="0.0120%" height="15" fill="rgb(237,21,10)" fg:x="10077" fg:w="2"/><text x="60.5949%" y="1231.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::index::Index&lt;usize&gt;&gt;::index (3 samples, 0.02%)</title><rect x="60.3449%" y="1237" width="0.0180%" height="15" fill="rgb(218,43,11)" fg:x="10077" fg:w="3"/><text x="60.5949%" y="1247.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="60.3629%" y="1237" width="0.0120%" height="15" fill="rgb(218,221,29)" fg:x="10080" fg:w="2"/><text x="60.6129%" y="1247.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="60.3629%" y="1221" width="0.0120%" height="15" fill="rgb(214,118,42)" fg:x="10080" fg:w="2"/><text x="60.6129%" y="1231.50"></text></g><g><title>&lt;range_set_blaze::RangeSetBlaze&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;core::ops::range::RangeInclusive&lt;T&gt;&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="60.3868%" y="1221" width="0.0180%" height="15" fill="rgb(251,200,26)" fg:x="10084" fg:w="3"/><text x="60.6368%" y="1231.50"></text></g><g><title>&lt;range_set_blaze::RangeSetBlaze&lt;T&gt; as core::ops::bit::BitOrAssign&gt;::bitor_assign (2 samples, 0.01%)</title><rect x="60.4048%" y="1221" width="0.0120%" height="15" fill="rgb(237,101,39)" fg:x="10087" fg:w="2"/><text x="60.6548%" y="1231.50"></text></g><g><title>veilid_tools::assembly_buffer::PeerMessages::merge_in_data (9 samples, 0.05%)</title><rect x="60.3749%" y="1237" width="0.0539%" height="15" fill="rgb(251,117,11)" fg:x="10082" fg:w="9"/><text x="60.6249%" y="1247.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.01%)</title><rect x="60.4168%" y="1221" width="0.0120%" height="15" fill="rgb(216,223,23)" fg:x="10089" fg:w="2"/><text x="60.6668%" y="1231.50"></text></g><g><title>veilid_core::network_manager::native::network_udp::&lt;impl veilid_core::network_manager::native::Network&gt;::create_udp_listener_tasks::{{closure}}::{{closure}}::{{closure}} (268 samples, 1.60%)</title><rect x="58.8418%" y="1317" width="1.6049%" height="15" fill="rgb(251,54,12)" fg:x="9826" fg:w="268"/><text x="59.0918%" y="1327.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (268 samples, 1.60%)</title><rect x="58.8418%" y="1301" width="1.6049%" height="15" fill="rgb(254,176,54)" fg:x="9826" fg:w="268"/><text x="59.0918%" y="1311.50"></text></g><g><title>veilid_core::network_manager::native::protocol::udp::RawUdpProtocolHandler::recv_message::{{closure}} (268 samples, 1.60%)</title><rect x="58.8418%" y="1285" width="1.6049%" height="15" fill="rgb(210,32,8)" fg:x="9826" fg:w="268"/><text x="59.0918%" y="1295.50"></text></g><g><title>veilid_tools::assembly_buffer::AssemblyBuffer::insert_frame (216 samples, 1.29%)</title><rect x="59.1532%" y="1269" width="1.2935%" height="15" fill="rgb(235,52,38)" fg:x="9878" fg:w="216"/><text x="59.4032%" y="1279.50"></text></g><g><title>veilid_tools::assembly_buffer::PeerMessages::insert_fragment (20 samples, 0.12%)</title><rect x="60.3270%" y="1253" width="0.1198%" height="15" fill="rgb(231,4,44)" fg:x="10074" fg:w="20"/><text x="60.5770%" y="1263.50"></text></g><g><title>veilid_tools::timestamp::get_timestamp (2 samples, 0.01%)</title><rect x="60.4348%" y="1237" width="0.0120%" height="15" fill="rgb(249,2,32)" fg:x="10092" fg:w="2"/><text x="60.6848%" y="1247.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="60.4527%" y="1237" width="0.0120%" height="15" fill="rgb(224,65,26)" fg:x="10095" fg:w="2"/><text x="60.7027%" y="1247.50"></text></g><g><title>&lt;stop_token::deadline::Deadline as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="60.4527%" y="1221" width="0.0120%" height="15" fill="rgb(250,73,40)" fg:x="10095" fg:w="2"/><text x="60.7027%" y="1231.50"></text></g><g><title>&lt;stop_token::stop_source::StopToken as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="60.4527%" y="1205" width="0.0120%" height="15" fill="rgb(253,177,16)" fg:x="10095" fg:w="2"/><text x="60.7027%" y="1215.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.01%)</title><rect x="60.4527%" y="1189" width="0.0120%" height="15" fill="rgb(217,32,34)" fg:x="10095" fg:w="2"/><text x="60.7027%" y="1199.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="60.4527%" y="1173" width="0.0120%" height="15" fill="rgb(212,7,10)" fg:x="10095" fg:w="2"/><text x="60.7027%" y="1183.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.03%)</title><rect x="60.4647%" y="949" width="0.0299%" height="15" fill="rgb(245,89,8)" fg:x="10097" fg:w="5"/><text x="60.7147%" y="959.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.03%)</title><rect x="60.4647%" y="933" width="0.0299%" height="15" fill="rgb(237,16,53)" fg:x="10097" fg:w="5"/><text x="60.7147%" y="943.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.03%)</title><rect x="60.4647%" y="917" width="0.0299%" height="15" fill="rgb(250,204,30)" fg:x="10097" fg:w="5"/><text x="60.7147%" y="927.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.03%)</title><rect x="60.4647%" y="901" width="0.0299%" height="15" fill="rgb(208,77,27)" fg:x="10097" fg:w="5"/><text x="60.7147%" y="911.50"></text></g><g><title>native_write_msr (5 samples, 0.03%)</title><rect x="60.4647%" y="885" width="0.0299%" height="15" fill="rgb(250,204,28)" fg:x="10097" fg:w="5"/><text x="60.7147%" y="895.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.04%)</title><rect x="60.4647%" y="1093" width="0.0359%" height="15" fill="rgb(244,63,21)" fg:x="10097" fg:w="6"/><text x="60.7147%" y="1103.50"></text></g><g><title>exc_page_fault (6 samples, 0.04%)</title><rect x="60.4647%" y="1077" width="0.0359%" height="15" fill="rgb(236,85,44)" fg:x="10097" fg:w="6"/><text x="60.7147%" y="1087.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.04%)</title><rect x="60.4647%" y="1061" width="0.0359%" height="15" fill="rgb(215,98,4)" fg:x="10097" fg:w="6"/><text x="60.7147%" y="1071.50"></text></g><g><title>down_read (6 samples, 0.04%)</title><rect x="60.4647%" y="1045" width="0.0359%" height="15" fill="rgb(235,38,11)" fg:x="10097" fg:w="6"/><text x="60.7147%" y="1055.50"></text></g><g><title>rwsem_down_read_slowpath (6 samples, 0.04%)</title><rect x="60.4647%" y="1029" width="0.0359%" height="15" fill="rgb(254,186,25)" fg:x="10097" fg:w="6"/><text x="60.7147%" y="1039.50"></text></g><g><title>schedule_preempt_disabled (6 samples, 0.04%)</title><rect x="60.4647%" y="1013" width="0.0359%" height="15" fill="rgb(225,55,31)" fg:x="10097" fg:w="6"/><text x="60.7147%" y="1023.50"></text></g><g><title>schedule (6 samples, 0.04%)</title><rect x="60.4647%" y="997" width="0.0359%" height="15" fill="rgb(211,15,21)" fg:x="10097" fg:w="6"/><text x="60.7147%" y="1007.50"></text></g><g><title>__schedule (6 samples, 0.04%)</title><rect x="60.4647%" y="981" width="0.0359%" height="15" fill="rgb(215,187,41)" fg:x="10097" fg:w="6"/><text x="60.7147%" y="991.50"></text></g><g><title>finish_task_switch.isra.0 (6 samples, 0.04%)</title><rect x="60.4647%" y="965" width="0.0359%" height="15" fill="rgb(248,69,32)" fg:x="10097" fg:w="6"/><text x="60.7147%" y="975.50"></text></g><g><title>__libc_calloc (13 samples, 0.08%)</title><rect x="60.4647%" y="1125" width="0.0778%" height="15" fill="rgb(252,102,52)" fg:x="10097" fg:w="13"/><text x="60.7147%" y="1135.50"></text></g><g><title>_int_malloc (13 samples, 0.08%)</title><rect x="60.4647%" y="1109" width="0.0778%" height="15" fill="rgb(253,140,32)" fg:x="10097" fg:w="13"/><text x="60.7147%" y="1119.50"></text></g><g><title>sysmalloc (7 samples, 0.04%)</title><rect x="60.5006%" y="1093" width="0.0419%" height="15" fill="rgb(216,56,42)" fg:x="10103" fg:w="7"/><text x="60.7506%" y="1103.50"></text></g><g><title>grow_heap (7 samples, 0.04%)</title><rect x="60.5006%" y="1077" width="0.0419%" height="15" fill="rgb(216,184,14)" fg:x="10103" fg:w="7"/><text x="60.7506%" y="1087.50"></text></g><g><title>__GI___mprotect (7 samples, 0.04%)</title><rect x="60.5006%" y="1061" width="0.0419%" height="15" fill="rgb(237,187,27)" fg:x="10103" fg:w="7"/><text x="60.7506%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="60.5006%" y="1045" width="0.0419%" height="15" fill="rgb(219,65,3)" fg:x="10103" fg:w="7"/><text x="60.7506%" y="1055.50"></text></g><g><title>do_syscall_64 (7 samples, 0.04%)</title><rect x="60.5006%" y="1029" width="0.0419%" height="15" fill="rgb(245,83,25)" fg:x="10103" fg:w="7"/><text x="60.7506%" y="1039.50"></text></g><g><title>__x64_sys_mprotect (7 samples, 0.04%)</title><rect x="60.5006%" y="1013" width="0.0419%" height="15" fill="rgb(214,205,45)" fg:x="10103" fg:w="7"/><text x="60.7506%" y="1023.50"></text></g><g><title>do_mprotect_pkey (7 samples, 0.04%)</title><rect x="60.5006%" y="997" width="0.0419%" height="15" fill="rgb(241,20,18)" fg:x="10103" fg:w="7"/><text x="60.7506%" y="1007.50"></text></g><g><title>down_write_killable (7 samples, 0.04%)</title><rect x="60.5006%" y="981" width="0.0419%" height="15" fill="rgb(232,163,23)" fg:x="10103" fg:w="7"/><text x="60.7506%" y="991.50"></text></g><g><title>rwsem_down_write_slowpath (7 samples, 0.04%)</title><rect x="60.5006%" y="965" width="0.0419%" height="15" fill="rgb(214,5,46)" fg:x="10103" fg:w="7"/><text x="60.7506%" y="975.50"></text></g><g><title>schedule (6 samples, 0.04%)</title><rect x="60.5066%" y="949" width="0.0359%" height="15" fill="rgb(229,78,17)" fg:x="10104" fg:w="6"/><text x="60.7566%" y="959.50"></text></g><g><title>__schedule (6 samples, 0.04%)</title><rect x="60.5066%" y="933" width="0.0359%" height="15" fill="rgb(248,89,10)" fg:x="10104" fg:w="6"/><text x="60.7566%" y="943.50"></text></g><g><title>finish_task_switch.isra.0 (6 samples, 0.04%)</title><rect x="60.5066%" y="917" width="0.0359%" height="15" fill="rgb(248,54,15)" fg:x="10104" fg:w="6"/><text x="60.7566%" y="927.50"></text></g><g><title>__perf_event_task_sched_in (6 samples, 0.04%)</title><rect x="60.5066%" y="901" width="0.0359%" height="15" fill="rgb(223,116,6)" fg:x="10104" fg:w="6"/><text x="60.7566%" y="911.50"></text></g><g><title>perf_ctx_enable (6 samples, 0.04%)</title><rect x="60.5066%" y="885" width="0.0359%" height="15" fill="rgb(205,125,38)" fg:x="10104" fg:w="6"/><text x="60.7566%" y="895.50"></text></g><g><title>x86_pmu_enable (6 samples, 0.04%)</title><rect x="60.5066%" y="869" width="0.0359%" height="15" fill="rgb(251,78,38)" fg:x="10104" fg:w="6"/><text x="60.7566%" y="879.50"></text></g><g><title>intel_pmu_enable_all (6 samples, 0.04%)</title><rect x="60.5066%" y="853" width="0.0359%" height="15" fill="rgb(253,78,28)" fg:x="10104" fg:w="6"/><text x="60.7566%" y="863.50"></text></g><g><title>native_write_msr (6 samples, 0.04%)</title><rect x="60.5066%" y="837" width="0.0359%" height="15" fill="rgb(209,120,3)" fg:x="10104" fg:w="6"/><text x="60.7566%" y="847.50"></text></g><g><title>alloc::vec::from_elem (14 samples, 0.08%)</title><rect x="60.4647%" y="1237" width="0.0838%" height="15" fill="rgb(238,229,9)" fg:x="10097" fg:w="14"/><text x="60.7147%" y="1247.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (14 samples, 0.08%)</title><rect x="60.4647%" y="1221" width="0.0838%" height="15" fill="rgb(253,159,18)" fg:x="10097" fg:w="14"/><text x="60.7147%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (14 samples, 0.08%)</title><rect x="60.4647%" y="1205" width="0.0838%" height="15" fill="rgb(244,42,34)" fg:x="10097" fg:w="14"/><text x="60.7147%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.08%)</title><rect x="60.4647%" y="1189" width="0.0838%" height="15" fill="rgb(224,8,7)" fg:x="10097" fg:w="14"/><text x="60.7147%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (14 samples, 0.08%)</title><rect x="60.4647%" y="1173" width="0.0838%" height="15" fill="rgb(210,201,45)" fg:x="10097" fg:w="14"/><text x="60.7147%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.08%)</title><rect x="60.4647%" y="1157" width="0.0838%" height="15" fill="rgb(252,185,21)" fg:x="10097" fg:w="14"/><text x="60.7147%" y="1167.50"></text></g><g><title>alloc::alloc::alloc_zeroed (14 samples, 0.08%)</title><rect x="60.4647%" y="1141" width="0.0838%" height="15" fill="rgb(223,131,1)" fg:x="10097" fg:w="14"/><text x="60.7147%" y="1151.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (18 samples, 0.11%)</title><rect x="60.4467%" y="1301" width="0.1078%" height="15" fill="rgb(245,141,16)" fg:x="10094" fg:w="18"/><text x="60.6967%" y="1311.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (18 samples, 0.11%)</title><rect x="60.4467%" y="1285" width="0.1078%" height="15" fill="rgb(229,55,45)" fg:x="10094" fg:w="18"/><text x="60.6967%" y="1295.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (18 samples, 0.11%)</title><rect x="60.4467%" y="1269" width="0.1078%" height="15" fill="rgb(208,92,15)" fg:x="10094" fg:w="18"/><text x="60.6967%" y="1279.50"></text></g><g><title>veilid_core::network_manager::native::network_udp::&lt;impl veilid_core::network_manager::native::Network&gt;::create_udp_listener_tasks::{{closure}}::{{closure}}::{{closure}} (18 samples, 0.11%)</title><rect x="60.4467%" y="1253" width="0.1078%" height="15" fill="rgb(234,185,47)" fg:x="10094" fg:w="18"/><text x="60.6967%" y="1263.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.03%)</title><rect x="60.5545%" y="1109" width="0.0299%" height="15" fill="rgb(253,104,50)" fg:x="10112" fg:w="5"/><text x="60.8045%" y="1119.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.03%)</title><rect x="60.5545%" y="1093" width="0.0299%" height="15" fill="rgb(205,70,7)" fg:x="10112" fg:w="5"/><text x="60.8045%" y="1103.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.03%)</title><rect x="60.5545%" y="1077" width="0.0299%" height="15" fill="rgb(240,178,43)" fg:x="10112" fg:w="5"/><text x="60.8045%" y="1087.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.03%)</title><rect x="60.5545%" y="1061" width="0.0299%" height="15" fill="rgb(214,112,2)" fg:x="10112" fg:w="5"/><text x="60.8045%" y="1071.50"></text></g><g><title>native_write_msr (5 samples, 0.03%)</title><rect x="60.5545%" y="1045" width="0.0299%" height="15" fill="rgb(206,46,17)" fg:x="10112" fg:w="5"/><text x="60.8045%" y="1055.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::new (6 samples, 0.04%)</title><rect x="60.5545%" y="1285" width="0.0359%" height="15" fill="rgb(225,220,16)" fg:x="10112" fg:w="6"/><text x="60.8045%" y="1295.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.04%)</title><rect x="60.5545%" y="1269" width="0.0359%" height="15" fill="rgb(238,65,40)" fg:x="10112" fg:w="6"/><text x="60.8045%" y="1279.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.04%)</title><rect x="60.5545%" y="1253" width="0.0359%" height="15" fill="rgb(230,151,21)" fg:x="10112" fg:w="6"/><text x="60.8045%" y="1263.50"></text></g><g><title>exc_page_fault (6 samples, 0.04%)</title><rect x="60.5545%" y="1237" width="0.0359%" height="15" fill="rgb(218,58,49)" fg:x="10112" fg:w="6"/><text x="60.8045%" y="1247.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.04%)</title><rect x="60.5545%" y="1221" width="0.0359%" height="15" fill="rgb(219,179,14)" fg:x="10112" fg:w="6"/><text x="60.8045%" y="1231.50"></text></g><g><title>down_read (6 samples, 0.04%)</title><rect x="60.5545%" y="1205" width="0.0359%" height="15" fill="rgb(223,72,1)" fg:x="10112" fg:w="6"/><text x="60.8045%" y="1215.50"></text></g><g><title>rwsem_down_read_slowpath (6 samples, 0.04%)</title><rect x="60.5545%" y="1189" width="0.0359%" height="15" fill="rgb(238,126,10)" fg:x="10112" fg:w="6"/><text x="60.8045%" y="1199.50"></text></g><g><title>schedule_preempt_disabled (6 samples, 0.04%)</title><rect x="60.5545%" y="1173" width="0.0359%" height="15" fill="rgb(224,206,38)" fg:x="10112" fg:w="6"/><text x="60.8045%" y="1183.50"></text></g><g><title>schedule (6 samples, 0.04%)</title><rect x="60.5545%" y="1157" width="0.0359%" height="15" fill="rgb(212,201,54)" fg:x="10112" fg:w="6"/><text x="60.8045%" y="1167.50"></text></g><g><title>__schedule (6 samples, 0.04%)</title><rect x="60.5545%" y="1141" width="0.0359%" height="15" fill="rgb(218,154,48)" fg:x="10112" fg:w="6"/><text x="60.8045%" y="1151.50"></text></g><g><title>finish_task_switch.isra.0 (6 samples, 0.04%)</title><rect x="60.5545%" y="1125" width="0.0359%" height="15" fill="rgb(232,93,24)" fg:x="10112" fg:w="6"/><text x="60.8045%" y="1135.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::new (7 samples, 0.04%)</title><rect x="60.5545%" y="1301" width="0.0419%" height="15" fill="rgb(245,30,21)" fg:x="10112" fg:w="7"/><text x="60.8045%" y="1311.50"></text></g><g><title>down_read (5 samples, 0.03%)</title><rect x="60.5964%" y="1109" width="0.0299%" height="15" fill="rgb(242,148,29)" fg:x="10119" fg:w="5"/><text x="60.8464%" y="1119.50"></text></g><g><title>rwsem_down_read_slowpath (5 samples, 0.03%)</title><rect x="60.5964%" y="1093" width="0.0299%" height="15" fill="rgb(244,153,54)" fg:x="10119" fg:w="5"/><text x="60.8464%" y="1103.50"></text></g><g><title>schedule_preempt_disabled (5 samples, 0.03%)</title><rect x="60.5964%" y="1077" width="0.0299%" height="15" fill="rgb(252,87,22)" fg:x="10119" fg:w="5"/><text x="60.8464%" y="1087.50"></text></g><g><title>schedule (5 samples, 0.03%)</title><rect x="60.5964%" y="1061" width="0.0299%" height="15" fill="rgb(210,51,29)" fg:x="10119" fg:w="5"/><text x="60.8464%" y="1071.50"></text></g><g><title>__schedule (5 samples, 0.03%)</title><rect x="60.5964%" y="1045" width="0.0299%" height="15" fill="rgb(242,136,47)" fg:x="10119" fg:w="5"/><text x="60.8464%" y="1055.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.03%)</title><rect x="60.5964%" y="1029" width="0.0299%" height="15" fill="rgb(238,68,4)" fg:x="10119" fg:w="5"/><text x="60.8464%" y="1039.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.03%)</title><rect x="60.5964%" y="1013" width="0.0299%" height="15" fill="rgb(242,161,30)" fg:x="10119" fg:w="5"/><text x="60.8464%" y="1023.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.03%)</title><rect x="60.5964%" y="997" width="0.0299%" height="15" fill="rgb(218,58,44)" fg:x="10119" fg:w="5"/><text x="60.8464%" y="1007.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.03%)</title><rect x="60.5964%" y="981" width="0.0299%" height="15" fill="rgb(252,125,32)" fg:x="10119" fg:w="5"/><text x="60.8464%" y="991.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.03%)</title><rect x="60.5964%" y="965" width="0.0299%" height="15" fill="rgb(219,178,0)" fg:x="10119" fg:w="5"/><text x="60.8464%" y="975.50"></text></g><g><title>native_write_msr (5 samples, 0.03%)</title><rect x="60.5964%" y="949" width="0.0299%" height="15" fill="rgb(213,152,7)" fg:x="10119" fg:w="5"/><text x="60.8464%" y="959.50"></text></g><g><title>veilid_core::network_manager::native::network_udp::&lt;impl veilid_core::network_manager::native::Network&gt;::create_udp_listener_tasks::{{closure}}::{{closure}} (31 samples, 0.19%)</title><rect x="60.4467%" y="1317" width="0.1856%" height="15" fill="rgb(249,109,34)" fg:x="10094" fg:w="31"/><text x="60.6967%" y="1327.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (6 samples, 0.04%)</title><rect x="60.5964%" y="1301" width="0.0359%" height="15" fill="rgb(232,96,21)" fg:x="10119" fg:w="6"/><text x="60.8464%" y="1311.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (6 samples, 0.04%)</title><rect x="60.5964%" y="1285" width="0.0359%" height="15" fill="rgb(228,27,39)" fg:x="10119" fg:w="6"/><text x="60.8464%" y="1295.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.04%)</title><rect x="60.5964%" y="1269" width="0.0359%" height="15" fill="rgb(211,182,52)" fg:x="10119" fg:w="6"/><text x="60.8464%" y="1279.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.04%)</title><rect x="60.5964%" y="1253" width="0.0359%" height="15" fill="rgb(234,178,38)" fg:x="10119" fg:w="6"/><text x="60.8464%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.04%)</title><rect x="60.5964%" y="1237" width="0.0359%" height="15" fill="rgb(221,111,3)" fg:x="10119" fg:w="6"/><text x="60.8464%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.04%)</title><rect x="60.5964%" y="1221" width="0.0359%" height="15" fill="rgb(228,175,21)" fg:x="10119" fg:w="6"/><text x="60.8464%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.04%)</title><rect x="60.5964%" y="1205" width="0.0359%" height="15" fill="rgb(228,174,43)" fg:x="10119" fg:w="6"/><text x="60.8464%" y="1215.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.04%)</title><rect x="60.5964%" y="1189" width="0.0359%" height="15" fill="rgb(211,191,0)" fg:x="10119" fg:w="6"/><text x="60.8464%" y="1199.50"></text></g><g><title>_int_malloc (6 samples, 0.04%)</title><rect x="60.5964%" y="1173" width="0.0359%" height="15" fill="rgb(253,117,3)" fg:x="10119" fg:w="6"/><text x="60.8464%" y="1183.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.04%)</title><rect x="60.5964%" y="1157" width="0.0359%" height="15" fill="rgb(241,127,19)" fg:x="10119" fg:w="6"/><text x="60.8464%" y="1167.50"></text></g><g><title>exc_page_fault (6 samples, 0.04%)</title><rect x="60.5964%" y="1141" width="0.0359%" height="15" fill="rgb(218,103,12)" fg:x="10119" fg:w="6"/><text x="60.8464%" y="1151.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.04%)</title><rect x="60.5964%" y="1125" width="0.0359%" height="15" fill="rgb(236,214,43)" fg:x="10119" fg:w="6"/><text x="60.8464%" y="1135.50"></text></g><g><title>&lt;tokio::runtime::io::scheduled_io::Readiness as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="60.6324%" y="1237" width="0.0120%" height="15" fill="rgb(244,144,19)" fg:x="10125" fg:w="2"/><text x="60.8824%" y="1247.50"></text></g><g><title>tokio::net::udp::UdpSocket::recv_from::{{closure}} (3 samples, 0.02%)</title><rect x="60.6324%" y="1301" width="0.0180%" height="15" fill="rgb(246,188,10)" fg:x="10125" fg:w="3"/><text x="60.8824%" y="1311.50"></text></g><g><title>tokio::runtime::io::registration::Registration::async_io::{{closure}} (3 samples, 0.02%)</title><rect x="60.6324%" y="1285" width="0.0180%" height="15" fill="rgb(212,193,33)" fg:x="10125" fg:w="3"/><text x="60.8824%" y="1295.50"></text></g><g><title>tokio::runtime::io::registration::Registration::readiness::{{closure}} (3 samples, 0.02%)</title><rect x="60.6324%" y="1269" width="0.0180%" height="15" fill="rgb(241,51,29)" fg:x="10125" fg:w="3"/><text x="60.8824%" y="1279.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::readiness::{{closure}} (3 samples, 0.02%)</title><rect x="60.6324%" y="1253" width="0.0180%" height="15" fill="rgb(211,58,19)" fg:x="10125" fg:w="3"/><text x="60.8824%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.03%)</title><rect x="60.6503%" y="1109" width="0.0299%" height="15" fill="rgb(229,111,26)" fg:x="10128" fg:w="5"/><text x="60.9003%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.03%)</title><rect x="60.6503%" y="1093" width="0.0299%" height="15" fill="rgb(213,115,40)" fg:x="10128" fg:w="5"/><text x="60.9003%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.03%)</title><rect x="60.6503%" y="1077" width="0.0299%" height="15" fill="rgb(209,56,44)" fg:x="10128" fg:w="5"/><text x="60.9003%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.03%)</title><rect x="60.6503%" y="1061" width="0.0299%" height="15" fill="rgb(230,108,32)" fg:x="10128" fg:w="5"/><text x="60.9003%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="60.6623%" y="1045" width="0.0180%" height="15" fill="rgb(216,165,31)" fg:x="10130" fg:w="3"/><text x="60.9123%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="60.6623%" y="1029" width="0.0180%" height="15" fill="rgb(218,122,21)" fg:x="10130" fg:w="3"/><text x="60.9123%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="60.6683%" y="1013" width="0.0120%" height="15" fill="rgb(223,224,47)" fg:x="10131" fg:w="2"/><text x="60.9183%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.04%)</title><rect x="60.6503%" y="1237" width="0.0359%" height="15" fill="rgb(238,102,44)" fg:x="10128" fg:w="6"/><text x="60.9003%" y="1247.50"></text></g><g><title>&lt;range_set_blaze::union_iter::UnionIter&lt;T,range_set_blaze::unsorted_disjoint::AssumeSortedStarts&lt;T,alloc::vec::into_iter::IntoIter&lt;core::ops::range::RangeInclusive&lt;T&gt;&gt;&gt;&gt; as core::iter::traits::collect::FromIterator&lt;core::ops::range::RangeInclusive&lt;T&gt;&gt;&gt;::from_iter (6 samples, 0.04%)</title><rect x="60.6503%" y="1221" width="0.0359%" height="15" fill="rgb(236,46,40)" fg:x="10128" fg:w="6"/><text x="60.9003%" y="1231.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.04%)</title><rect x="60.6503%" y="1205" width="0.0359%" height="15" fill="rgb(247,202,50)" fg:x="10128" fg:w="6"/><text x="60.9003%" y="1215.50"></text></g><g><title>&lt;range_set_blaze::union_iter::UnionIter&lt;T,range_set_blaze::unsorted_disjoint::AssumeSortedStarts&lt;T,alloc::vec::into_iter::IntoIter&lt;core::ops::range::RangeInclusive&lt;T&gt;&gt;&gt;&gt; as core::convert::From&lt;range_set_blaze::unsorted_disjoint::UnsortedDisjoint&lt;T,I&gt;&gt;&gt;::from (6 samples, 0.04%)</title><rect x="60.6503%" y="1189" width="0.0359%" height="15" fill="rgb(209,99,20)" fg:x="10128" fg:w="6"/><text x="60.9003%" y="1199.50"></text></g><g><title>itertools::Itertools::sorted_by_key (6 samples, 0.04%)</title><rect x="60.6503%" y="1173" width="0.0359%" height="15" fill="rgb(252,27,34)" fg:x="10128" fg:w="6"/><text x="60.9003%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.04%)</title><rect x="60.6503%" y="1157" width="0.0359%" height="15" fill="rgb(215,206,23)" fg:x="10128" fg:w="6"/><text x="60.9003%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.04%)</title><rect x="60.6503%" y="1141" width="0.0359%" height="15" fill="rgb(212,135,36)" fg:x="10128" fg:w="6"/><text x="60.9003%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.04%)</title><rect x="60.6503%" y="1125" width="0.0359%" height="15" fill="rgb(240,189,1)" fg:x="10128" fg:w="6"/><text x="60.9003%" y="1135.50"></text></g><g><title>alloc::collections::btree::append::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (5 samples, 0.03%)</title><rect x="60.6863%" y="1189" width="0.0299%" height="15" fill="rgb(242,56,20)" fg:x="10134" fg:w="5"/><text x="60.9363%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::bulk_build_from_sorted_iter (6 samples, 0.04%)</title><rect x="60.6863%" y="1205" width="0.0359%" height="15" fill="rgb(247,132,33)" fg:x="10134" fg:w="6"/><text x="60.9363%" y="1215.50"></text></g><g><title>&lt;range_set_blaze::RangeSetBlaze&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;core::ops::range::RangeInclusive&lt;T&gt;&gt;&gt;::from_iter (16 samples, 0.10%)</title><rect x="60.6503%" y="1253" width="0.0958%" height="15" fill="rgb(208,149,11)" fg:x="10128" fg:w="16"/><text x="60.9003%" y="1263.50"></text></g><g><title>range_set_blaze::RangeSetBlaze&lt;T&gt;::from_sorted_disjoint (10 samples, 0.06%)</title><rect x="60.6863%" y="1237" width="0.0599%" height="15" fill="rgb(211,33,11)" fg:x="10134" fg:w="10"/><text x="60.9363%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10 samples, 0.06%)</title><rect x="60.6863%" y="1221" width="0.0599%" height="15" fill="rgb(221,29,38)" fg:x="10134" fg:w="10"/><text x="60.9363%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.02%)</title><rect x="60.7222%" y="1205" width="0.0240%" height="15" fill="rgb(206,182,49)" fg:x="10140" fg:w="4"/><text x="60.9722%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="60.7222%" y="1189" width="0.0240%" height="15" fill="rgb(216,140,1)" fg:x="10140" fg:w="4"/><text x="60.9722%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="60.7222%" y="1173" width="0.0240%" height="15" fill="rgb(232,57,40)" fg:x="10140" fg:w="4"/><text x="60.9722%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="60.7222%" y="1157" width="0.0240%" height="15" fill="rgb(224,186,18)" fg:x="10140" fg:w="4"/><text x="60.9722%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.01%)</title><rect x="60.7342%" y="1141" width="0.0120%" height="15" fill="rgb(215,121,11)" fg:x="10142" fg:w="2"/><text x="60.9842%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="60.7342%" y="1125" width="0.0120%" height="15" fill="rgb(245,147,10)" fg:x="10142" fg:w="2"/><text x="60.9842%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="60.7342%" y="1109" width="0.0120%" height="15" fill="rgb(238,153,13)" fg:x="10142" fg:w="2"/><text x="60.9842%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="60.7342%" y="1093" width="0.0120%" height="15" fill="rgb(233,108,0)" fg:x="10142" fg:w="2"/><text x="60.9842%" y="1103.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.01%)</title><rect x="60.7521%" y="1205" width="0.0120%" height="15" fill="rgb(212,157,17)" fg:x="10145" fg:w="2"/><text x="61.0021%" y="1215.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (3 samples, 0.02%)</title><rect x="60.7941%" y="1125" width="0.0180%" height="15" fill="rgb(225,213,38)" fg:x="10152" fg:w="3"/><text x="61.0441%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range_mut (10 samples, 0.06%)</title><rect x="60.7761%" y="1189" width="0.0599%" height="15" fill="rgb(248,16,11)" fg:x="10149" fg:w="10"/><text x="61.0261%" y="1199.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (10 samples, 0.06%)</title><rect x="60.7761%" y="1173" width="0.0599%" height="15" fill="rgb(241,33,4)" fg:x="10149" fg:w="10"/><text x="61.0261%" y="1183.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (10 samples, 0.06%)</title><rect x="60.7761%" y="1157" width="0.0599%" height="15" fill="rgb(222,26,43)" fg:x="10149" fg:w="10"/><text x="61.0261%" y="1167.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree_for_bifurcation (10 samples, 0.06%)</title><rect x="60.7761%" y="1141" width="0.0599%" height="15" fill="rgb(243,29,36)" fg:x="10149" fg:w="10"/><text x="61.0261%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_upper_bound_index (4 samples, 0.02%)</title><rect x="60.8120%" y="1125" width="0.0240%" height="15" fill="rgb(241,9,27)" fg:x="10155" fg:w="4"/><text x="61.0620%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (4 samples, 0.02%)</title><rect x="60.8120%" y="1109" width="0.0240%" height="15" fill="rgb(205,117,26)" fg:x="10155" fg:w="4"/><text x="61.0620%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::RangeMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="60.8360%" y="1173" width="0.0120%" height="15" fill="rgb(209,80,39)" fg:x="10159" fg:w="2"/><text x="61.0860%" y="1183.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::ValMut,K,V&gt;::next_checked (2 samples, 0.01%)</title><rect x="60.8360%" y="1157" width="0.0120%" height="15" fill="rgb(239,155,6)" fg:x="10159" fg:w="2"/><text x="61.0860%" y="1167.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_checked (2 samples, 0.01%)</title><rect x="60.8360%" y="1141" width="0.0120%" height="15" fill="rgb(212,104,12)" fg:x="10159" fg:w="2"/><text x="61.0860%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (3 samples, 0.02%)</title><rect x="60.8480%" y="1109" width="0.0180%" height="15" fill="rgb(234,204,3)" fg:x="10161" fg:w="3"/><text x="61.0980%" y="1119.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.01%)</title><rect x="60.8539%" y="1093" width="0.0120%" height="15" fill="rgb(251,218,7)" fg:x="10162" fg:w="2"/><text x="61.1039%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range_mut (4 samples, 0.02%)</title><rect x="60.8480%" y="1173" width="0.0240%" height="15" fill="rgb(221,81,32)" fg:x="10161" fg:w="4"/><text x="61.0980%" y="1183.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::ValMut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (4 samples, 0.02%)</title><rect x="60.8480%" y="1157" width="0.0240%" height="15" fill="rgb(214,152,26)" fg:x="10161" fg:w="4"/><text x="61.0980%" y="1167.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (4 samples, 0.02%)</title><rect x="60.8480%" y="1141" width="0.0240%" height="15" fill="rgb(223,22,3)" fg:x="10161" fg:w="4"/><text x="61.0980%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree_for_bifurcation (4 samples, 0.02%)</title><rect x="60.8480%" y="1125" width="0.0240%" height="15" fill="rgb(207,174,7)" fg:x="10161" fg:w="4"/><text x="61.0980%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (3 samples, 0.02%)</title><rect x="60.8719%" y="1141" width="0.0180%" height="15" fill="rgb(224,19,52)" fg:x="10165" fg:w="3"/><text x="61.1219%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (3 samples, 0.02%)</title><rect x="60.8719%" y="1125" width="0.0180%" height="15" fill="rgb(228,24,14)" fg:x="10165" fg:w="3"/><text x="61.1219%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (4 samples, 0.02%)</title><rect x="60.8719%" y="1157" width="0.0240%" height="15" fill="rgb(230,153,43)" fg:x="10165" fg:w="4"/><text x="61.1219%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (5 samples, 0.03%)</title><rect x="60.8719%" y="1173" width="0.0299%" height="15" fill="rgb(231,106,12)" fg:x="10165" fg:w="5"/><text x="61.1219%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="60.9019%" y="1173" width="0.0120%" height="15" fill="rgb(215,92,2)" fg:x="10170" fg:w="2"/><text x="61.1519%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="60.9019%" y="1157" width="0.0120%" height="15" fill="rgb(249,143,25)" fg:x="10170" fg:w="2"/><text x="61.1519%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="60.9019%" y="1141" width="0.0120%" height="15" fill="rgb(252,7,35)" fg:x="10170" fg:w="2"/><text x="61.1519%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="60.9019%" y="1125" width="0.0120%" height="15" fill="rgb(216,69,40)" fg:x="10170" fg:w="2"/><text x="61.1519%" y="1135.50"></text></g><g><title>range_set_blaze::RangeSetBlaze&lt;T&gt;::delete_extra (16 samples, 0.10%)</title><rect x="60.8360%" y="1189" width="0.0958%" height="15" fill="rgb(240,36,33)" fg:x="10159" fg:w="16"/><text x="61.0860%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::range_mut (2 samples, 0.01%)</title><rect x="60.9318%" y="1157" width="0.0120%" height="15" fill="rgb(231,128,14)" fg:x="10175" fg:w="2"/><text x="61.1818%" y="1167.50"></text></g><g><title>&lt;range_set_blaze::RangeSetBlaze&lt;T&gt; as core::ops::bit::BitOrAssign&lt;&amp;range_set_blaze::RangeSetBlaze&lt;T&gt;&gt;&gt;::bitor_assign (34 samples, 0.20%)</title><rect x="60.7462%" y="1237" width="0.2036%" height="15" fill="rgb(245,143,14)" fg:x="10144" fg:w="34"/><text x="60.9962%" y="1247.50"></text></g><g><title>&lt;range_set_blaze::RangeSetBlaze&lt;T&gt; as core::iter::traits::collect::Extend&lt;core::ops::range::RangeInclusive&lt;T&gt;&gt;&gt;::extend (34 samples, 0.20%)</title><rect x="60.7462%" y="1221" width="0.2036%" height="15" fill="rgb(222,130,28)" fg:x="10144" fg:w="34"/><text x="60.9962%" y="1231.50"></text></g><g><title>range_set_blaze::RangeSetBlaze&lt;T&gt;::internal_add (31 samples, 0.19%)</title><rect x="60.7641%" y="1205" width="0.1856%" height="15" fill="rgb(212,10,48)" fg:x="10147" fg:w="31"/><text x="61.0141%" y="1215.50"></text></g><g><title>range_set_blaze::RangeSetBlaze&lt;T&gt;::internal_add2 (3 samples, 0.02%)</title><rect x="60.9318%" y="1189" width="0.0180%" height="15" fill="rgb(254,118,45)" fg:x="10175" fg:w="3"/><text x="61.1818%" y="1199.50"></text></g><g><title>range_set_blaze::RangeSetBlaze&lt;T&gt;::delete_extra (3 samples, 0.02%)</title><rect x="60.9318%" y="1173" width="0.0180%" height="15" fill="rgb(228,6,45)" fg:x="10175" fg:w="3"/><text x="61.1818%" y="1183.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (2 samples, 0.01%)</title><rect x="60.9498%" y="1125" width="0.0120%" height="15" fill="rgb(241,18,35)" fg:x="10178" fg:w="2"/><text x="61.1998%" y="1135.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (2 samples, 0.01%)</title><rect x="60.9498%" y="1109" width="0.0120%" height="15" fill="rgb(227,214,53)" fg:x="10178" fg:w="2"/><text x="61.1998%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (2 samples, 0.01%)</title><rect x="60.9498%" y="1093" width="0.0120%" height="15" fill="rgb(224,107,51)" fg:x="10178" fg:w="2"/><text x="61.1998%" y="1103.50"></text></g><g><title>&lt;range_set_blaze::RangeSetBlaze&lt;T&gt; as core::ops::bit::BitOrAssign&gt;::bitor_assign (37 samples, 0.22%)</title><rect x="60.7462%" y="1253" width="0.2216%" height="15" fill="rgb(248,60,28)" fg:x="10144" fg:w="37"/><text x="60.9962%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;range_set_blaze::RangeSetBlaze&lt;u16&gt;&gt; (3 samples, 0.02%)</title><rect x="60.9498%" y="1237" width="0.0180%" height="15" fill="rgb(249,101,23)" fg:x="10178" fg:w="3"/><text x="61.1998%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u16,u16&gt;&gt; (3 samples, 0.02%)</title><rect x="60.9498%" y="1221" width="0.0180%" height="15" fill="rgb(228,51,19)" fg:x="10178" fg:w="3"/><text x="61.1998%" y="1231.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="60.9498%" y="1205" width="0.0180%" height="15" fill="rgb(213,20,6)" fg:x="10178" fg:w="3"/><text x="61.1998%" y="1215.50"></text></g><g><title>core::mem::drop (3 samples, 0.02%)</title><rect x="60.9498%" y="1189" width="0.0180%" height="15" fill="rgb(212,124,10)" fg:x="10178" fg:w="3"/><text x="61.1998%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u16,u16&gt;&gt; (3 samples, 0.02%)</title><rect x="60.9498%" y="1173" width="0.0180%" height="15" fill="rgb(248,3,40)" fg:x="10178" fg:w="3"/><text x="61.1998%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="60.9498%" y="1157" width="0.0180%" height="15" fill="rgb(223,178,23)" fg:x="10178" fg:w="3"/><text x="61.1998%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.02%)</title><rect x="60.9498%" y="1141" width="0.0180%" height="15" fill="rgb(240,132,45)" fg:x="10178" fg:w="3"/><text x="61.1998%" y="1151.50"></text></g><g><title>&lt;range_set_blaze::not_iter::NotIter&lt;T,L&gt; as core::ops::bit::BitOr&lt;R&gt;&gt;::bitor (6 samples, 0.04%)</title><rect x="60.9737%" y="1205" width="0.0359%" height="15" fill="rgb(245,164,36)" fg:x="10182" fg:w="6"/><text x="61.2237%" y="1215.50"></text></g><g><title>range_set_blaze::sorted_disjoint::SortedDisjoint::union (6 samples, 0.04%)</title><rect x="60.9737%" y="1189" width="0.0359%" height="15" fill="rgb(231,188,53)" fg:x="10182" fg:w="6"/><text x="61.2237%" y="1199.50"></text></g><g><title>range_set_blaze::merge::Merge&lt;T,L,R&gt;::new (6 samples, 0.04%)</title><rect x="60.9737%" y="1173" width="0.0359%" height="15" fill="rgb(237,198,39)" fg:x="10182" fg:w="6"/><text x="61.2237%" y="1183.50"></text></g><g><title>itertools::Itertools::merge_by (6 samples, 0.04%)</title><rect x="60.9737%" y="1157" width="0.0359%" height="15" fill="rgb(223,120,35)" fg:x="10182" fg:w="6"/><text x="61.2237%" y="1167.50"></text></g><g><title>itertools::adaptors::merge_by_new (4 samples, 0.02%)</title><rect x="60.9857%" y="1141" width="0.0240%" height="15" fill="rgb(253,107,49)" fg:x="10184" fg:w="4"/><text x="61.2357%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::peekable (3 samples, 0.02%)</title><rect x="60.9917%" y="1125" width="0.0180%" height="15" fill="rgb(216,44,31)" fg:x="10185" fg:w="3"/><text x="61.2417%" y="1135.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::new (3 samples, 0.02%)</title><rect x="60.9917%" y="1109" width="0.0180%" height="15" fill="rgb(253,87,21)" fg:x="10185" fg:w="3"/><text x="61.2417%" y="1119.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="60.9977%" y="1093" width="0.0120%" height="15" fill="rgb(226,18,2)" fg:x="10186" fg:w="2"/><text x="61.2477%" y="1103.50"></text></g><g><title>range_set_blaze::sorted_disjoint::SortedDisjoint::intersection (8 samples, 0.05%)</title><rect x="60.9677%" y="1221" width="0.0479%" height="15" fill="rgb(216,8,46)" fg:x="10181" fg:w="8"/><text x="61.2177%" y="1231.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (3 samples, 0.02%)</title><rect x="61.0336%" y="1029" width="0.0180%" height="15" fill="rgb(226,140,39)" fg:x="10192" fg:w="3"/><text x="61.2836%" y="1039.50"></text></g><g><title>alloc::collections::btree::mem::replace (2 samples, 0.01%)</title><rect x="61.0396%" y="1013" width="0.0120%" height="15" fill="rgb(221,194,54)" fg:x="10193" fg:w="2"/><text x="61.2896%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="61.0276%" y="1061" width="0.0299%" height="15" fill="rgb(213,92,11)" fg:x="10191" fg:w="5"/><text x="61.2776%" y="1071.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (5 samples, 0.03%)</title><rect x="61.0276%" y="1045" width="0.0299%" height="15" fill="rgb(229,162,46)" fg:x="10191" fg:w="5"/><text x="61.2776%" y="1055.50"></text></g><g><title>&lt;range_set_blaze::merge::Merge&lt;T,L,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.05%)</title><rect x="61.0156%" y="1173" width="0.0479%" height="15" fill="rgb(214,111,36)" fg:x="10189" fg:w="8"/><text x="61.2656%" y="1183.50"></text></g><g><title>&lt;itertools::adaptors::MergeBy&lt;I,J,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.05%)</title><rect x="61.0156%" y="1157" width="0.0479%" height="15" fill="rgb(207,6,21)" fg:x="10189" fg:w="8"/><text x="61.2656%" y="1167.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (7 samples, 0.04%)</title><rect x="61.0216%" y="1141" width="0.0419%" height="15" fill="rgb(213,127,38)" fg:x="10190" fg:w="7"/><text x="61.2716%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (7 samples, 0.04%)</title><rect x="61.0216%" y="1125" width="0.0419%" height="15" fill="rgb(238,118,32)" fg:x="10190" fg:w="7"/><text x="61.2716%" y="1135.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (7 samples, 0.04%)</title><rect x="61.0216%" y="1109" width="0.0419%" height="15" fill="rgb(240,139,39)" fg:x="10190" fg:w="7"/><text x="61.2716%" y="1119.50"></text></g><g><title>&lt;range_set_blaze::not_iter::NotIter&lt;T,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.04%)</title><rect x="61.0216%" y="1093" width="0.0419%" height="15" fill="rgb(235,10,37)" fg:x="10190" fg:w="7"/><text x="61.2716%" y="1103.50"></text></g><g><title>&lt;range_set_blaze::ranges::RangesIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="61.0276%" y="1077" width="0.0359%" height="15" fill="rgb(249,171,38)" fg:x="10191" fg:w="6"/><text x="61.2776%" y="1087.50"></text></g><g><title>range_set_blaze::RangeSetBlaze&lt;T&gt;::is_disjoint (17 samples, 0.10%)</title><rect x="60.9677%" y="1253" width="0.1018%" height="15" fill="rgb(242,144,32)" fg:x="10181" fg:w="17"/><text x="61.2177%" y="1263.50"></text></g><g><title>range_set_blaze::sorted_disjoint::SortedDisjoint::is_disjoint (17 samples, 0.10%)</title><rect x="60.9677%" y="1237" width="0.1018%" height="15" fill="rgb(217,117,21)" fg:x="10181" fg:w="17"/><text x="61.2177%" y="1247.50"></text></g><g><title>range_set_blaze::sorted_disjoint::SortedDisjoint::is_empty (9 samples, 0.05%)</title><rect x="61.0156%" y="1221" width="0.0539%" height="15" fill="rgb(249,87,1)" fg:x="10189" fg:w="9"/><text x="61.2656%" y="1231.50"></text></g><g><title>&lt;range_set_blaze::not_iter::NotIter&lt;T,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.05%)</title><rect x="61.0156%" y="1205" width="0.0539%" height="15" fill="rgb(248,196,48)" fg:x="10189" fg:w="9"/><text x="61.2656%" y="1215.50"></text></g><g><title>&lt;range_set_blaze::union_iter::UnionIter&lt;T,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.05%)</title><rect x="61.0156%" y="1189" width="0.0539%" height="15" fill="rgb(251,206,33)" fg:x="10189" fg:w="9"/><text x="61.2656%" y="1199.50"></text></g><g><title>veilid_tools::assembly_buffer::PeerMessages::merge_in_data (71 samples, 0.43%)</title><rect x="60.6503%" y="1269" width="0.4252%" height="15" fill="rgb(232,141,28)" fg:x="10128" fg:w="71"/><text x="60.9003%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="61.0755%" y="1237" width="0.0120%" height="15" fill="rgb(209,167,14)" fg:x="10199" fg:w="2"/><text x="61.3255%" y="1247.50"></text></g><g><title>&lt;range_set_blaze::union_iter::UnionIter&lt;T,range_set_blaze::unsorted_disjoint::AssumeSortedStarts&lt;T,alloc::vec::into_iter::IntoIter&lt;core::ops::range::RangeInclusive&lt;T&gt;&gt;&gt;&gt; as core::iter::traits::collect::FromIterator&lt;core::ops::range::RangeInclusive&lt;T&gt;&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="61.0755%" y="1221" width="0.0120%" height="15" fill="rgb(225,11,50)" fg:x="10199" fg:w="2"/><text x="61.3255%" y="1231.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.01%)</title><rect x="61.0755%" y="1205" width="0.0120%" height="15" fill="rgb(209,50,20)" fg:x="10199" fg:w="2"/><text x="61.3255%" y="1215.50"></text></g><g><title>&lt;range_set_blaze::union_iter::UnionIter&lt;T,range_set_blaze::unsorted_disjoint::AssumeSortedStarts&lt;T,alloc::vec::into_iter::IntoIter&lt;core::ops::range::RangeInclusive&lt;T&gt;&gt;&gt;&gt; as core::convert::From&lt;range_set_blaze::unsorted_disjoint::UnsortedDisjoint&lt;T,I&gt;&gt;&gt;::from (2 samples, 0.01%)</title><rect x="61.0755%" y="1189" width="0.0120%" height="15" fill="rgb(212,17,46)" fg:x="10199" fg:w="2"/><text x="61.3255%" y="1199.50"></text></g><g><title>itertools::Itertools::sorted_by_key (2 samples, 0.01%)</title><rect x="61.0755%" y="1173" width="0.0120%" height="15" fill="rgb(216,101,39)" fg:x="10199" fg:w="2"/><text x="61.3255%" y="1183.50"></text></g><g><title>&lt;range_set_blaze::RangeSetBlaze&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;core::ops::range::RangeInclusive&lt;T&gt;&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="61.0755%" y="1253" width="0.0180%" height="15" fill="rgb(212,228,48)" fg:x="10199" fg:w="3"/><text x="61.3255%" y="1263.50"></text></g><g><title>veilid_core::network_manager::native::protocol::udp::RawUdpProtocolHandler::recv_message::{{closure}} (79 samples, 0.47%)</title><rect x="60.6324%" y="1317" width="0.4731%" height="15" fill="rgb(250,6,50)" fg:x="10125" fg:w="79"/><text x="60.8824%" y="1327.50"></text></g><g><title>veilid_tools::assembly_buffer::AssemblyBuffer::insert_frame (76 samples, 0.46%)</title><rect x="60.6503%" y="1301" width="0.4551%" height="15" fill="rgb(250,160,48)" fg:x="10128" fg:w="76"/><text x="60.9003%" y="1311.50"></text></g><g><title>veilid_tools::assembly_buffer::PeerMessages::insert_fragment (76 samples, 0.46%)</title><rect x="60.6503%" y="1285" width="0.4551%" height="15" fill="rgb(244,216,33)" fg:x="10128" fg:w="76"/><text x="60.9003%" y="1295.50"></text></g><g><title>veilid_tools::assembly_buffer::PeerMessages::new_assembly (5 samples, 0.03%)</title><rect x="61.0755%" y="1269" width="0.0299%" height="15" fill="rgb(207,157,5)" fg:x="10199" fg:w="5"/><text x="61.3255%" y="1279.50"></text></g><g><title>alloc::vec::from_elem (2 samples, 0.01%)</title><rect x="61.0935%" y="1253" width="0.0120%" height="15" fill="rgb(228,199,8)" fg:x="10202" fg:w="2"/><text x="61.3435%" y="1263.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2 samples, 0.01%)</title><rect x="61.0935%" y="1237" width="0.0120%" height="15" fill="rgb(227,80,20)" fg:x="10202" fg:w="2"/><text x="61.3435%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (2 samples, 0.01%)</title><rect x="61.0935%" y="1221" width="0.0120%" height="15" fill="rgb(222,9,33)" fg:x="10202" fg:w="2"/><text x="61.3435%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="61.0935%" y="1205" width="0.0120%" height="15" fill="rgb(239,44,28)" fg:x="10202" fg:w="2"/><text x="61.3435%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (2 samples, 0.01%)</title><rect x="61.0935%" y="1189" width="0.0120%" height="15" fill="rgb(249,187,43)" fg:x="10202" fg:w="2"/><text x="61.3435%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="61.0935%" y="1173" width="0.0120%" height="15" fill="rgb(216,141,28)" fg:x="10202" fg:w="2"/><text x="61.3435%" y="1183.50"></text></g><g><title>alloc::alloc::alloc_zeroed (2 samples, 0.01%)</title><rect x="61.0935%" y="1157" width="0.0120%" height="15" fill="rgb(230,154,53)" fg:x="10202" fg:w="2"/><text x="61.3435%" y="1167.50"></text></g><g><title>__libc_calloc (2 samples, 0.01%)</title><rect x="61.0935%" y="1141" width="0.0120%" height="15" fill="rgb(227,82,4)" fg:x="10202" fg:w="2"/><text x="61.3435%" y="1151.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="61.0935%" y="1125" width="0.0120%" height="15" fill="rgb(220,107,16)" fg:x="10202" fg:w="2"/><text x="61.3435%" y="1135.50"></text></g><g><title>sk_page_frag_refill (2 samples, 0.01%)</title><rect x="61.1354%" y="805" width="0.0120%" height="15" fill="rgb(207,187,2)" fg:x="10209" fg:w="2"/><text x="61.3854%" y="815.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.01%)</title><rect x="61.1354%" y="789" width="0.0120%" height="15" fill="rgb(210,162,52)" fg:x="10209" fg:w="2"/><text x="61.3854%" y="799.50"></text></g><g><title>alloc_pages (2 samples, 0.01%)</title><rect x="61.1354%" y="773" width="0.0120%" height="15" fill="rgb(217,216,49)" fg:x="10209" fg:w="2"/><text x="61.3854%" y="783.50"></text></g><g><title>__alloc_pages (2 samples, 0.01%)</title><rect x="61.1354%" y="757" width="0.0120%" height="15" fill="rgb(218,146,49)" fg:x="10209" fg:w="2"/><text x="61.3854%" y="767.50"></text></g><g><title>skb_do_copy_data_nocache (4 samples, 0.02%)</title><rect x="61.1474%" y="805" width="0.0240%" height="15" fill="rgb(216,55,40)" fg:x="10211" fg:w="4"/><text x="61.3974%" y="815.50"></text></g><g><title>copy_user_enhanced_fast_string (4 samples, 0.02%)</title><rect x="61.1474%" y="789" width="0.0240%" height="15" fill="rgb(208,196,21)" fg:x="10211" fg:w="4"/><text x="61.3974%" y="799.50"></text></g><g><title>__ip_local_out (2 samples, 0.01%)</title><rect x="61.1713%" y="693" width="0.0120%" height="15" fill="rgb(242,117,42)" fg:x="10215" fg:w="2"/><text x="61.4213%" y="703.50"></text></g><g><title>nf_hook_slow (2 samples, 0.01%)</title><rect x="61.1713%" y="677" width="0.0120%" height="15" fill="rgb(210,11,23)" fg:x="10215" fg:w="2"/><text x="61.4213%" y="687.50"></text></g><g><title>nft_do_chain_ipv4 (2 samples, 0.01%)</title><rect x="61.1713%" y="661" width="0.0120%" height="15" fill="rgb(217,110,2)" fg:x="10215" fg:w="2"/><text x="61.4213%" y="671.50"></text></g><g><title>nft_do_chain (2 samples, 0.01%)</title><rect x="61.1713%" y="645" width="0.0120%" height="15" fill="rgb(229,77,54)" fg:x="10215" fg:w="2"/><text x="61.4213%" y="655.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.03%)</title><rect x="61.1713%" y="757" width="0.0299%" height="15" fill="rgb(218,53,16)" fg:x="10215" fg:w="5"/><text x="61.4213%" y="767.50"></text></g><g><title>ip_queue_xmit (5 samples, 0.03%)</title><rect x="61.1713%" y="741" width="0.0299%" height="15" fill="rgb(215,38,13)" fg:x="10215" fg:w="5"/><text x="61.4213%" y="751.50"></text></g><g><title>__ip_queue_xmit (5 samples, 0.03%)</title><rect x="61.1713%" y="725" width="0.0299%" height="15" fill="rgb(235,42,18)" fg:x="10215" fg:w="5"/><text x="61.4213%" y="735.50"></text></g><g><title>ip_local_out (5 samples, 0.03%)</title><rect x="61.1713%" y="709" width="0.0299%" height="15" fill="rgb(219,66,54)" fg:x="10215" fg:w="5"/><text x="61.4213%" y="719.50"></text></g><g><title>ip_output (3 samples, 0.02%)</title><rect x="61.1833%" y="693" width="0.0180%" height="15" fill="rgb(222,205,4)" fg:x="10217" fg:w="3"/><text x="61.4333%" y="703.50"></text></g><g><title>ip_finish_output (3 samples, 0.02%)</title><rect x="61.1833%" y="677" width="0.0180%" height="15" fill="rgb(227,213,46)" fg:x="10217" fg:w="3"/><text x="61.4333%" y="687.50"></text></g><g><title>__ip_finish_output (3 samples, 0.02%)</title><rect x="61.1833%" y="661" width="0.0180%" height="15" fill="rgb(250,145,42)" fg:x="10217" fg:w="3"/><text x="61.4333%" y="671.50"></text></g><g><title>ip_finish_output2 (3 samples, 0.02%)</title><rect x="61.1833%" y="645" width="0.0180%" height="15" fill="rgb(219,15,2)" fg:x="10217" fg:w="3"/><text x="61.4333%" y="655.50"></text></g><g><title>neigh_hh_output (3 samples, 0.02%)</title><rect x="61.1833%" y="629" width="0.0180%" height="15" fill="rgb(231,181,52)" fg:x="10217" fg:w="3"/><text x="61.4333%" y="639.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.02%)</title><rect x="61.1833%" y="613" width="0.0180%" height="15" fill="rgb(235,1,42)" fg:x="10217" fg:w="3"/><text x="61.4333%" y="623.50"></text></g><g><title>__dev_xmit_skb (3 samples, 0.02%)</title><rect x="61.1833%" y="597" width="0.0180%" height="15" fill="rgb(249,88,27)" fg:x="10217" fg:w="3"/><text x="61.4333%" y="607.50"></text></g><g><title>sch_direct_xmit (2 samples, 0.01%)</title><rect x="61.1893%" y="581" width="0.0120%" height="15" fill="rgb(235,145,16)" fg:x="10218" fg:w="2"/><text x="61.4393%" y="591.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="61.1893%" y="565" width="0.0120%" height="15" fill="rgb(237,114,19)" fg:x="10218" fg:w="2"/><text x="61.4393%" y="575.50"></text></g><g><title>rtl8169_start_xmit (2 samples, 0.01%)</title><rect x="61.1893%" y="549" width="0.0120%" height="15" fill="rgb(238,51,50)" fg:x="10218" fg:w="2"/><text x="61.4393%" y="559.50"></text></g><g><title>inet_sendmsg (12 samples, 0.07%)</title><rect x="61.1354%" y="853" width="0.0719%" height="15" fill="rgb(205,194,25)" fg:x="10209" fg:w="12"/><text x="61.3854%" y="863.50"></text></g><g><title>tcp_sendmsg (12 samples, 0.07%)</title><rect x="61.1354%" y="837" width="0.0719%" height="15" fill="rgb(215,203,17)" fg:x="10209" fg:w="12"/><text x="61.3854%" y="847.50"></text></g><g><title>tcp_sendmsg_locked (12 samples, 0.07%)</title><rect x="61.1354%" y="821" width="0.0719%" height="15" fill="rgb(233,112,49)" fg:x="10209" fg:w="12"/><text x="61.3854%" y="831.50"></text></g><g><title>tcp_push (6 samples, 0.04%)</title><rect x="61.1713%" y="805" width="0.0359%" height="15" fill="rgb(241,130,26)" fg:x="10215" fg:w="6"/><text x="61.4213%" y="815.50"></text></g><g><title>__tcp_push_pending_frames (6 samples, 0.04%)</title><rect x="61.1713%" y="789" width="0.0359%" height="15" fill="rgb(252,223,19)" fg:x="10215" fg:w="6"/><text x="61.4213%" y="799.50"></text></g><g><title>tcp_write_xmit (6 samples, 0.04%)</title><rect x="61.1713%" y="773" width="0.0359%" height="15" fill="rgb(211,95,25)" fg:x="10215" fg:w="6"/><text x="61.4213%" y="783.50"></text></g><g><title>veilid_core::network_manager::network_connection::NetworkConnection::process_connection::{{closure}}::{{closure}}::{{closure}} (18 samples, 0.11%)</title><rect x="61.1055%" y="1317" width="0.1078%" height="15" fill="rgb(251,182,27)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1327.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.11%)</title><rect x="61.1055%" y="1301" width="0.1078%" height="15" fill="rgb(238,24,4)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1311.50"></text></g><g><title>veilid_core::network_manager::network_connection::NetworkConnection::send_internal::{{closure}} (18 samples, 0.11%)</title><rect x="61.1055%" y="1285" width="0.1078%" height="15" fill="rgb(224,220,25)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1295.50"></text></g><g><title>veilid_core::network_manager::network_connection::NetworkConnection::send_internal::{{closure}}::{{closure}} (18 samples, 0.11%)</title><rect x="61.1055%" y="1269" width="0.1078%" height="15" fill="rgb(239,133,26)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1279.50"></text></g><g><title>veilid_core::network_manager::network_connection::NetworkConnection::send_internal::{{closure}}::{{closure}}::{{closure}} (18 samples, 0.11%)</title><rect x="61.1055%" y="1253" width="0.1078%" height="15" fill="rgb(211,94,48)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1263.50"></text></g><g><title>veilid_core::network_manager::native::protocol::ProtocolNetworkConnection::send::{{closure}} (18 samples, 0.11%)</title><rect x="61.1055%" y="1237" width="0.1078%" height="15" fill="rgb(239,87,6)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1247.50"></text></g><g><title>veilid_core::network_manager::native::protocol::tcp::RawTcpNetworkConnection::send::{{closure}} (18 samples, 0.11%)</title><rect x="61.1055%" y="1221" width="0.1078%" height="15" fill="rgb(227,62,0)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1231.50"></text></g><g><title>veilid_core::network_manager::native::protocol::tcp::RawTcpNetworkConnection::send_internal::{{closure}} (18 samples, 0.11%)</title><rect x="61.1055%" y="1205" width="0.1078%" height="15" fill="rgb(211,226,4)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1215.50"></text></g><g><title>&lt;futures_util::io::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (18 samples, 0.11%)</title><rect x="61.1055%" y="1189" width="0.1078%" height="15" fill="rgb(253,38,52)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1199.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncWrite&gt;::poll_write (18 samples, 0.11%)</title><rect x="61.1055%" y="1173" width="0.1078%" height="15" fill="rgb(229,126,40)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1183.50"></text></g><g><title>&lt;veilid_tools::async_peek_stream::AsyncPeekStream as futures_io::if_std::AsyncWrite&gt;::poll_write (18 samples, 0.11%)</title><rect x="61.1055%" y="1157" width="0.1078%" height="15" fill="rgb(229,165,44)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (18 samples, 0.11%)</title><rect x="61.1055%" y="1141" width="0.1078%" height="15" fill="rgb(247,95,47)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1151.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (18 samples, 0.11%)</title><rect x="61.1055%" y="1125" width="0.1078%" height="15" fill="rgb(216,140,30)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1135.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (18 samples, 0.11%)</title><rect x="61.1055%" y="1109" width="0.1078%" height="15" fill="rgb(246,214,8)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1119.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (18 samples, 0.11%)</title><rect x="61.1055%" y="1093" width="0.1078%" height="15" fill="rgb(227,224,15)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1103.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (18 samples, 0.11%)</title><rect x="61.1055%" y="1077" width="0.1078%" height="15" fill="rgb(233,175,4)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1087.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (18 samples, 0.11%)</title><rect x="61.1055%" y="1061" width="0.1078%" height="15" fill="rgb(221,66,45)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1071.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (18 samples, 0.11%)</title><rect x="61.1055%" y="1045" width="0.1078%" height="15" fill="rgb(221,178,18)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1055.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (18 samples, 0.11%)</title><rect x="61.1055%" y="1029" width="0.1078%" height="15" fill="rgb(213,81,29)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1039.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (18 samples, 0.11%)</title><rect x="61.1055%" y="1013" width="0.1078%" height="15" fill="rgb(220,89,49)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1023.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (18 samples, 0.11%)</title><rect x="61.1055%" y="997" width="0.1078%" height="15" fill="rgb(227,60,33)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="1007.50"></text></g><g><title>std::sys_common::net::TcpStream::write (18 samples, 0.11%)</title><rect x="61.1055%" y="981" width="0.1078%" height="15" fill="rgb(205,113,12)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="991.50"></text></g><g><title>__libc_send (18 samples, 0.11%)</title><rect x="61.1055%" y="965" width="0.1078%" height="15" fill="rgb(211,32,1)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="975.50"></text></g><g><title>__libc_send (18 samples, 0.11%)</title><rect x="61.1055%" y="949" width="0.1078%" height="15" fill="rgb(246,2,12)" fg:x="10204" fg:w="18"/><text x="61.3555%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (17 samples, 0.10%)</title><rect x="61.1114%" y="933" width="0.1018%" height="15" fill="rgb(243,37,27)" fg:x="10205" fg:w="17"/><text x="61.3614%" y="943.50"></text></g><g><title>do_syscall_64 (16 samples, 0.10%)</title><rect x="61.1174%" y="917" width="0.0958%" height="15" fill="rgb(248,211,31)" fg:x="10206" fg:w="16"/><text x="61.3674%" y="927.50"></text></g><g><title>__x64_sys_sendto (16 samples, 0.10%)</title><rect x="61.1174%" y="901" width="0.0958%" height="15" fill="rgb(242,146,47)" fg:x="10206" fg:w="16"/><text x="61.3674%" y="911.50"></text></g><g><title>__sys_sendto (16 samples, 0.10%)</title><rect x="61.1174%" y="885" width="0.0958%" height="15" fill="rgb(206,70,20)" fg:x="10206" fg:w="16"/><text x="61.3674%" y="895.50"></text></g><g><title>sock_sendmsg (13 samples, 0.08%)</title><rect x="61.1354%" y="869" width="0.0778%" height="15" fill="rgb(215,10,51)" fg:x="10209" fg:w="13"/><text x="61.3854%" y="879.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="61.2132%" y="1157" width="0.0120%" height="15" fill="rgb(243,178,53)" fg:x="10222" fg:w="2"/><text x="61.4632%" y="1167.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="61.2132%" y="1141" width="0.0120%" height="15" fill="rgb(233,221,20)" fg:x="10222" fg:w="2"/><text x="61.4632%" y="1151.50"></text></g><g><title>veilid_core::network_manager::network_connection::NetworkConnection::process_connection::{{closure}} (5 samples, 0.03%)</title><rect x="61.2132%" y="1317" width="0.0299%" height="15" fill="rgb(218,95,35)" fg:x="10222" fg:w="5"/><text x="61.4632%" y="1327.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="61.2132%" y="1301" width="0.0299%" height="15" fill="rgb(229,13,5)" fg:x="10222" fg:w="5"/><text x="61.4632%" y="1311.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="61.2132%" y="1285" width="0.0299%" height="15" fill="rgb(252,164,30)" fg:x="10222" fg:w="5"/><text x="61.4632%" y="1295.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="61.2132%" y="1269" width="0.0299%" height="15" fill="rgb(232,68,36)" fg:x="10222" fg:w="5"/><text x="61.4632%" y="1279.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (5 samples, 0.03%)</title><rect x="61.2132%" y="1253" width="0.0299%" height="15" fill="rgb(219,59,54)" fg:x="10222" fg:w="5"/><text x="61.4632%" y="1263.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (5 samples, 0.03%)</title><rect x="61.2132%" y="1237" width="0.0299%" height="15" fill="rgb(250,92,33)" fg:x="10222" fg:w="5"/><text x="61.4632%" y="1247.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="61.2132%" y="1221" width="0.0299%" height="15" fill="rgb(229,162,54)" fg:x="10222" fg:w="5"/><text x="61.4632%" y="1231.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="61.2132%" y="1205" width="0.0299%" height="15" fill="rgb(244,114,52)" fg:x="10222" fg:w="5"/><text x="61.4632%" y="1215.50"></text></g><g><title>&lt;futures_util::future::future::Then&lt;Fut1,Fut2,F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="61.2132%" y="1189" width="0.0299%" height="15" fill="rgb(212,211,43)" fg:x="10222" fg:w="5"/><text x="61.4632%" y="1199.50"></text></g><g><title>&lt;futures_util::future::future::flatten::Flatten&lt;Fut,&lt;Fut as core::future::future::Future&gt;::Output&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="61.2132%" y="1173" width="0.0299%" height="15" fill="rgb(226,147,8)" fg:x="10222" fg:w="5"/><text x="61.4632%" y="1183.50"></text></g><g><title>veilid_core::network_manager::network_connection::NetworkConnection::process_connection::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="61.2312%" y="1157" width="0.0120%" height="15" fill="rgb(226,23,13)" fg:x="10225" fg:w="2"/><text x="61.4812%" y="1167.50"></text></g><g><title>[veilid-server] (2 samples, 0.01%)</title><rect x="61.2492%" y="1269" width="0.0120%" height="15" fill="rgb(240,63,4)" fg:x="10228" fg:w="2"/><text x="61.4992%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,core::option::Option&lt;veilid_core::routing_table::RoutingTable&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="61.2492%" y="1253" width="0.0120%" height="15" fill="rgb(221,1,32)" fg:x="10228" fg:w="2"/><text x="61.4992%" y="1263.50"></text></g><g><title>veilid_core::network_manager::send_data::&lt;impl veilid_core::network_manager::NetworkManager&gt;::send_data::{{closure}} (3 samples, 0.02%)</title><rect x="61.2492%" y="1317" width="0.0180%" height="15" fill="rgb(242,117,10)" fg:x="10228" fg:w="3"/><text x="61.4992%" y="1327.50"></text></g><g><title>veilid_core::network_manager::send_data::&lt;impl veilid_core::network_manager::NetworkManager&gt;::get_node_contact_method (3 samples, 0.02%)</title><rect x="61.2492%" y="1301" width="0.0180%" height="15" fill="rgb(249,172,44)" fg:x="10228" fg:w="3"/><text x="61.4992%" y="1311.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::routing_table (3 samples, 0.02%)</title><rect x="61.2492%" y="1285" width="0.0180%" height="15" fill="rgb(244,46,45)" fg:x="10228" fg:w="3"/><text x="61.4992%" y="1295.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="61.2971%" y="1109" width="0.0120%" height="15" fill="rgb(206,43,17)" fg:x="10236" fg:w="2"/><text x="61.5471%" y="1119.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (2 samples, 0.01%)</title><rect x="61.2971%" y="1093" width="0.0120%" height="15" fill="rgb(239,218,39)" fg:x="10236" fg:w="2"/><text x="61.5471%" y="1103.50"></text></g><g><title>veilid_core::network_manager::connection_manager::ConnectionManager::get_connection (5 samples, 0.03%)</title><rect x="61.3091%" y="1061" width="0.0299%" height="15" fill="rgb(208,169,54)" fg:x="10238" fg:w="5"/><text x="61.5591%" y="1071.50"></text></g><g><title>veilid_core::network_manager::connection_table::ConnectionTable::get_connection_by_descriptor (5 samples, 0.03%)</title><rect x="61.3091%" y="1045" width="0.0299%" height="15" fill="rgb(247,25,42)" fg:x="10238" fg:w="5"/><text x="61.5591%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.05%)</title><rect x="61.2971%" y="1221" width="0.0479%" height="15" fill="rgb(226,23,31)" fg:x="10236" fg:w="8"/><text x="61.5471%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.05%)</title><rect x="61.2971%" y="1205" width="0.0479%" height="15" fill="rgb(247,16,28)" fg:x="10236" fg:w="8"/><text x="61.5471%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.05%)</title><rect x="61.2971%" y="1189" width="0.0479%" height="15" fill="rgb(231,147,38)" fg:x="10236" fg:w="8"/><text x="61.5471%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.05%)</title><rect x="61.2971%" y="1173" width="0.0479%" height="15" fill="rgb(253,81,48)" fg:x="10236" fg:w="8"/><text x="61.5471%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.05%)</title><rect x="61.2971%" y="1157" width="0.0479%" height="15" fill="rgb(249,222,43)" fg:x="10236" fg:w="8"/><text x="61.5471%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (8 samples, 0.05%)</title><rect x="61.2971%" y="1141" width="0.0479%" height="15" fill="rgb(221,3,27)" fg:x="10236" fg:w="8"/><text x="61.5471%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.05%)</title><rect x="61.2971%" y="1125" width="0.0479%" height="15" fill="rgb(228,180,5)" fg:x="10236" fg:w="8"/><text x="61.5471%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (6 samples, 0.04%)</title><rect x="61.3091%" y="1109" width="0.0359%" height="15" fill="rgb(227,131,42)" fg:x="10238" fg:w="6"/><text x="61.5591%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.04%)</title><rect x="61.3091%" y="1093" width="0.0359%" height="15" fill="rgb(212,3,39)" fg:x="10238" fg:w="6"/><text x="61.5591%" y="1103.50"></text></g><g><title>veilid_core::routing_table::bucket_entry::BucketEntryInner::last_connections::{{closure}} (6 samples, 0.04%)</title><rect x="61.3091%" y="1077" width="0.0359%" height="15" fill="rgb(226,45,5)" fg:x="10238" fg:w="6"/><text x="61.5591%" y="1087.50"></text></g><g><title>veilid_core::routing_table::bucket_entry::BucketEntryInner::last_connections (9 samples, 0.05%)</title><rect x="61.2971%" y="1237" width="0.0539%" height="15" fill="rgb(215,167,45)" fg:x="10236" fg:w="9"/><text x="61.5471%" y="1247.50"></text></g><g><title>veilid_core::routing_table::node_ref::NodeRefBase::last_connection (10 samples, 0.06%)</title><rect x="61.2971%" y="1301" width="0.0599%" height="15" fill="rgb(250,218,53)" fg:x="10236" fg:w="10"/><text x="61.5471%" y="1311.50"></text></g><g><title>&lt;veilid_core::routing_table::node_ref::NodeRef as veilid_core::routing_table::node_ref::NodeRefBase&gt;::operate (10 samples, 0.06%)</title><rect x="61.2971%" y="1285" width="0.0599%" height="15" fill="rgb(207,140,0)" fg:x="10236" fg:w="10"/><text x="61.5471%" y="1295.50"></text></g><g><title>veilid_core::routing_table::bucket_entry::BucketEntry::with (10 samples, 0.06%)</title><rect x="61.2971%" y="1269" width="0.0599%" height="15" fill="rgb(238,133,51)" fg:x="10236" fg:w="10"/><text x="61.5471%" y="1279.50"></text></g><g><title>veilid_core::routing_table::node_ref::NodeRefBase::last_connection::{{closure}} (10 samples, 0.06%)</title><rect x="61.2971%" y="1253" width="0.0599%" height="15" fill="rgb(218,203,53)" fg:x="10236" fg:w="10"/><text x="61.5471%" y="1263.50"></text></g><g><title>veilid_core::network_manager::send_data::&lt;impl veilid_core::network_manager::NetworkManager&gt;::send_data_ncm_direct::{{closure}} (16 samples, 0.10%)</title><rect x="61.2731%" y="1317" width="0.0958%" height="15" fill="rgb(226,184,25)" fg:x="10232" fg:w="16"/><text x="61.5231%" y="1327.50"></text></g><g><title>veilid_core::routing_table::node_ref::NodeRefBase::set_last_connection (2 samples, 0.01%)</title><rect x="61.3570%" y="1301" width="0.0120%" height="15" fill="rgb(231,121,21)" fg:x="10246" fg:w="2"/><text x="61.6070%" y="1311.50"></text></g><g><title>&lt;veilid_core::routing_table::node_ref::NodeRef as veilid_core::routing_table::node_ref::NodeRefBase&gt;::operate_mut (2 samples, 0.01%)</title><rect x="61.3570%" y="1285" width="0.0120%" height="15" fill="rgb(251,14,34)" fg:x="10246" fg:w="2"/><text x="61.6070%" y="1295.50"></text></g><g><title>veilid_core::routing_table::bucket_entry::BucketEntry::with_mut (2 samples, 0.01%)</title><rect x="61.3570%" y="1269" width="0.0120%" height="15" fill="rgb(249,193,11)" fg:x="10246" fg:w="2"/><text x="61.6070%" y="1279.50"></text></g><g><title>veilid_core::routing_table::node_ref::NodeRefBase::set_last_connection::{{closure}} (2 samples, 0.01%)</title><rect x="61.3570%" y="1253" width="0.0120%" height="15" fill="rgb(220,172,37)" fg:x="10246" fg:w="2"/><text x="61.6070%" y="1263.50"></text></g><g><title>veilid_core::routing_table::RoutingTable::find_node::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="61.3749%" y="1317" width="0.0180%" height="15" fill="rgb(231,229,43)" fg:x="10249" fg:w="3"/><text x="61.6249%" y="1327.50"></text></g><g><title>veilid_core::routing_table::RoutingTable::register_find_node_answer (3 samples, 0.02%)</title><rect x="61.3749%" y="1301" width="0.0180%" height="15" fill="rgb(250,161,5)" fg:x="10249" fg:w="3"/><text x="61.6249%" y="1311.50"></text></g><g><title>veilid_core::routing_table::RoutingTable::register_find_node_answer::{{closure}} (3 samples, 0.02%)</title><rect x="61.3749%" y="1285" width="0.0180%" height="15" fill="rgb(218,225,18)" fg:x="10249" fg:w="3"/><text x="61.6249%" y="1295.50"></text></g><g><title>veilid_core::routing_table::RoutingTable::register_node_with_peer_info (3 samples, 0.02%)</title><rect x="61.3749%" y="1269" width="0.0180%" height="15" fill="rgb(245,45,42)" fg:x="10249" fg:w="3"/><text x="61.6249%" y="1279.50"></text></g><g><title>veilid_core::routing_table::routing_table_inner::RoutingTableInner::register_node_with_peer_info (3 samples, 0.02%)</title><rect x="61.3749%" y="1253" width="0.0180%" height="15" fill="rgb(211,115,1)" fg:x="10249" fg:w="3"/><text x="61.6249%" y="1263.50"></text></g><g><title>veilid_core::routing_table::routing_table_inner::RoutingTableInner::create_node_ref (3 samples, 0.02%)</title><rect x="61.3749%" y="1237" width="0.0180%" height="15" fill="rgb(248,133,52)" fg:x="10249" fg:w="3"/><text x="61.6249%" y="1247.50"></text></g><g><title>veilid_core::crypto::types::crypto_typed_set::CryptoTypedSet&lt;K&gt;::kinds (2 samples, 0.01%)</title><rect x="61.5067%" y="1253" width="0.0120%" height="15" fill="rgb(238,100,21)" fg:x="10271" fg:w="2"/><text x="61.7567%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="61.5067%" y="1237" width="0.0120%" height="15" fill="rgb(247,144,11)" fg:x="10271" fg:w="2"/><text x="61.7567%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="61.5067%" y="1221" width="0.0120%" height="15" fill="rgb(206,164,16)" fg:x="10271" fg:w="2"/><text x="61.7567%" y="1231.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_set_spec_detail::RouteSetSpecDetail::contains_nodes (2 samples, 0.01%)</title><rect x="61.5187%" y="1253" width="0.0120%" height="15" fill="rgb(222,34,3)" fg:x="10273" fg:w="2"/><text x="61.7687%" y="1263.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.01%)</title><rect x="61.5187%" y="1237" width="0.0120%" height="15" fill="rgb(248,82,4)" fg:x="10273" fg:w="2"/><text x="61.7687%" y="1247.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.01%)</title><rect x="61.5187%" y="1221" width="0.0120%" height="15" fill="rgb(228,81,46)" fg:x="10273" fg:w="2"/><text x="61.7687%" y="1231.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2 samples, 0.01%)</title><rect x="61.5187%" y="1205" width="0.0120%" height="15" fill="rgb(227,67,47)" fg:x="10273" fg:w="2"/><text x="61.7687%" y="1215.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (2 samples, 0.01%)</title><rect x="61.5187%" y="1189" width="0.0120%" height="15" fill="rgb(215,93,53)" fg:x="10273" fg:w="2"/><text x="61.7687%" y="1199.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="61.5187%" y="1173" width="0.0120%" height="15" fill="rgb(248,194,39)" fg:x="10273" fg:w="2"/><text x="61.7687%" y="1183.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (2 samples, 0.01%)</title><rect x="61.5187%" y="1157" width="0.0120%" height="15" fill="rgb(215,5,19)" fg:x="10273" fg:w="2"/><text x="61.7687%" y="1167.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_spec_store::RouteSpecStore::first_available_route_inner (10 samples, 0.06%)</title><rect x="61.4947%" y="1269" width="0.0599%" height="15" fill="rgb(226,215,51)" fg:x="10269" fg:w="10"/><text x="61.7447%" y="1279.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_set_spec_detail::RouteSetSpecDetail::get_route_set_keys (4 samples, 0.02%)</title><rect x="61.5306%" y="1253" width="0.0240%" height="15" fill="rgb(225,56,26)" fg:x="10275" fg:w="4"/><text x="61.7806%" y="1263.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_spec_store::RouteSpecStore::get_route_for_safety_spec_inner (13 samples, 0.08%)</title><rect x="61.4827%" y="1301" width="0.0778%" height="15" fill="rgb(222,75,29)" fg:x="10267" fg:w="13"/><text x="61.7327%" y="1311.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_spec_store::RouteSpecStore::get_route_for_safety_spec_inner::{{closure}} (12 samples, 0.07%)</title><rect x="61.4887%" y="1285" width="0.0719%" height="15" fill="rgb(236,139,6)" fg:x="10268" fg:w="12"/><text x="61.7387%" y="1295.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_spec_store_cache::RouteSpecStoreCache::lookup_compiled_route_cache (2 samples, 0.01%)</title><rect x="61.5606%" y="1301" width="0.0120%" height="15" fill="rgb(223,137,36)" fg:x="10280" fg:w="2"/><text x="61.8106%" y="1311.50"></text></g><g><title>hashlink::lru_cache::LruCache&lt;K,V,S&gt;::get (2 samples, 0.01%)</title><rect x="61.5606%" y="1285" width="0.0120%" height="15" fill="rgb(226,99,2)" fg:x="10280" fg:w="2"/><text x="61.8106%" y="1295.50"></text></g><g><title>hashlink::lru_cache::LruCache&lt;K,V,S&gt;::get_mut (2 samples, 0.01%)</title><rect x="61.5606%" y="1269" width="0.0120%" height="15" fill="rgb(206,133,23)" fg:x="10280" fg:w="2"/><text x="61.8106%" y="1279.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (2 samples, 0.01%)</title><rect x="61.5606%" y="1253" width="0.0120%" height="15" fill="rgb(243,173,15)" fg:x="10280" fg:w="2"/><text x="61.8106%" y="1263.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key_hashed_nocheck (2 samples, 0.01%)</title><rect x="61.5606%" y="1237" width="0.0120%" height="15" fill="rgb(228,69,28)" fg:x="10280" fg:w="2"/><text x="61.8106%" y="1247.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_hash (2 samples, 0.01%)</title><rect x="61.5606%" y="1221" width="0.0120%" height="15" fill="rgb(212,51,22)" fg:x="10280" fg:w="2"/><text x="61.8106%" y="1231.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::from_hash (2 samples, 0.01%)</title><rect x="61.5606%" y="1205" width="0.0120%" height="15" fill="rgb(227,113,0)" fg:x="10280" fg:w="2"/><text x="61.8106%" y="1215.50"></text></g><g><title>hashbrown::map::RawEntryBuilderMut&lt;K,V,S,A&gt;::search (2 samples, 0.01%)</title><rect x="61.5606%" y="1189" width="0.0120%" height="15" fill="rgb(252,84,27)" fg:x="10280" fg:w="2"/><text x="61.8106%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="61.5606%" y="1173" width="0.0120%" height="15" fill="rgb(223,145,39)" fg:x="10280" fg:w="2"/><text x="61.8106%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.01%)</title><rect x="61.5606%" y="1157" width="0.0120%" height="15" fill="rgb(239,219,30)" fg:x="10280" fg:w="2"/><text x="61.8106%" y="1167.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_spec_store::RouteSpecStore::compile_safety_route (24 samples, 0.14%)</title><rect x="61.4348%" y="1317" width="0.1437%" height="15" fill="rgb(224,196,39)" fg:x="10259" fg:w="24"/><text x="61.6848%" y="1327.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_spec_store::RouteSpecStore::test_allocated_route::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="61.5845%" y="1317" width="0.0180%" height="15" fill="rgb(205,35,43)" fg:x="10284" fg:w="3"/><text x="61.8345%" y="1327.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_spec_store::RouteSpecStore::assemble_private_route (3 samples, 0.02%)</title><rect x="61.5845%" y="1301" width="0.0180%" height="15" fill="rgb(228,201,21)" fg:x="10284" fg:w="3"/><text x="61.8345%" y="1311.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_spec_store::RouteSpecStore::assemble_private_route::{{closure}} (3 samples, 0.02%)</title><rect x="61.5845%" y="1285" width="0.0180%" height="15" fill="rgb(237,118,16)" fg:x="10284" fg:w="3"/><text x="61.8345%" y="1295.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_spec_store::RouteSpecStore::assemble_private_route_inner (3 samples, 0.02%)</title><rect x="61.5845%" y="1269" width="0.0180%" height="15" fill="rgb(241,17,19)" fg:x="10284" fg:w="3"/><text x="61.8345%" y="1279.50"></text></g><g><title>veilid_core::routing_table::tasks::&lt;impl veilid_core::routing_table::RoutingTable&gt;::tick::{{closure}} (2 samples, 0.01%)</title><rect x="61.6025%" y="1317" width="0.0120%" height="15" fill="rgb(214,10,25)" fg:x="10287" fg:w="2"/><text x="61.8525%" y="1327.50"></text></g><g><title>veilid_tools::tick_task::TickTask&lt;E&gt;::tick::{{closure}} (2 samples, 0.01%)</title><rect x="61.6025%" y="1301" width="0.0120%" height="15" fill="rgb(238,37,29)" fg:x="10287" fg:w="2"/><text x="61.8525%" y="1311.50"></text></g><g><title>tokio::sync::mutex::Mutex&lt;T&gt;::lock::{{closure}} (2 samples, 0.01%)</title><rect x="61.6025%" y="1285" width="0.0120%" height="15" fill="rgb(253,83,25)" fg:x="10287" fg:w="2"/><text x="61.8525%" y="1295.50"></text></g><g><title>&lt;tokio::util::trace::InstrumentedAsyncOp&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="61.6025%" y="1269" width="0.0120%" height="15" fill="rgb(234,192,12)" fg:x="10287" fg:w="2"/><text x="61.8525%" y="1279.50"></text></g><g><title>tokio::sync::mutex::Mutex&lt;T&gt;::lock::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="61.6025%" y="1253" width="0.0120%" height="15" fill="rgb(241,216,45)" fg:x="10287" fg:w="2"/><text x="61.8525%" y="1263.50"></text></g><g><title>tokio::sync::mutex::Mutex&lt;T&gt;::acquire::{{closure}} (2 samples, 0.01%)</title><rect x="61.6025%" y="1237" width="0.0120%" height="15" fill="rgb(242,22,33)" fg:x="10287" fg:w="2"/><text x="61.8525%" y="1247.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="61.6025%" y="1221" width="0.0120%" height="15" fill="rgb(231,105,49)" fg:x="10287" fg:w="2"/><text x="61.8525%" y="1231.50"></text></g><g><title>veilid_core::routing_table::tasks::peer_minimum_refresh::&lt;impl veilid_core::routing_table::RoutingTable&gt;::peer_minimum_refresh_task_routine::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="61.6145%" y="1317" width="0.0120%" height="15" fill="rgb(218,204,15)" fg:x="10289" fg:w="2"/><text x="61.8645%" y="1327.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.01%)</title><rect x="61.6264%" y="1285" width="0.0120%" height="15" fill="rgb(235,138,41)" fg:x="10291" fg:w="2"/><text x="61.8764%" y="1295.50"></text></g><g><title>veilid_core::routing_table::tasks::ping_validator::&lt;impl veilid_core::routing_table::RoutingTable&gt;::ping_validator_public_internet::{{closure}} (3 samples, 0.02%)</title><rect x="61.6264%" y="1317" width="0.0180%" height="15" fill="rgb(246,0,9)" fg:x="10291" fg:w="3"/><text x="61.8764%" y="1327.50"></text></g><g><title>veilid_core::routing_table::RoutingTable::get_low_level_port_info (3 samples, 0.02%)</title><rect x="61.6264%" y="1301" width="0.0180%" height="15" fill="rgb(210,74,4)" fg:x="10291" fg:w="3"/><text x="61.8764%" y="1311.50"></text></g><g><title>veilid_core::routing_table::RoutingTable::edit_routing_domain (2 samples, 0.01%)</title><rect x="61.6504%" y="1269" width="0.0120%" height="15" fill="rgb(250,60,41)" fg:x="10295" fg:w="2"/><text x="61.9004%" y="1279.50"></text></g><g><title>veilid_core::routing_table::tasks::relay_management::&lt;impl veilid_core::routing_table::RoutingTable&gt;::relay_management_task_routine::{{closure}} (3 samples, 0.02%)</title><rect x="61.6504%" y="1317" width="0.0180%" height="15" fill="rgb(220,115,12)" fg:x="10295" fg:w="3"/><text x="61.9004%" y="1327.50"></text></g><g><title>veilid_core::routing_table::tasks::relay_management::&lt;impl veilid_core::routing_table::RoutingTable&gt;::relay_management_task_routine::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="61.6504%" y="1301" width="0.0180%" height="15" fill="rgb(237,100,13)" fg:x="10295" fg:w="3"/><text x="61.9004%" y="1311.50"></text></g><g><title>veilid_core::routing_table::tasks::relay_management::&lt;impl veilid_core::routing_table::RoutingTable&gt;::relay_management_task_routine::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="61.6504%" y="1285" width="0.0180%" height="15" fill="rgb(213,55,26)" fg:x="10295" fg:w="3"/><text x="61.9004%" y="1295.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (5 samples, 0.03%)</title><rect x="61.6744%" y="1189" width="0.0299%" height="15" fill="rgb(216,17,4)" fg:x="10299" fg:w="5"/><text x="61.9244%" y="1199.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (5 samples, 0.03%)</title><rect x="61.6744%" y="1173" width="0.0299%" height="15" fill="rgb(220,153,47)" fg:x="10299" fg:w="5"/><text x="61.9244%" y="1183.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (5 samples, 0.03%)</title><rect x="61.6744%" y="1157" width="0.0299%" height="15" fill="rgb(215,131,9)" fg:x="10299" fg:w="5"/><text x="61.9244%" y="1167.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (4 samples, 0.02%)</title><rect x="61.7043%" y="1189" width="0.0240%" height="15" fill="rgb(233,46,42)" fg:x="10304" fg:w="4"/><text x="61.9543%" y="1199.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (4 samples, 0.02%)</title><rect x="61.7043%" y="1173" width="0.0240%" height="15" fill="rgb(226,86,7)" fg:x="10304" fg:w="4"/><text x="61.9543%" y="1183.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (4 samples, 0.02%)</title><rect x="61.7043%" y="1157" width="0.0240%" height="15" fill="rgb(239,226,21)" fg:x="10304" fg:w="4"/><text x="61.9543%" y="1167.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (9 samples, 0.05%)</title><rect x="61.7402%" y="1173" width="0.0539%" height="15" fill="rgb(244,137,22)" fg:x="10310" fg:w="9"/><text x="61.9902%" y="1183.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (9 samples, 0.05%)</title><rect x="61.7402%" y="1157" width="0.0539%" height="15" fill="rgb(211,139,35)" fg:x="10310" fg:w="9"/><text x="61.9902%" y="1167.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="61.7821%" y="1141" width="0.0120%" height="15" fill="rgb(214,62,50)" fg:x="10317" fg:w="2"/><text x="62.0321%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="61.7821%" y="1125" width="0.0120%" height="15" fill="rgb(212,113,44)" fg:x="10317" fg:w="2"/><text x="62.0321%" y="1135.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (20 samples, 0.12%)</title><rect x="61.7342%" y="1189" width="0.1198%" height="15" fill="rgb(226,150,43)" fg:x="10309" fg:w="20"/><text x="61.9842%" y="1199.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square2 (9 samples, 0.05%)</title><rect x="61.8001%" y="1173" width="0.0539%" height="15" fill="rgb(250,71,37)" fg:x="10320" fg:w="9"/><text x="62.0501%" y="1183.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="61.8420%" y="1157" width="0.0120%" height="15" fill="rgb(219,76,19)" fg:x="10327" fg:w="2"/><text x="62.0920%" y="1167.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="61.8420%" y="1141" width="0.0120%" height="15" fill="rgb(250,39,11)" fg:x="10327" fg:w="2"/><text x="62.0920%" y="1151.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (32 samples, 0.19%)</title><rect x="61.6684%" y="1221" width="0.1916%" height="15" fill="rgb(230,64,31)" fg:x="10298" fg:w="32"/><text x="61.9184%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (32 samples, 0.19%)</title><rect x="61.6684%" y="1205" width="0.1916%" height="15" fill="rgb(208,222,23)" fg:x="10298" fg:w="32"/><text x="61.9184%" y="1215.50"></text></g><g><title>veilid_core::routing_table::types::peer_info::PeerInfo::validate (34 samples, 0.20%)</title><rect x="61.6684%" y="1317" width="0.2036%" height="15" fill="rgb(227,125,18)" fg:x="10298" fg:w="34"/><text x="61.9184%" y="1327.50"></text></g><g><title>veilid_core::routing_table::types::signed_node_info::SignedNodeInfo::validate (34 samples, 0.20%)</title><rect x="61.6684%" y="1301" width="0.2036%" height="15" fill="rgb(234,210,9)" fg:x="10298" fg:w="34"/><text x="61.9184%" y="1311.50"></text></g><g><title>veilid_core::routing_table::types::signed_direct_node_info::SignedDirectNodeInfo::validate (34 samples, 0.20%)</title><rect x="61.6684%" y="1285" width="0.2036%" height="15" fill="rgb(217,127,24)" fg:x="10298" fg:w="34"/><text x="61.9184%" y="1295.50"></text></g><g><title>veilid_core::crypto::Crypto::verify_signatures (34 samples, 0.20%)</title><rect x="61.6684%" y="1269" width="0.2036%" height="15" fill="rgb(239,141,48)" fg:x="10298" fg:w="34"/><text x="61.9184%" y="1279.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::verify (34 samples, 0.20%)</title><rect x="61.6684%" y="1253" width="0.2036%" height="15" fill="rgb(227,109,8)" fg:x="10298" fg:w="34"/><text x="61.9184%" y="1263.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_prehashed (34 samples, 0.20%)</title><rect x="61.6684%" y="1237" width="0.2036%" height="15" fill="rgb(235,184,23)" fg:x="10298" fg:w="34"/><text x="61.9184%" y="1247.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::from_hash (2 samples, 0.01%)</title><rect x="61.8600%" y="1221" width="0.0120%" height="15" fill="rgb(227,226,48)" fg:x="10330" fg:w="2"/><text x="62.1100%" y="1231.50"></text></g><g><title>curve25519_dalek::scalar::Scalar::from_bytes_mod_order_wide (2 samples, 0.01%)</title><rect x="61.8600%" y="1205" width="0.0120%" height="15" fill="rgb(206,150,11)" fg:x="10330" fg:w="2"/><text x="62.1100%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::from_bytes_wide (2 samples, 0.01%)</title><rect x="61.8600%" y="1189" width="0.0120%" height="15" fill="rgb(254,2,33)" fg:x="10330" fg:w="2"/><text x="62.1100%" y="1199.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_mul (2 samples, 0.01%)</title><rect x="61.8600%" y="1173" width="0.0120%" height="15" fill="rgb(243,160,20)" fg:x="10330" fg:w="2"/><text x="62.1100%" y="1183.50"></text></g><g><title>veilid_core::routing_table::types::peer_info::PeerInfo::validate_vec (3 samples, 0.02%)</title><rect x="61.8720%" y="1317" width="0.0180%" height="15" fill="rgb(218,208,30)" fg:x="10332" fg:w="3"/><text x="62.1220%" y="1327.50"></text></g><g><title>veilid_core::routing_table::types::peer_info::PeerInfo::validate (3 samples, 0.02%)</title><rect x="61.8720%" y="1301" width="0.0180%" height="15" fill="rgb(224,120,49)" fg:x="10332" fg:w="3"/><text x="62.1220%" y="1311.50"></text></g><g><title>veilid_core::routing_table::types::signed_node_info::SignedNodeInfo::validate (3 samples, 0.02%)</title><rect x="61.8720%" y="1285" width="0.0180%" height="15" fill="rgb(246,12,2)" fg:x="10332" fg:w="3"/><text x="62.1220%" y="1295.50"></text></g><g><title>veilid_core::routing_table::types::signed_direct_node_info::SignedDirectNodeInfo::validate (3 samples, 0.02%)</title><rect x="61.8720%" y="1269" width="0.0180%" height="15" fill="rgb(236,117,3)" fg:x="10332" fg:w="3"/><text x="62.1220%" y="1279.50"></text></g><g><title>veilid_core::crypto::Crypto::verify_signatures (3 samples, 0.02%)</title><rect x="61.8720%" y="1253" width="0.0180%" height="15" fill="rgb(216,128,52)" fg:x="10332" fg:w="3"/><text x="62.1220%" y="1263.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::verify (3 samples, 0.02%)</title><rect x="61.8720%" y="1237" width="0.0180%" height="15" fill="rgb(246,145,19)" fg:x="10332" fg:w="3"/><text x="62.1220%" y="1247.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_prehashed (3 samples, 0.02%)</title><rect x="61.8720%" y="1221" width="0.0180%" height="15" fill="rgb(222,11,46)" fg:x="10332" fg:w="3"/><text x="62.1220%" y="1231.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (3 samples, 0.02%)</title><rect x="61.8720%" y="1205" width="0.0180%" height="15" fill="rgb(245,82,36)" fg:x="10332" fg:w="3"/><text x="62.1220%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (3 samples, 0.02%)</title><rect x="61.8720%" y="1189" width="0.0180%" height="15" fill="rgb(250,73,51)" fg:x="10332" fg:w="3"/><text x="62.1220%" y="1199.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (2 samples, 0.01%)</title><rect x="61.8780%" y="1173" width="0.0120%" height="15" fill="rgb(221,189,23)" fg:x="10333" fg:w="2"/><text x="62.1280%" y="1183.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="61.8780%" y="1157" width="0.0120%" height="15" fill="rgb(210,33,7)" fg:x="10333" fg:w="2"/><text x="62.1280%" y="1167.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_extended (8 samples, 0.05%)</title><rect x="61.8899%" y="1221" width="0.0479%" height="15" fill="rgb(210,107,22)" fg:x="10335" fg:w="8"/><text x="62.1399%" y="1231.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (8 samples, 0.05%)</title><rect x="61.8899%" y="1205" width="0.0479%" height="15" fill="rgb(222,116,37)" fg:x="10335" fg:w="8"/><text x="62.1399%" y="1215.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul::m (5 samples, 0.03%)</title><rect x="62.0935%" y="1189" width="0.0299%" height="15" fill="rgb(254,17,48)" fg:x="10369" fg:w="5"/><text x="62.3435%" y="1199.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::CompletedPoint::to_projective (35 samples, 0.21%)</title><rect x="61.9378%" y="1221" width="0.2096%" height="15" fill="rgb(224,36,32)" fg:x="10343" fg:w="35"/><text x="62.1878%" y="1231.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (35 samples, 0.21%)</title><rect x="61.9378%" y="1205" width="0.2096%" height="15" fill="rgb(232,90,46)" fg:x="10343" fg:w="35"/><text x="62.1878%" y="1215.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="62.1295%" y="1189" width="0.0180%" height="15" fill="rgb(241,66,40)" fg:x="10375" fg:w="3"/><text x="62.3795%" y="1199.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square2 (6 samples, 0.04%)</title><rect x="62.1474%" y="1205" width="0.0359%" height="15" fill="rgb(249,184,29)" fg:x="10378" fg:w="6"/><text x="62.3974%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (6 samples, 0.04%)</title><rect x="62.1474%" y="1189" width="0.0359%" height="15" fill="rgb(231,181,1)" fg:x="10378" fg:w="6"/><text x="62.3974%" y="1199.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="62.1654%" y="1173" width="0.0180%" height="15" fill="rgb(224,94,2)" fg:x="10381" fg:w="3"/><text x="62.4154%" y="1183.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="62.2912%" y="1173" width="0.0180%" height="15" fill="rgb(229,170,15)" fg:x="10402" fg:w="3"/><text x="62.5412%" y="1183.50"></text></g><g><title>veilid_core::routing_table::types::signed_direct_node_info::SignedDirectNodeInfo::validate (73 samples, 0.44%)</title><rect x="61.8899%" y="1317" width="0.4372%" height="15" fill="rgb(240,127,35)" fg:x="10335" fg:w="73"/><text x="62.1399%" y="1327.50"></text></g><g><title>veilid_core::crypto::Crypto::verify_signatures (73 samples, 0.44%)</title><rect x="61.8899%" y="1301" width="0.4372%" height="15" fill="rgb(248,196,34)" fg:x="10335" fg:w="73"/><text x="62.1399%" y="1311.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::verify (73 samples, 0.44%)</title><rect x="61.8899%" y="1285" width="0.4372%" height="15" fill="rgb(236,137,7)" fg:x="10335" fg:w="73"/><text x="62.1399%" y="1295.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_prehashed (73 samples, 0.44%)</title><rect x="61.8899%" y="1269" width="0.4372%" height="15" fill="rgb(235,127,16)" fg:x="10335" fg:w="73"/><text x="62.1399%" y="1279.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (73 samples, 0.44%)</title><rect x="61.8899%" y="1253" width="0.4372%" height="15" fill="rgb(250,192,54)" fg:x="10335" fg:w="73"/><text x="62.1399%" y="1263.50"></text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (73 samples, 0.44%)</title><rect x="61.8899%" y="1237" width="0.4372%" height="15" fill="rgb(218,98,20)" fg:x="10335" fg:w="73"/><text x="62.1399%" y="1247.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (30 samples, 0.18%)</title><rect x="62.1474%" y="1221" width="0.1797%" height="15" fill="rgb(230,176,47)" fg:x="10378" fg:w="30"/><text x="62.3974%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (24 samples, 0.14%)</title><rect x="62.1834%" y="1205" width="0.1437%" height="15" fill="rgb(244,2,33)" fg:x="10384" fg:w="24"/><text x="62.4334%" y="1215.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (24 samples, 0.14%)</title><rect x="62.1834%" y="1189" width="0.1437%" height="15" fill="rgb(231,100,17)" fg:x="10384" fg:w="24"/><text x="62.4334%" y="1199.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (3 samples, 0.02%)</title><rect x="62.3091%" y="1173" width="0.0180%" height="15" fill="rgb(245,23,12)" fg:x="10405" fg:w="3"/><text x="62.5591%" y="1183.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (2 samples, 0.01%)</title><rect x="62.3331%" y="1205" width="0.0120%" height="15" fill="rgb(249,55,22)" fg:x="10409" fg:w="2"/><text x="62.5831%" y="1215.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add (2 samples, 0.01%)</title><rect x="62.3451%" y="1189" width="0.0120%" height="15" fill="rgb(207,134,9)" fg:x="10411" fg:w="2"/><text x="62.5951%" y="1199.50"></text></g><g><title>&lt;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::AddAssign&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::add_assign (2 samples, 0.01%)</title><rect x="62.3451%" y="1173" width="0.0120%" height="15" fill="rgb(218,134,0)" fg:x="10411" fg:w="2"/><text x="62.5951%" y="1183.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="62.3451%" y="1157" width="0.0120%" height="15" fill="rgb(213,212,33)" fg:x="10411" fg:w="2"/><text x="62.5951%" y="1167.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="62.3451%" y="1141" width="0.0120%" height="15" fill="rgb(252,106,18)" fg:x="10411" fg:w="2"/><text x="62.5951%" y="1151.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="62.3451%" y="1125" width="0.0120%" height="15" fill="rgb(208,126,42)" fg:x="10411" fg:w="2"/><text x="62.5951%" y="1135.50"></text></g><g><title>veilid_core::routing_table::types::signed_node_info::SignedNodeInfo::validate (10 samples, 0.06%)</title><rect x="62.3271%" y="1317" width="0.0599%" height="15" fill="rgb(246,175,29)" fg:x="10408" fg:w="10"/><text x="62.5771%" y="1327.50"></text></g><g><title>veilid_core::routing_table::types::signed_direct_node_info::SignedDirectNodeInfo::validate (10 samples, 0.06%)</title><rect x="62.3271%" y="1301" width="0.0599%" height="15" fill="rgb(215,13,50)" fg:x="10408" fg:w="10"/><text x="62.5771%" y="1311.50"></text></g><g><title>veilid_core::crypto::Crypto::verify_signatures (10 samples, 0.06%)</title><rect x="62.3271%" y="1285" width="0.0599%" height="15" fill="rgb(216,172,15)" fg:x="10408" fg:w="10"/><text x="62.5771%" y="1295.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::verify (10 samples, 0.06%)</title><rect x="62.3271%" y="1269" width="0.0599%" height="15" fill="rgb(212,103,13)" fg:x="10408" fg:w="10"/><text x="62.5771%" y="1279.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_prehashed (10 samples, 0.06%)</title><rect x="62.3271%" y="1253" width="0.0599%" height="15" fill="rgb(231,171,36)" fg:x="10408" fg:w="10"/><text x="62.5771%" y="1263.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (10 samples, 0.06%)</title><rect x="62.3271%" y="1237" width="0.0599%" height="15" fill="rgb(250,123,20)" fg:x="10408" fg:w="10"/><text x="62.5771%" y="1247.50"></text></g><g><title>curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (10 samples, 0.06%)</title><rect x="62.3271%" y="1221" width="0.0599%" height="15" fill="rgb(212,53,50)" fg:x="10408" fg:w="10"/><text x="62.5771%" y="1231.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (7 samples, 0.04%)</title><rect x="62.3451%" y="1205" width="0.0419%" height="15" fill="rgb(243,54,12)" fg:x="10411" fg:w="7"/><text x="62.5951%" y="1215.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (5 samples, 0.03%)</title><rect x="62.3570%" y="1189" width="0.0299%" height="15" fill="rgb(234,101,34)" fg:x="10413" fg:w="5"/><text x="62.6070%" y="1199.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (3 samples, 0.02%)</title><rect x="62.3690%" y="1173" width="0.0180%" height="15" fill="rgb(254,67,22)" fg:x="10415" fg:w="3"/><text x="62.6190%" y="1183.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::answer::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="62.3870%" y="1317" width="0.0180%" height="15" fill="rgb(250,35,47)" fg:x="10418" fg:w="3"/><text x="62.6370%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::render_operation (2 samples, 0.01%)</title><rect x="62.3930%" y="1301" width="0.0120%" height="15" fill="rgb(226,126,38)" fg:x="10419" fg:w="2"/><text x="62.6430%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::answer::{{closure}} (2 samples, 0.01%)</title><rect x="62.4109%" y="1317" width="0.0120%" height="15" fill="rgb(216,138,53)" fg:x="10422" fg:w="2"/><text x="62.6609%" y="1327.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (3 samples, 0.02%)</title><rect x="62.4289%" y="1077" width="0.0180%" height="15" fill="rgb(246,199,43)" fg:x="10425" fg:w="3"/><text x="62.6789%" y="1087.50"></text></g><g><title>ed25519_dalek::public::PublicKey::from_bytes (13 samples, 0.08%)</title><rect x="62.4289%" y="1109" width="0.0778%" height="15" fill="rgb(232,125,11)" fg:x="10425" fg:w="13"/><text x="62.6789%" y="1119.50"></text></g><g><title>curve25519_dalek::edwards::CompressedEdwardsY::decompress (13 samples, 0.08%)</title><rect x="62.4289%" y="1093" width="0.0778%" height="15" fill="rgb(218,219,45)" fg:x="10425" fg:w="13"/><text x="62.6789%" y="1103.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (9 samples, 0.05%)</title><rect x="62.4528%" y="1077" width="0.0539%" height="15" fill="rgb(216,102,54)" fg:x="10429" fg:w="9"/><text x="62.7028%" y="1087.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow_p58 (8 samples, 0.05%)</title><rect x="62.4588%" y="1061" width="0.0479%" height="15" fill="rgb(250,228,7)" fg:x="10430" fg:w="8"/><text x="62.7088%" y="1071.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (7 samples, 0.04%)</title><rect x="62.4648%" y="1045" width="0.0419%" height="15" fill="rgb(226,125,25)" fg:x="10431" fg:w="7"/><text x="62.7148%" y="1055.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (7 samples, 0.04%)</title><rect x="62.4648%" y="1029" width="0.0419%" height="15" fill="rgb(224,165,27)" fg:x="10431" fg:w="7"/><text x="62.7148%" y="1039.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k::m (2 samples, 0.01%)</title><rect x="62.4948%" y="1013" width="0.0120%" height="15" fill="rgb(233,86,3)" fg:x="10436" fg:w="2"/><text x="62.7448%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="62.5127%" y="1013" width="0.0120%" height="15" fill="rgb(228,116,20)" fg:x="10439" fg:w="2"/><text x="62.7627%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="62.5127%" y="997" width="0.0120%" height="15" fill="rgb(209,192,17)" fg:x="10439" fg:w="2"/><text x="62.7627%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="62.5127%" y="981" width="0.0120%" height="15" fill="rgb(224,88,34)" fg:x="10439" fg:w="2"/><text x="62.7627%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.01%)</title><rect x="62.5127%" y="965" width="0.0120%" height="15" fill="rgb(233,38,6)" fg:x="10439" fg:w="2"/><text x="62.7627%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.01%)</title><rect x="62.5127%" y="949" width="0.0120%" height="15" fill="rgb(212,59,30)" fg:x="10439" fg:w="2"/><text x="62.7627%" y="959.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.01%)</title><rect x="62.5127%" y="933" width="0.0120%" height="15" fill="rgb(213,80,3)" fg:x="10439" fg:w="2"/><text x="62.7627%" y="943.50"></text></g><g><title>&lt;sha2::sha512::Sha512 as core::default::Default&gt;::default (3 samples, 0.02%)</title><rect x="62.5127%" y="1093" width="0.0180%" height="15" fill="rgb(251,178,7)" fg:x="10439" fg:w="3"/><text x="62.7627%" y="1103.50"></text></g><g><title>sha2::sha512::Engine512::new (3 samples, 0.02%)</title><rect x="62.5127%" y="1077" width="0.0180%" height="15" fill="rgb(213,154,26)" fg:x="10439" fg:w="3"/><text x="62.7627%" y="1087.50"></text></g><g><title>&lt;block_buffer::BlockBuffer&lt;BlockSize&gt; as core::default::Default&gt;::default (3 samples, 0.02%)</title><rect x="62.5127%" y="1061" width="0.0180%" height="15" fill="rgb(238,165,49)" fg:x="10439" fg:w="3"/><text x="62.7627%" y="1071.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.02%)</title><rect x="62.5127%" y="1045" width="0.0180%" height="15" fill="rgb(248,91,46)" fg:x="10439" fg:w="3"/><text x="62.7627%" y="1055.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.02%)</title><rect x="62.5127%" y="1029" width="0.0180%" height="15" fill="rgb(244,21,52)" fg:x="10439" fg:w="3"/><text x="62.7627%" y="1039.50"></text></g><g><title>veilid_core::crypto::Crypto::verify_signatures (20 samples, 0.12%)</title><rect x="62.4229%" y="1141" width="0.1198%" height="15" fill="rgb(247,122,20)" fg:x="10424" fg:w="20"/><text x="62.6729%" y="1151.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::verify (20 samples, 0.12%)</title><rect x="62.4229%" y="1125" width="0.1198%" height="15" fill="rgb(218,27,9)" fg:x="10424" fg:w="20"/><text x="62.6729%" y="1135.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_prehashed (6 samples, 0.04%)</title><rect x="62.5067%" y="1109" width="0.0359%" height="15" fill="rgb(246,7,6)" fg:x="10438" fg:w="6"/><text x="62.7567%" y="1119.50"></text></g><g><title>&lt;veilid_core::crypto::blake3digest512::Blake3Digest512 as digest::digest::Digest&gt;::finalize (2 samples, 0.01%)</title><rect x="62.5307%" y="1093" width="0.0120%" height="15" fill="rgb(227,135,54)" fg:x="10442" fg:w="2"/><text x="62.7807%" y="1103.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::validate_rpc_operation (21 samples, 0.13%)</title><rect x="62.4229%" y="1301" width="0.1258%" height="15" fill="rgb(247,14,11)" fg:x="10424" fg:w="21"/><text x="62.6729%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation::RPCOperation::validate (21 samples, 0.13%)</title><rect x="62.4229%" y="1285" width="0.1258%" height="15" fill="rgb(206,149,34)" fg:x="10424" fg:w="21"/><text x="62.6729%" y="1295.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation::RPCOperationKind::validate (21 samples, 0.13%)</title><rect x="62.4229%" y="1269" width="0.1258%" height="15" fill="rgb(227,228,4)" fg:x="10424" fg:w="21"/><text x="62.6729%" y="1279.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::answer::RPCAnswer::validate (21 samples, 0.13%)</title><rect x="62.4229%" y="1253" width="0.1258%" height="15" fill="rgb(238,218,28)" fg:x="10424" fg:w="21"/><text x="62.6729%" y="1263.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::answer::RPCAnswerDetail::validate (21 samples, 0.13%)</title><rect x="62.4229%" y="1237" width="0.1258%" height="15" fill="rgb(252,86,40)" fg:x="10424" fg:w="21"/><text x="62.6729%" y="1247.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation_find_node::RPCOperationFindNodeA::validate (21 samples, 0.13%)</title><rect x="62.4229%" y="1221" width="0.1258%" height="15" fill="rgb(251,225,11)" fg:x="10424" fg:w="21"/><text x="62.6729%" y="1231.50"></text></g><g><title>veilid_core::routing_table::types::peer_info::PeerInfo::validate_vec (21 samples, 0.13%)</title><rect x="62.4229%" y="1205" width="0.1258%" height="15" fill="rgb(206,46,49)" fg:x="10424" fg:w="21"/><text x="62.6729%" y="1215.50"></text></g><g><title>veilid_core::routing_table::types::peer_info::PeerInfo::validate (21 samples, 0.13%)</title><rect x="62.4229%" y="1189" width="0.1258%" height="15" fill="rgb(245,128,24)" fg:x="10424" fg:w="21"/><text x="62.6729%" y="1199.50"></text></g><g><title>veilid_core::routing_table::types::signed_node_info::SignedNodeInfo::validate (21 samples, 0.13%)</title><rect x="62.4229%" y="1173" width="0.1258%" height="15" fill="rgb(219,177,34)" fg:x="10424" fg:w="21"/><text x="62.6729%" y="1183.50"></text></g><g><title>veilid_core::routing_table::types::signed_direct_node_info::SignedDirectNodeInfo::validate (21 samples, 0.13%)</title><rect x="62.4229%" y="1157" width="0.1258%" height="15" fill="rgb(218,60,48)" fg:x="10424" fg:w="21"/><text x="62.6729%" y="1167.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::decode_rpc_operation (22 samples, 0.13%)</title><rect x="62.4229%" y="1317" width="0.1317%" height="15" fill="rgb(221,11,5)" fg:x="10424" fg:w="22"/><text x="62.6729%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::process_rpc_message::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="62.5606%" y="1317" width="0.0120%" height="15" fill="rgb(220,148,13)" fg:x="10447" fg:w="2"/><text x="62.8106%" y="1327.50"></text></g><g><title>capnp::message::Reader&lt;S&gt;::get_root (3 samples, 0.02%)</title><rect x="62.5966%" y="1285" width="0.0180%" height="15" fill="rgb(210,16,3)" fg:x="10453" fg:w="3"/><text x="62.8466%" y="1295.50"></text></g><g><title>capnp::message::Reader&lt;S&gt;::get_root_internal (2 samples, 0.01%)</title><rect x="62.6026%" y="1269" width="0.0120%" height="15" fill="rgb(236,80,2)" fg:x="10454" fg:w="2"/><text x="62.8526%" y="1279.50"></text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (6 samples, 0.04%)</title><rect x="62.6924%" y="1157" width="0.0359%" height="15" fill="rgb(239,129,19)" fg:x="10469" fg:w="6"/><text x="62.9424%" y="1167.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.02%)</title><rect x="62.7642%" y="1125" width="0.0180%" height="15" fill="rgb(220,106,35)" fg:x="10481" fg:w="3"/><text x="63.0142%" y="1135.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.01%)</title><rect x="62.7702%" y="1109" width="0.0120%" height="15" fill="rgb(252,139,45)" fg:x="10482" fg:w="2"/><text x="63.0202%" y="1119.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (2 samples, 0.01%)</title><rect x="62.7822%" y="1125" width="0.0120%" height="15" fill="rgb(229,8,36)" fg:x="10484" fg:w="2"/><text x="63.0322%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.01%)</title><rect x="62.7942%" y="1125" width="0.0120%" height="15" fill="rgb(230,126,33)" fg:x="10486" fg:w="2"/><text x="63.0442%" y="1135.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="62.8181%" y="1109" width="0.0180%" height="15" fill="rgb(239,140,21)" fg:x="10490" fg:w="3"/><text x="63.0681%" y="1119.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (18 samples, 0.11%)</title><rect x="62.7343%" y="1157" width="0.1078%" height="15" fill="rgb(254,104,9)" fg:x="10476" fg:w="18"/><text x="62.9843%" y="1167.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (14 samples, 0.08%)</title><rect x="62.7582%" y="1141" width="0.0838%" height="15" fill="rgb(239,52,14)" fg:x="10480" fg:w="14"/><text x="63.0082%" y="1151.50"></text></g><g><title>core::mem::replace (6 samples, 0.04%)</title><rect x="62.8062%" y="1125" width="0.0359%" height="15" fill="rgb(208,227,44)" fg:x="10488" fg:w="6"/><text x="63.0562%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (37 samples, 0.22%)</title><rect x="62.6325%" y="1173" width="0.2216%" height="15" fill="rgb(246,18,19)" fg:x="10459" fg:w="37"/><text x="62.8825%" y="1183.50"></text></g><g><title>capnp::serialize::SegmentLengthsBuilder::into_owned_segments (40 samples, 0.24%)</title><rect x="62.6205%" y="1237" width="0.2395%" height="15" fill="rgb(235,228,25)" fg:x="10457" fg:w="40"/><text x="62.8705%" y="1247.50"></text></g><g><title>capnp::Word::allocate_zeroed_vec (39 samples, 0.23%)</title><rect x="62.6265%" y="1221" width="0.2335%" height="15" fill="rgb(240,156,20)" fg:x="10458" fg:w="39"/><text x="62.8765%" y="1231.50"></text></g><g><title>alloc::vec::from_elem (39 samples, 0.23%)</title><rect x="62.6265%" y="1205" width="0.2335%" height="15" fill="rgb(224,8,20)" fg:x="10458" fg:w="39"/><text x="62.8765%" y="1215.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (39 samples, 0.23%)</title><rect x="62.6265%" y="1189" width="0.2335%" height="15" fill="rgb(214,12,52)" fg:x="10458" fg:w="39"/><text x="62.8765%" y="1199.50"></text></g><g><title>capnp::serialize::read_segment_table (3 samples, 0.02%)</title><rect x="62.8601%" y="1237" width="0.0180%" height="15" fill="rgb(211,220,47)" fg:x="10497" fg:w="3"/><text x="63.1101%" y="1247.50"></text></g><g><title>&lt;i32 as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.02%)</title><rect x="62.9499%" y="1157" width="0.0180%" height="15" fill="rgb(250,173,5)" fg:x="10512" fg:w="3"/><text x="63.1999%" y="1167.50"></text></g><g><title>core::num::&lt;impl i32&gt;::unchecked_add (2 samples, 0.01%)</title><rect x="62.9559%" y="1141" width="0.0120%" height="15" fill="rgb(250,125,52)" fg:x="10513" fg:w="2"/><text x="63.2059%" y="1151.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="62.9678%" y="1141" width="0.0180%" height="15" fill="rgb(209,133,18)" fg:x="10515" fg:w="3"/><text x="63.2178%" y="1151.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11 samples, 0.07%)</title><rect x="62.9259%" y="1189" width="0.0659%" height="15" fill="rgb(216,173,22)" fg:x="10508" fg:w="11"/><text x="63.1759%" y="1199.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (11 samples, 0.07%)</title><rect x="62.9259%" y="1173" width="0.0659%" height="15" fill="rgb(205,3,22)" fg:x="10508" fg:w="11"/><text x="63.1759%" y="1183.50"></text></g><g><title>core::mem::replace (4 samples, 0.02%)</title><rect x="62.9678%" y="1157" width="0.0240%" height="15" fill="rgb(248,22,20)" fg:x="10515" fg:w="4"/><text x="63.2178%" y="1167.50"></text></g><g><title>veilid_core::rpc_processor::RPCMessageData::get_reader (64 samples, 0.38%)</title><rect x="62.6145%" y="1285" width="0.3833%" height="15" fill="rgb(233,6,29)" fg:x="10456" fg:w="64"/><text x="62.8645%" y="1295.50"></text></g><g><title>capnp::serialize_packed::read_message (64 samples, 0.38%)</title><rect x="62.6145%" y="1269" width="0.3833%" height="15" fill="rgb(240,22,54)" fg:x="10456" fg:w="64"/><text x="62.8645%" y="1279.50"></text></g><g><title>capnp::serialize::read_message (64 samples, 0.38%)</title><rect x="62.6145%" y="1253" width="0.3833%" height="15" fill="rgb(231,133,32)" fg:x="10456" fg:w="64"/><text x="62.8645%" y="1263.50"></text></g><g><title>capnp::serialize::read_segments (20 samples, 0.12%)</title><rect x="62.8780%" y="1237" width="0.1198%" height="15" fill="rgb(248,193,4)" fg:x="10500" fg:w="20"/><text x="63.1280%" y="1247.50"></text></g><g><title>capnp::io::Read::read_exact (20 samples, 0.12%)</title><rect x="62.8780%" y="1221" width="0.1198%" height="15" fill="rgb(211,178,46)" fg:x="10500" fg:w="20"/><text x="63.1280%" y="1231.50"></text></g><g><title>&lt;capnp::serialize_packed::PackedRead&lt;R&gt; as capnp::io::Read&gt;::read (20 samples, 0.12%)</title><rect x="62.8780%" y="1205" width="0.1198%" height="15" fill="rgb(224,5,42)" fg:x="10500" fg:w="20"/><text x="63.1280%" y="1215.50"></text></g><g><title>veilid_core::rpc_processor::builder_to_vec (2 samples, 0.01%)</title><rect x="63.0157%" y="1109" width="0.0120%" height="15" fill="rgb(239,176,25)" fg:x="10523" fg:w="2"/><text x="63.2657%" y="1119.50"></text></g><g><title>capnp::serialize_packed::write_message (2 samples, 0.01%)</title><rect x="63.0157%" y="1093" width="0.0120%" height="15" fill="rgb(245,187,50)" fg:x="10523" fg:w="2"/><text x="63.2657%" y="1103.50"></text></g><g><title>capnp::serialize::write_message (2 samples, 0.01%)</title><rect x="63.0157%" y="1077" width="0.0120%" height="15" fill="rgb(248,24,15)" fg:x="10523" fg:w="2"/><text x="63.2657%" y="1087.50"></text></g><g><title>capnp::serialize::write_segments (2 samples, 0.01%)</title><rect x="63.0157%" y="1061" width="0.0120%" height="15" fill="rgb(205,166,13)" fg:x="10523" fg:w="2"/><text x="63.2657%" y="1071.50"></text></g><g><title>&lt;capnp::serialize_packed::PackedWrite&lt;W&gt; as capnp::io::Write&gt;::write_all (2 samples, 0.01%)</title><rect x="63.0157%" y="1045" width="0.0120%" height="15" fill="rgb(208,114,23)" fg:x="10523" fg:w="2"/><text x="63.2657%" y="1055.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::process_rpc_message::{{closure}}::{{closure}}::{{closure}} (79 samples, 0.47%)</title><rect x="62.5726%" y="1317" width="0.4731%" height="15" fill="rgb(239,127,18)" fg:x="10449" fg:w="79"/><text x="62.8226%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::decode_rpc_operation (76 samples, 0.46%)</title><rect x="62.5906%" y="1301" width="0.4551%" height="15" fill="rgb(219,154,28)" fg:x="10452" fg:w="76"/><text x="62.8406%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::validate_rpc_operation (8 samples, 0.05%)</title><rect x="62.9978%" y="1285" width="0.0479%" height="15" fill="rgb(225,157,23)" fg:x="10520" fg:w="8"/><text x="63.2478%" y="1295.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation::RPCOperation::validate (7 samples, 0.04%)</title><rect x="63.0038%" y="1269" width="0.0419%" height="15" fill="rgb(219,8,6)" fg:x="10521" fg:w="7"/><text x="63.2538%" y="1279.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation::RPCOperationKind::validate (7 samples, 0.04%)</title><rect x="63.0038%" y="1253" width="0.0419%" height="15" fill="rgb(212,47,6)" fg:x="10521" fg:w="7"/><text x="63.2538%" y="1263.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::answer::RPCAnswer::validate (7 samples, 0.04%)</title><rect x="63.0038%" y="1237" width="0.0419%" height="15" fill="rgb(224,190,4)" fg:x="10521" fg:w="7"/><text x="63.2538%" y="1247.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::answer::RPCAnswerDetail::validate (7 samples, 0.04%)</title><rect x="63.0038%" y="1221" width="0.0419%" height="15" fill="rgb(239,183,29)" fg:x="10521" fg:w="7"/><text x="63.2538%" y="1231.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation_find_node::RPCOperationFindNodeA::validate (7 samples, 0.04%)</title><rect x="63.0038%" y="1205" width="0.0419%" height="15" fill="rgb(213,57,7)" fg:x="10521" fg:w="7"/><text x="63.2538%" y="1215.50"></text></g><g><title>veilid_core::routing_table::types::peer_info::PeerInfo::validate_vec (7 samples, 0.04%)</title><rect x="63.0038%" y="1189" width="0.0419%" height="15" fill="rgb(216,148,1)" fg:x="10521" fg:w="7"/><text x="63.2538%" y="1199.50"></text></g><g><title>veilid_core::routing_table::types::peer_info::PeerInfo::validate (7 samples, 0.04%)</title><rect x="63.0038%" y="1173" width="0.0419%" height="15" fill="rgb(236,182,29)" fg:x="10521" fg:w="7"/><text x="63.2538%" y="1183.50"></text></g><g><title>veilid_core::routing_table::types::signed_node_info::SignedNodeInfo::validate (7 samples, 0.04%)</title><rect x="63.0038%" y="1157" width="0.0419%" height="15" fill="rgb(244,120,48)" fg:x="10521" fg:w="7"/><text x="63.2538%" y="1167.50"></text></g><g><title>veilid_core::routing_table::types::signed_direct_node_info::SignedDirectNodeInfo::validate (7 samples, 0.04%)</title><rect x="63.0038%" y="1141" width="0.0419%" height="15" fill="rgb(206,71,34)" fg:x="10521" fg:w="7"/><text x="63.2538%" y="1151.50"></text></g><g><title>veilid_core::routing_table::types::signed_direct_node_info::SignedDirectNodeInfo::make_signature_bytes (6 samples, 0.04%)</title><rect x="63.0098%" y="1125" width="0.0359%" height="15" fill="rgb(242,32,6)" fg:x="10522" fg:w="6"/><text x="63.2598%" y="1135.50"></text></g><g><title>veilid_core::rpc_processor::coders::node_info::encode_node_info (3 samples, 0.02%)</title><rect x="63.0277%" y="1109" width="0.0180%" height="15" fill="rgb(241,35,3)" fg:x="10525" fg:w="3"/><text x="63.2777%" y="1119.50"></text></g><g><title>veilid_core::rpc_processor::coders::dial_info_detail::encode_dial_info_detail (2 samples, 0.01%)</title><rect x="63.0337%" y="1093" width="0.0120%" height="15" fill="rgb(222,62,19)" fg:x="10526" fg:w="2"/><text x="63.2837%" y="1103.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::process_rpc_message::{{closure}}::{{closure}} (4 samples, 0.02%)</title><rect x="63.0457%" y="1317" width="0.0240%" height="15" fill="rgb(223,110,41)" fg:x="10528" fg:w="4"/><text x="63.2957%" y="1327.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (2 samples, 0.01%)</title><rect x="63.0696%" y="1301" width="0.0120%" height="15" fill="rgb(208,224,4)" fg:x="10532" fg:w="2"/><text x="63.3196%" y="1311.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="63.0696%" y="1285" width="0.0120%" height="15" fill="rgb(241,137,19)" fg:x="10532" fg:w="2"/><text x="63.3196%" y="1295.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::process_rpc_message::{{closure}} (3 samples, 0.02%)</title><rect x="63.0696%" y="1317" width="0.0180%" height="15" fill="rgb(244,24,17)" fg:x="10532" fg:w="3"/><text x="63.3196%" y="1327.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (2 samples, 0.01%)</title><rect x="63.0936%" y="1205" width="0.0120%" height="15" fill="rgb(245,178,49)" fg:x="10536" fg:w="2"/><text x="63.3436%" y="1215.50"></text></g><g><title>chacha20::xchacha::hchacha (2 samples, 0.01%)</title><rect x="63.0936%" y="1189" width="0.0120%" height="15" fill="rgb(219,160,38)" fg:x="10536" fg:w="2"/><text x="63.3436%" y="1199.50"></text></g><g><title>chacha20::xchacha::quarter_round (2 samples, 0.01%)</title><rect x="63.0936%" y="1173" width="0.0120%" height="15" fill="rgb(228,137,14)" fg:x="10536" fg:w="2"/><text x="63.3436%" y="1183.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::send_envelope::{{closure}} (3 samples, 0.02%)</title><rect x="63.0936%" y="1301" width="0.0180%" height="15" fill="rgb(237,134,11)" fg:x="10536" fg:w="3"/><text x="63.3436%" y="1311.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::send_envelope::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="63.0936%" y="1285" width="0.0180%" height="15" fill="rgb(211,126,44)" fg:x="10536" fg:w="3"/><text x="63.3436%" y="1295.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::send_envelope::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="63.0936%" y="1269" width="0.0180%" height="15" fill="rgb(226,171,33)" fg:x="10536" fg:w="3"/><text x="63.3436%" y="1279.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::apply_network_key (3 samples, 0.02%)</title><rect x="63.0936%" y="1253" width="0.0180%" height="15" fill="rgb(253,99,13)" fg:x="10536" fg:w="3"/><text x="63.3436%" y="1263.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_in_place_no_auth (3 samples, 0.02%)</title><rect x="63.0936%" y="1237" width="0.0180%" height="15" fill="rgb(244,48,7)" fg:x="10536" fg:w="3"/><text x="63.3436%" y="1247.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (3 samples, 0.02%)</title><rect x="63.0936%" y="1221" width="0.0180%" height="15" fill="rgb(244,217,54)" fg:x="10536" fg:w="3"/><text x="63.3436%" y="1231.50"></text></g><g><title>capnp::message::Builder&lt;A&gt;::init_root (2 samples, 0.01%)</title><rect x="63.1116%" y="1269" width="0.0120%" height="15" fill="rgb(224,15,18)" fg:x="10539" fg:w="2"/><text x="63.3616%" y="1279.50"></text></g><g><title>capnp::message::Builder&lt;A&gt;::get_root_internal (2 samples, 0.01%)</title><rect x="63.1116%" y="1253" width="0.0120%" height="15" fill="rgb(244,99,12)" fg:x="10539" fg:w="2"/><text x="63.3616%" y="1263.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::question::{{closure}}::{{closure}}::{{closure}} (6 samples, 0.04%)</title><rect x="63.0936%" y="1317" width="0.0359%" height="15" fill="rgb(233,226,8)" fg:x="10536" fg:w="6"/><text x="63.3436%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::render_operation (3 samples, 0.02%)</title><rect x="63.1116%" y="1301" width="0.0180%" height="15" fill="rgb(229,211,3)" fg:x="10539" fg:w="3"/><text x="63.3616%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::render_operation::{{closure}} (3 samples, 0.02%)</title><rect x="63.1116%" y="1285" width="0.0180%" height="15" fill="rgb(216,140,21)" fg:x="10539" fg:w="3"/><text x="63.3616%" y="1295.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.02%)</title><rect x="63.1355%" y="1301" width="0.0180%" height="15" fill="rgb(234,122,30)" fg:x="10543" fg:w="3"/><text x="63.3855%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::question::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="63.1415%" y="1285" width="0.0120%" height="15" fill="rgb(236,25,46)" fg:x="10544" fg:w="2"/><text x="63.3915%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;L&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (2 samples, 0.01%)</title><rect x="63.1535%" y="1189" width="0.0120%" height="15" fill="rgb(217,52,54)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn tracing_subscriber::layer::Layer&lt;S&gt;+core::marker::Send+core::marker::Sync&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (2 samples, 0.01%)</title><rect x="63.1535%" y="1173" width="0.0120%" height="15" fill="rgb(222,29,26)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (2 samples, 0.01%)</title><rect x="63.1535%" y="1157" width="0.0120%" height="15" fill="rgb(216,177,29)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="1167.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt;::did_enable (2 samples, 0.01%)</title><rect x="63.1535%" y="1141" width="0.0120%" height="15" fill="rgb(247,136,51)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.01%)</title><rect x="63.1535%" y="1125" width="0.0120%" height="15" fill="rgb(231,47,47)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="63.1535%" y="1109" width="0.0120%" height="15" fill="rgb(211,192,36)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="1119.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt;::did_enable::{{closure}} (2 samples, 0.01%)</title><rect x="63.1535%" y="1093" width="0.0120%" height="15" fill="rgb(229,156,32)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="1103.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FilterState::did_enable (2 samples, 0.01%)</title><rect x="63.1535%" y="1077" width="0.0120%" height="15" fill="rgb(248,213,20)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span::{{closure}} (2 samples, 0.01%)</title><rect x="63.1535%" y="1061" width="0.0120%" height="15" fill="rgb(217,64,7)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="1071.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (2 samples, 0.01%)</title><rect x="63.1535%" y="1045" width="0.0120%" height="15" fill="rgb(232,142,8)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="1055.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (2 samples, 0.01%)</title><rect x="63.1535%" y="1029" width="0.0120%" height="15" fill="rgb(224,92,44)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="1039.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (2 samples, 0.01%)</title><rect x="63.1535%" y="1013" width="0.0120%" height="15" fill="rgb(214,169,17)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="1023.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (2 samples, 0.01%)</title><rect x="63.1535%" y="997" width="0.0120%" height="15" fill="rgb(210,59,37)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="1007.50"></text></g><g><title>tracing_core::span::Attributes::record (2 samples, 0.01%)</title><rect x="63.1535%" y="981" width="0.0120%" height="15" fill="rgb(214,116,48)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="991.50"></text></g><g><title>tracing_core::field::ValueSet::record (2 samples, 0.01%)</title><rect x="63.1535%" y="965" width="0.0120%" height="15" fill="rgb(244,191,6)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="975.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (2 samples, 0.01%)</title><rect x="63.1535%" y="949" width="0.0120%" height="15" fill="rgb(241,50,52)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="959.50"></text></g><g><title>&lt;tracing_core::field::DebugValue&lt;T&gt; as tracing_core::field::Value&gt;::record (2 samples, 0.01%)</title><rect x="63.1535%" y="933" width="0.0120%" height="15" fill="rgb(236,75,39)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (2 samples, 0.01%)</title><rect x="63.1535%" y="917" width="0.0120%" height="15" fill="rgb(236,99,0)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="927.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (2 samples, 0.01%)</title><rect x="63.1535%" y="901" width="0.0120%" height="15" fill="rgb(207,202,15)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="911.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.01%)</title><rect x="63.1535%" y="885" width="0.0120%" height="15" fill="rgb(233,207,14)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="895.50"></text></g><g><title>core::fmt::write (2 samples, 0.01%)</title><rect x="63.1535%" y="869" width="0.0120%" height="15" fill="rgb(226,27,51)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="879.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.01%)</title><rect x="63.1535%" y="853" width="0.0120%" height="15" fill="rgb(206,104,42)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="863.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.01%)</title><rect x="63.1535%" y="837" width="0.0120%" height="15" fill="rgb(212,225,4)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="847.50"></text></g><g><title>&lt;veilid_core::rpc_processor::destination::Destination as core::fmt::Debug&gt;::fmt (2 samples, 0.01%)</title><rect x="63.1535%" y="821" width="0.0120%" height="15" fill="rgb(233,96,42)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="831.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (2 samples, 0.01%)</title><rect x="63.1535%" y="805" width="0.0120%" height="15" fill="rgb(229,21,32)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="815.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.01%)</title><rect x="63.1535%" y="789" width="0.0120%" height="15" fill="rgb(226,216,24)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.01%)</title><rect x="63.1535%" y="773" width="0.0120%" height="15" fill="rgb(221,163,17)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="783.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.01%)</title><rect x="63.1535%" y="757" width="0.0120%" height="15" fill="rgb(216,216,42)" fg:x="10546" fg:w="2"/><text x="63.4035%" y="767.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::question::{{closure}} (6 samples, 0.04%)</title><rect x="63.1355%" y="1317" width="0.0359%" height="15" fill="rgb(240,118,7)" fg:x="10543" fg:w="6"/><text x="63.3855%" y="1327.50"></text></g><g><title>tracing::span::Span::new (3 samples, 0.02%)</title><rect x="63.1535%" y="1301" width="0.0180%" height="15" fill="rgb(221,67,37)" fg:x="10546" fg:w="3"/><text x="63.4035%" y="1311.50"></text></g><g><title>tracing_core::dispatcher::get_default (3 samples, 0.02%)</title><rect x="63.1535%" y="1285" width="0.0180%" height="15" fill="rgb(241,32,44)" fg:x="10546" fg:w="3"/><text x="63.4035%" y="1295.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (3 samples, 0.02%)</title><rect x="63.1535%" y="1269" width="0.0180%" height="15" fill="rgb(235,204,43)" fg:x="10546" fg:w="3"/><text x="63.4035%" y="1279.50"></text></g><g><title>tracing::span::Span::new_with (3 samples, 0.02%)</title><rect x="63.1535%" y="1253" width="0.0180%" height="15" fill="rgb(213,116,10)" fg:x="10546" fg:w="3"/><text x="63.4035%" y="1263.50"></text></g><g><title>tracing::span::Span::make_with (3 samples, 0.02%)</title><rect x="63.1535%" y="1237" width="0.0180%" height="15" fill="rgb(239,15,48)" fg:x="10546" fg:w="3"/><text x="63.4035%" y="1247.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (3 samples, 0.02%)</title><rect x="63.1535%" y="1221" width="0.0180%" height="15" fill="rgb(207,123,36)" fg:x="10546" fg:w="3"/><text x="63.4035%" y="1231.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (3 samples, 0.02%)</title><rect x="63.1535%" y="1205" width="0.0180%" height="15" fill="rgb(209,103,30)" fg:x="10546" fg:w="3"/><text x="63.4035%" y="1215.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="63.1894%" y="1013" width="0.0120%" height="15" fill="rgb(238,100,19)" fg:x="10552" fg:w="2"/><text x="63.4394%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as aead::Buffer&gt;::extend_from_slice (5 samples, 0.03%)</title><rect x="63.1774%" y="1237" width="0.0299%" height="15" fill="rgb(244,30,14)" fg:x="10550" fg:w="5"/><text x="63.4274%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.03%)</title><rect x="63.1774%" y="1221" width="0.0299%" height="15" fill="rgb(249,174,6)" fg:x="10550" fg:w="5"/><text x="63.4274%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.03%)</title><rect x="63.1774%" y="1205" width="0.0299%" height="15" fill="rgb(235,213,41)" fg:x="10550" fg:w="5"/><text x="63.4274%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.03%)</title><rect x="63.1774%" y="1189" width="0.0299%" height="15" fill="rgb(213,118,6)" fg:x="10550" fg:w="5"/><text x="63.4274%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.03%)</title><rect x="63.1774%" y="1173" width="0.0299%" height="15" fill="rgb(235,44,51)" fg:x="10550" fg:w="5"/><text x="63.4274%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="63.1834%" y="1157" width="0.0240%" height="15" fill="rgb(217,9,53)" fg:x="10551" fg:w="4"/><text x="63.4334%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="63.1834%" y="1141" width="0.0240%" height="15" fill="rgb(237,172,34)" fg:x="10551" fg:w="4"/><text x="63.4334%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="63.1834%" y="1125" width="0.0240%" height="15" fill="rgb(206,206,11)" fg:x="10551" fg:w="4"/><text x="63.4334%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="63.1894%" y="1109" width="0.0180%" height="15" fill="rgb(214,149,29)" fg:x="10552" fg:w="3"/><text x="63.4394%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.02%)</title><rect x="63.1894%" y="1093" width="0.0180%" height="15" fill="rgb(208,123,3)" fg:x="10552" fg:w="3"/><text x="63.4394%" y="1103.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.02%)</title><rect x="63.1894%" y="1077" width="0.0180%" height="15" fill="rgb(229,126,4)" fg:x="10552" fg:w="3"/><text x="63.4394%" y="1087.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.02%)</title><rect x="63.1894%" y="1061" width="0.0180%" height="15" fill="rgb(222,92,36)" fg:x="10552" fg:w="3"/><text x="63.4394%" y="1071.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.02%)</title><rect x="63.1894%" y="1045" width="0.0180%" height="15" fill="rgb(216,39,41)" fg:x="10552" fg:w="3"/><text x="63.4394%" y="1055.50"></text></g><g><title>_int_realloc (3 samples, 0.02%)</title><rect x="63.1894%" y="1029" width="0.0180%" height="15" fill="rgb(253,127,28)" fg:x="10552" fg:w="3"/><text x="63.4394%" y="1039.50"></text></g><g><title>chacha20::xchacha::hchacha (3 samples, 0.02%)</title><rect x="63.2134%" y="1205" width="0.0180%" height="15" fill="rgb(249,152,51)" fg:x="10556" fg:w="3"/><text x="63.4634%" y="1215.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_le_bytes (2 samples, 0.01%)</title><rect x="63.2194%" y="1189" width="0.0120%" height="15" fill="rgb(209,123,42)" fg:x="10557" fg:w="2"/><text x="63.4694%" y="1199.50"></text></g><g><title>&lt;chacha20::xchacha::XChaCha&lt;R&gt; as cipher::common::NewCipher&gt;::new (6 samples, 0.04%)</title><rect x="63.2074%" y="1221" width="0.0359%" height="15" fill="rgb(241,118,22)" fg:x="10555" fg:w="6"/><text x="63.4574%" y="1231.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.01%)</title><rect x="63.2313%" y="1205" width="0.0120%" height="15" fill="rgb(208,25,7)" fg:x="10559" fg:w="2"/><text x="63.4813%" y="1215.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.01%)</title><rect x="63.2313%" y="1189" width="0.0120%" height="15" fill="rgb(243,144,39)" fg:x="10559" fg:w="2"/><text x="63.4813%" y="1199.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.08%)</title><rect x="63.2673%" y="1189" width="0.0838%" height="15" fill="rgb(250,50,5)" fg:x="10565" fg:w="14"/><text x="63.5173%" y="1199.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.08%)</title><rect x="63.2732%" y="1173" width="0.0778%" height="15" fill="rgb(207,67,11)" fg:x="10566" fg:w="13"/><text x="63.5232%" y="1183.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (6 samples, 0.04%)</title><rect x="63.3152%" y="1157" width="0.0359%" height="15" fill="rgb(245,204,40)" fg:x="10573" fg:w="6"/><text x="63.5652%" y="1167.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (4 samples, 0.02%)</title><rect x="63.3271%" y="1141" width="0.0240%" height="15" fill="rgb(238,228,24)" fg:x="10575" fg:w="4"/><text x="63.5771%" y="1151.50"></text></g><g><title>core::slice::raw::from_raw_parts (3 samples, 0.02%)</title><rect x="63.3331%" y="1125" width="0.0180%" height="15" fill="rgb(217,116,22)" fg:x="10576" fg:w="3"/><text x="63.5831%" y="1135.50"></text></g><g><title>core::ptr::slice_from_raw_parts (3 samples, 0.02%)</title><rect x="63.3331%" y="1109" width="0.0180%" height="15" fill="rgb(234,98,12)" fg:x="10576" fg:w="3"/><text x="63.5831%" y="1119.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.02%)</title><rect x="63.3331%" y="1093" width="0.0180%" height="15" fill="rgb(242,170,50)" fg:x="10576" fg:w="3"/><text x="63.5831%" y="1103.50"></text></g><g><title>poly1305::backend::autodetect::avx2_cpuid::InitToken::get (3 samples, 0.02%)</title><rect x="63.3571%" y="1157" width="0.0180%" height="15" fill="rgb(235,7,5)" fg:x="10580" fg:w="3"/><text x="63.6071%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (3 samples, 0.02%)</title><rect x="63.3571%" y="1141" width="0.0180%" height="15" fill="rgb(241,114,28)" fg:x="10580" fg:w="3"/><text x="63.6071%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="63.3571%" y="1125" width="0.0180%" height="15" fill="rgb(246,112,42)" fg:x="10580" fg:w="3"/><text x="63.6071%" y="1135.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update (5 samples, 0.03%)</title><rect x="63.3511%" y="1189" width="0.0299%" height="15" fill="rgb(248,228,14)" fg:x="10579" fg:w="5"/><text x="63.6011%" y="1199.50"></text></g><g><title>poly1305::backend::autodetect::State::compute_block (5 samples, 0.03%)</title><rect x="63.3511%" y="1173" width="0.0299%" height="15" fill="rgb(208,133,18)" fg:x="10579" fg:w="5"/><text x="63.6011%" y="1183.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (27 samples, 0.16%)</title><rect x="63.2493%" y="1221" width="0.1617%" height="15" fill="rgb(207,35,49)" fg:x="10562" fg:w="27"/><text x="63.4993%" y="1231.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (25 samples, 0.15%)</title><rect x="63.2613%" y="1205" width="0.1497%" height="15" fill="rgb(205,68,36)" fg:x="10564" fg:w="25"/><text x="63.5113%" y="1215.50"></text></g><g><title>generic_array::GenericArray&lt;T,N&gt;::from_slice (5 samples, 0.03%)</title><rect x="63.3810%" y="1189" width="0.0299%" height="15" fill="rgb(245,62,40)" fg:x="10584" fg:w="5"/><text x="63.6310%" y="1199.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.03%)</title><rect x="63.3810%" y="1173" width="0.0299%" height="15" fill="rgb(228,27,24)" fg:x="10584" fg:w="5"/><text x="63.6310%" y="1183.50"></text></g><g><title>&lt;&amp;generic_array::GenericArray&lt;T,N&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (5 samples, 0.03%)</title><rect x="63.3810%" y="1157" width="0.0299%" height="15" fill="rgb(253,19,12)" fg:x="10584" fg:w="5"/><text x="63.6310%" y="1167.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::encrypt_in_place_aead (41 samples, 0.25%)</title><rect x="63.1774%" y="1269" width="0.2455%" height="15" fill="rgb(232,28,20)" fg:x="10550" fg:w="41"/><text x="63.4274%" y="1279.50"></text></g><g><title>aead::AeadInPlace::encrypt_in_place (41 samples, 0.25%)</title><rect x="63.1774%" y="1253" width="0.2455%" height="15" fill="rgb(218,35,51)" fg:x="10550" fg:w="41"/><text x="63.4274%" y="1263.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (36 samples, 0.22%)</title><rect x="63.2074%" y="1237" width="0.2156%" height="15" fill="rgb(212,90,40)" fg:x="10555" fg:w="36"/><text x="63.4574%" y="1247.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::encrypt_aead (42 samples, 0.25%)</title><rect x="63.1774%" y="1285" width="0.2515%" height="15" fill="rgb(220,172,12)" fg:x="10550" fg:w="42"/><text x="63.4274%" y="1295.50"></text></g><g><title>capnp::message::Builder&lt;A&gt;::init_root (2 samples, 0.01%)</title><rect x="63.4289%" y="1285" width="0.0120%" height="15" fill="rgb(226,159,20)" fg:x="10592" fg:w="2"/><text x="63.6789%" y="1295.50"></text></g><g><title>capnp::any_pointer::Builder::init_as (2 samples, 0.01%)</title><rect x="63.4289%" y="1269" width="0.0120%" height="15" fill="rgb(234,205,16)" fg:x="10592" fg:w="2"/><text x="63.6789%" y="1279.50"></text></g><g><title>&lt;veilid_core::veilid_capnp::operation::Builder as capnp::traits::FromPointerBuilder&gt;::init_pointer (2 samples, 0.01%)</title><rect x="63.4289%" y="1253" width="0.0120%" height="15" fill="rgb(207,9,39)" fg:x="10592" fg:w="2"/><text x="63.6789%" y="1263.50"></text></g><g><title>capnp::private::layout::PointerBuilder::init_struct (2 samples, 0.01%)</title><rect x="63.4289%" y="1237" width="0.0120%" height="15" fill="rgb(249,143,15)" fg:x="10592" fg:w="2"/><text x="63.6789%" y="1247.50"></text></g><g><title>capnp::private::layout::wire_helpers::init_struct_pointer (2 samples, 0.01%)</title><rect x="63.4289%" y="1221" width="0.0120%" height="15" fill="rgb(253,133,29)" fg:x="10592" fg:w="2"/><text x="63.6789%" y="1231.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.01%)</title><rect x="63.4469%" y="1285" width="0.0120%" height="15" fill="rgb(221,187,0)" fg:x="10595" fg:w="2"/><text x="63.6969%" y="1295.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::get_sender_peer_info (3 samples, 0.02%)</title><rect x="63.4649%" y="1285" width="0.0180%" height="15" fill="rgb(205,204,26)" fg:x="10598" fg:w="3"/><text x="63.7149%" y="1295.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::get_sender_peer_info::{{closure}} (2 samples, 0.01%)</title><rect x="63.4709%" y="1269" width="0.0120%" height="15" fill="rgb(224,68,54)" fg:x="10599" fg:w="2"/><text x="63.7209%" y="1279.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.01%)</title><rect x="63.7942%" y="1205" width="0.0120%" height="15" fill="rgb(209,67,4)" fg:x="10653" fg:w="2"/><text x="64.0442%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="63.8182%" y="1125" width="0.0120%" height="15" fill="rgb(228,229,18)" fg:x="10657" fg:w="2"/><text x="64.0682%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="63.8182%" y="1109" width="0.0120%" height="15" fill="rgb(231,89,13)" fg:x="10657" fg:w="2"/><text x="64.0682%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="63.8182%" y="1093" width="0.0120%" height="15" fill="rgb(210,182,18)" fg:x="10657" fg:w="2"/><text x="64.0682%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="63.8182%" y="1077" width="0.0120%" height="15" fill="rgb(240,105,2)" fg:x="10657" fg:w="2"/><text x="64.0682%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="63.8122%" y="1157" width="0.0240%" height="15" fill="rgb(207,170,50)" fg:x="10656" fg:w="4"/><text x="64.0622%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.02%)</title><rect x="63.8122%" y="1141" width="0.0240%" height="15" fill="rgb(232,133,24)" fg:x="10656" fg:w="4"/><text x="64.0622%" y="1151.50"></text></g><g><title>capnp::io::no_std_impls::&lt;impl capnp::io::Write for &amp;mut W&gt;::write_all (6 samples, 0.04%)</title><rect x="63.8122%" y="1205" width="0.0359%" height="15" fill="rgb(235,166,27)" fg:x="10656" fg:w="6"/><text x="64.0622%" y="1215.50"></text></g><g><title>capnp::io::no_std_impls::&lt;impl capnp::io::Write for alloc::vec::Vec&lt;u8&gt;&gt;::write_all (6 samples, 0.04%)</title><rect x="63.8122%" y="1189" width="0.0359%" height="15" fill="rgb(209,19,13)" fg:x="10656" fg:w="6"/><text x="64.0622%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.04%)</title><rect x="63.8122%" y="1173" width="0.0359%" height="15" fill="rgb(226,79,39)" fg:x="10656" fg:w="6"/><text x="64.0622%" y="1183.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.01%)</title><rect x="63.8362%" y="1157" width="0.0120%" height="15" fill="rgb(222,163,10)" fg:x="10660" fg:w="2"/><text x="64.0862%" y="1167.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="63.8362%" y="1141" width="0.0120%" height="15" fill="rgb(214,44,19)" fg:x="10660" fg:w="2"/><text x="64.0862%" y="1151.50"></text></g><g><title>&lt;i32 as core::iter::range::Step&gt;::forward_unchecked (21 samples, 0.13%)</title><rect x="64.0996%" y="1173" width="0.1258%" height="15" fill="rgb(210,217,13)" fg:x="10704" fg:w="21"/><text x="64.3496%" y="1183.50"></text></g><g><title>core::num::&lt;impl i32&gt;::unchecked_add (11 samples, 0.07%)</title><rect x="64.1595%" y="1157" width="0.0659%" height="15" fill="rgb(237,61,54)" fg:x="10714" fg:w="11"/><text x="64.4095%" y="1167.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for i32&gt;::clone (12 samples, 0.07%)</title><rect x="64.2254%" y="1173" width="0.0719%" height="15" fill="rgb(226,184,24)" fg:x="10725" fg:w="12"/><text x="64.4754%" y="1183.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (13 samples, 0.08%)</title><rect x="64.2973%" y="1173" width="0.0778%" height="15" fill="rgb(223,226,4)" fg:x="10737" fg:w="13"/><text x="64.5473%" y="1183.50"></text></g><g><title>core::ptr::read (36 samples, 0.22%)</title><rect x="64.4410%" y="1157" width="0.2156%" height="15" fill="rgb(210,26,41)" fg:x="10761" fg:w="36"/><text x="64.6910%" y="1167.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (16 samples, 0.10%)</title><rect x="64.5608%" y="1141" width="0.0958%" height="15" fill="rgb(220,221,6)" fg:x="10781" fg:w="16"/><text x="64.8108%" y="1151.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (7 samples, 0.04%)</title><rect x="64.6146%" y="1125" width="0.0419%" height="15" fill="rgb(225,89,49)" fg:x="10790" fg:w="7"/><text x="64.8646%" y="1135.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (143 samples, 0.86%)</title><rect x="63.8481%" y="1205" width="0.8563%" height="15" fill="rgb(218,70,45)" fg:x="10662" fg:w="143"/><text x="64.0981%" y="1215.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (137 samples, 0.82%)</title><rect x="63.8841%" y="1189" width="0.8204%" height="15" fill="rgb(238,166,21)" fg:x="10668" fg:w="137"/><text x="64.1341%" y="1199.50"></text></g><g><title>core::mem::replace (55 samples, 0.33%)</title><rect x="64.3751%" y="1173" width="0.3294%" height="15" fill="rgb(224,141,44)" fg:x="10750" fg:w="55"/><text x="64.6251%" y="1183.50"></text></g><g><title>core::ptr::write (8 samples, 0.05%)</title><rect x="64.6566%" y="1157" width="0.0479%" height="15" fill="rgb(230,12,49)" fg:x="10797" fg:w="8"/><text x="64.9066%" y="1167.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.01%)</title><rect x="64.7045%" y="1205" width="0.0120%" height="15" fill="rgb(212,174,12)" fg:x="10805" fg:w="2"/><text x="64.9545%" y="1215.50"></text></g><g><title>veilid_core::rpc_processor::builder_to_vec (207 samples, 1.24%)</title><rect x="63.4828%" y="1285" width="1.2396%" height="15" fill="rgb(246,67,9)" fg:x="10601" fg:w="207"/><text x="63.7328%" y="1295.50"></text></g><g><title>capnp::serialize_packed::write_message (207 samples, 1.24%)</title><rect x="63.4828%" y="1269" width="1.2396%" height="15" fill="rgb(239,35,23)" fg:x="10601" fg:w="207"/><text x="63.7328%" y="1279.50"></text></g><g><title>capnp::serialize::write_message (207 samples, 1.24%)</title><rect x="63.4828%" y="1253" width="1.2396%" height="15" fill="rgb(211,167,0)" fg:x="10601" fg:w="207"/><text x="63.7328%" y="1263.50"></text></g><g><title>capnp::serialize::write_segments (206 samples, 1.23%)</title><rect x="63.4888%" y="1237" width="1.2336%" height="15" fill="rgb(225,119,45)" fg:x="10602" fg:w="206"/><text x="63.7388%" y="1247.50"></text></g><g><title>&lt;capnp::serialize_packed::PackedWrite&lt;W&gt; as capnp::io::Write&gt;::write_all (206 samples, 1.23%)</title><rect x="63.4888%" y="1221" width="1.2336%" height="15" fill="rgb(210,162,6)" fg:x="10602" fg:w="206"/><text x="63.7388%" y="1231.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation_route::RoutedOperation::encode (4 samples, 0.02%)</title><rect x="64.7224%" y="1205" width="0.0240%" height="15" fill="rgb(208,118,35)" fg:x="10808" fg:w="4"/><text x="64.9724%" y="1215.50"></text></g><g><title>veilid_core::veilid_capnp::routed_operation::Builder::set_data (2 samples, 0.01%)</title><rect x="64.7344%" y="1189" width="0.0120%" height="15" fill="rgb(239,4,53)" fg:x="10810" fg:w="2"/><text x="64.9844%" y="1199.50"></text></g><g><title>capnp::private::layout::PointerBuilder::set_data (2 samples, 0.01%)</title><rect x="64.7344%" y="1173" width="0.0120%" height="15" fill="rgb(213,130,21)" fg:x="10810" fg:w="2"/><text x="64.9844%" y="1183.50"></text></g><g><title>capnp::private::layout::wire_helpers::set_data_pointer (2 samples, 0.01%)</title><rect x="64.7344%" y="1157" width="0.0120%" height="15" fill="rgb(235,148,0)" fg:x="10810" fg:w="2"/><text x="64.9844%" y="1167.50"></text></g><g><title>capnp::private::layout::wire_helpers::init_data_pointer (2 samples, 0.01%)</title><rect x="64.7344%" y="1141" width="0.0120%" height="15" fill="rgb(244,224,18)" fg:x="10810" fg:w="2"/><text x="64.9844%" y="1151.50"></text></g><g><title>capnp::private::layout::wire_helpers::allocate (2 samples, 0.01%)</title><rect x="64.7344%" y="1125" width="0.0120%" height="15" fill="rgb(211,214,4)" fg:x="10810" fg:w="2"/><text x="64.9844%" y="1135.50"></text></g><g><title>&lt;capnp::private::arena::BuilderArenaImpl&lt;A&gt; as capnp::private::arena::BuilderArena&gt;::allocate_anywhere (2 samples, 0.01%)</title><rect x="64.7344%" y="1109" width="0.0120%" height="15" fill="rgb(206,119,25)" fg:x="10810" fg:w="2"/><text x="64.9844%" y="1119.50"></text></g><g><title>capnp::private::arena::BuilderArenaImplInner&lt;A&gt;::allocate_anywhere (2 samples, 0.01%)</title><rect x="64.7344%" y="1093" width="0.0120%" height="15" fill="rgb(243,93,47)" fg:x="10810" fg:w="2"/><text x="64.9844%" y="1103.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation::RPCOperationKind::encode (7 samples, 0.04%)</title><rect x="64.7224%" y="1269" width="0.0419%" height="15" fill="rgb(224,194,6)" fg:x="10808" fg:w="7"/><text x="64.9724%" y="1279.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::statement::RPCStatement::encode (7 samples, 0.04%)</title><rect x="64.7224%" y="1253" width="0.0419%" height="15" fill="rgb(243,229,6)" fg:x="10808" fg:w="7"/><text x="64.9724%" y="1263.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::statement::RPCStatementDetail::encode (7 samples, 0.04%)</title><rect x="64.7224%" y="1237" width="0.0419%" height="15" fill="rgb(207,23,50)" fg:x="10808" fg:w="7"/><text x="64.9724%" y="1247.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation_route::RPCOperationRoute::encode (7 samples, 0.04%)</title><rect x="64.7224%" y="1221" width="0.0419%" height="15" fill="rgb(253,192,32)" fg:x="10808" fg:w="7"/><text x="64.9724%" y="1231.50"></text></g><g><title>veilid_core::rpc_processor::coders::private_safety_route::encode_safety_route (3 samples, 0.02%)</title><rect x="64.7464%" y="1205" width="0.0180%" height="15" fill="rgb(213,21,6)" fg:x="10812" fg:w="3"/><text x="64.9964%" y="1215.50"></text></g><g><title>veilid_core::rpc_processor::coders::typed_key::encode_typed_key (2 samples, 0.01%)</title><rect x="64.7524%" y="1189" width="0.0120%" height="15" fill="rgb(243,151,13)" fg:x="10813" fg:w="2"/><text x="65.0024%" y="1199.50"></text></g><g><title>veilid_core::rpc_processor::coders::key256::encode_key256 (2 samples, 0.01%)</title><rect x="64.7524%" y="1173" width="0.0120%" height="15" fill="rgb(233,165,41)" fg:x="10813" fg:w="2"/><text x="65.0024%" y="1183.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::render_operation::{{closure}} (267 samples, 1.60%)</title><rect x="63.1714%" y="1317" width="1.5989%" height="15" fill="rgb(246,176,45)" fg:x="10549" fg:w="267"/><text x="63.4214%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::wrap_with_route (267 samples, 1.60%)</title><rect x="63.1714%" y="1301" width="1.5989%" height="15" fill="rgb(217,170,52)" fg:x="10549" fg:w="267"/><text x="63.4214%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation::RPCOperation::encode (8 samples, 0.05%)</title><rect x="64.7224%" y="1285" width="0.0479%" height="15" fill="rgb(214,203,54)" fg:x="10808" fg:w="8"/><text x="64.9724%" y="1295.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (3 samples, 0.02%)</title><rect x="64.7703%" y="469" width="0.0180%" height="15" fill="rgb(248,215,49)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::fmt::Debug&gt;::fmt (3 samples, 0.02%)</title><rect x="64.7703%" y="453" width="0.0180%" height="15" fill="rgb(208,46,10)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="463.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (3 samples, 0.02%)</title><rect x="64.7703%" y="437" width="0.0180%" height="15" fill="rgb(254,5,31)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="447.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (3 samples, 0.02%)</title><rect x="64.7703%" y="421" width="0.0180%" height="15" fill="rgb(222,104,33)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.02%)</title><rect x="64.7703%" y="405" width="0.0180%" height="15" fill="rgb(248,49,16)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="415.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (3 samples, 0.02%)</title><rect x="64.7703%" y="389" width="0.0180%" height="15" fill="rgb(232,198,41)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (3 samples, 0.02%)</title><rect x="64.7703%" y="373" width="0.0180%" height="15" fill="rgb(214,125,3)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="383.50"></text></g><g><title>&lt;veilid_core::routing_table::privacy::RouteHopData as core::fmt::Debug&gt;::fmt (3 samples, 0.02%)</title><rect x="64.7703%" y="357" width="0.0180%" height="15" fill="rgb(229,220,28)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="367.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (3 samples, 0.02%)</title><rect x="64.7703%" y="341" width="0.0180%" height="15" fill="rgb(222,64,37)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="351.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (3 samples, 0.02%)</title><rect x="64.7703%" y="325" width="0.0180%" height="15" fill="rgb(249,184,13)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.02%)</title><rect x="64.7703%" y="309" width="0.0180%" height="15" fill="rgb(252,176,6)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="319.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (3 samples, 0.02%)</title><rect x="64.7703%" y="293" width="0.0180%" height="15" fill="rgb(228,153,7)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="303.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::Nonce as core::fmt::Debug&gt;::fmt (3 samples, 0.02%)</title><rect x="64.7703%" y="277" width="0.0180%" height="15" fill="rgb(242,193,5)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="287.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::Nonce as veilid_core::crypto::byte_array_types::Encodable&gt;::encode (3 samples, 0.02%)</title><rect x="64.7703%" y="261" width="0.0180%" height="15" fill="rgb(232,140,9)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="271.50"></text></g><g><title>data_encoding::Encoding::encode (3 samples, 0.02%)</title><rect x="64.7703%" y="245" width="0.0180%" height="15" fill="rgb(213,222,16)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="255.50"></text></g><g><title>data_encoding::Encoding::encode_mut (3 samples, 0.02%)</title><rect x="64.7703%" y="229" width="0.0180%" height="15" fill="rgb(222,75,50)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="239.50"></text></g><g><title>data_encoding::encode_wrap_mut (3 samples, 0.02%)</title><rect x="64.7703%" y="213" width="0.0180%" height="15" fill="rgb(205,180,2)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="223.50"></text></g><g><title>data_encoding::encode_pad (3 samples, 0.02%)</title><rect x="64.7703%" y="197" width="0.0180%" height="15" fill="rgb(216,34,7)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="207.50"></text></g><g><title>data_encoding::encode_base (3 samples, 0.02%)</title><rect x="64.7703%" y="181" width="0.0180%" height="15" fill="rgb(253,16,32)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="191.50"></text></g><g><title>data_encoding::encode_mut (3 samples, 0.02%)</title><rect x="64.7703%" y="165" width="0.0180%" height="15" fill="rgb(208,97,28)" fg:x="10816" fg:w="3"/><text x="65.0203%" y="175.50"></text></g><g><title>data_encoding::vectorize (2 samples, 0.01%)</title><rect x="64.7763%" y="149" width="0.0120%" height="15" fill="rgb(225,92,11)" fg:x="10817" fg:w="2"/><text x="65.0263%" y="159.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (5 samples, 0.03%)</title><rect x="64.7703%" y="661" width="0.0299%" height="15" fill="rgb(243,38,12)" fg:x="10816" fg:w="5"/><text x="65.0203%" y="671.50"></text></g><g><title>&lt;veilid_core::routing_table::privacy::PrivateRouteHops as core::fmt::Debug&gt;::fmt (5 samples, 0.03%)</title><rect x="64.7703%" y="645" width="0.0299%" height="15" fill="rgb(208,139,16)" fg:x="10816" fg:w="5"/><text x="65.0203%" y="655.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (5 samples, 0.03%)</title><rect x="64.7703%" y="629" width="0.0299%" height="15" fill="rgb(227,24,9)" fg:x="10816" fg:w="5"/><text x="65.0203%" y="639.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (5 samples, 0.03%)</title><rect x="64.7703%" y="613" width="0.0299%" height="15" fill="rgb(206,62,11)" fg:x="10816" fg:w="5"/><text x="65.0203%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (5 samples, 0.03%)</title><rect x="64.7703%" y="597" width="0.0299%" height="15" fill="rgb(228,134,27)" fg:x="10816" fg:w="5"/><text x="65.0203%" y="607.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (5 samples, 0.03%)</title><rect x="64.7703%" y="581" width="0.0299%" height="15" fill="rgb(205,55,33)" fg:x="10816" fg:w="5"/><text x="65.0203%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (5 samples, 0.03%)</title><rect x="64.7703%" y="565" width="0.0299%" height="15" fill="rgb(243,75,43)" fg:x="10816" fg:w="5"/><text x="65.0203%" y="575.50"></text></g><g><title>&lt;veilid_core::routing_table::privacy::RouteHop as core::fmt::Debug&gt;::fmt (5 samples, 0.03%)</title><rect x="64.7703%" y="549" width="0.0299%" height="15" fill="rgb(223,27,42)" fg:x="10816" fg:w="5"/><text x="65.0203%" y="559.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (5 samples, 0.03%)</title><rect x="64.7703%" y="533" width="0.0299%" height="15" fill="rgb(232,189,33)" fg:x="10816" fg:w="5"/><text x="65.0203%" y="543.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (5 samples, 0.03%)</title><rect x="64.7703%" y="517" width="0.0299%" height="15" fill="rgb(210,9,39)" fg:x="10816" fg:w="5"/><text x="65.0203%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (5 samples, 0.03%)</title><rect x="64.7703%" y="501" width="0.0299%" height="15" fill="rgb(242,85,26)" fg:x="10816" fg:w="5"/><text x="65.0203%" y="511.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (5 samples, 0.03%)</title><rect x="64.7703%" y="485" width="0.0299%" height="15" fill="rgb(248,44,4)" fg:x="10816" fg:w="5"/><text x="65.0203%" y="495.50"></text></g><g><title>&lt;veilid_core::routing_table::privacy::RouteNode as core::fmt::Debug&gt;::fmt (2 samples, 0.01%)</title><rect x="64.7883%" y="469" width="0.0120%" height="15" fill="rgb(250,96,46)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (2 samples, 0.01%)</title><rect x="64.7883%" y="453" width="0.0120%" height="15" fill="rgb(229,116,26)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="463.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (2 samples, 0.01%)</title><rect x="64.7883%" y="437" width="0.0120%" height="15" fill="rgb(246,94,34)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.01%)</title><rect x="64.7883%" y="421" width="0.0120%" height="15" fill="rgb(251,73,21)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="431.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (2 samples, 0.01%)</title><rect x="64.7883%" y="405" width="0.0120%" height="15" fill="rgb(254,121,25)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.01%)</title><rect x="64.7883%" y="389" width="0.0120%" height="15" fill="rgb(215,161,49)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="399.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as core::fmt::Debug&gt;::fmt (2 samples, 0.01%)</title><rect x="64.7883%" y="373" width="0.0120%" height="15" fill="rgb(221,43,13)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="383.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as veilid_core::crypto::byte_array_types::Encodable&gt;::encode (2 samples, 0.01%)</title><rect x="64.7883%" y="357" width="0.0120%" height="15" fill="rgb(249,5,37)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="367.50"></text></g><g><title>data_encoding::Encoding::encode (2 samples, 0.01%)</title><rect x="64.7883%" y="341" width="0.0120%" height="15" fill="rgb(226,25,44)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="351.50"></text></g><g><title>data_encoding::Encoding::encode_mut (2 samples, 0.01%)</title><rect x="64.7883%" y="325" width="0.0120%" height="15" fill="rgb(238,189,16)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="335.50"></text></g><g><title>data_encoding::encode_wrap_mut (2 samples, 0.01%)</title><rect x="64.7883%" y="309" width="0.0120%" height="15" fill="rgb(251,186,8)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="319.50"></text></g><g><title>data_encoding::encode_pad (2 samples, 0.01%)</title><rect x="64.7883%" y="293" width="0.0120%" height="15" fill="rgb(254,34,31)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="303.50"></text></g><g><title>data_encoding::encode_base (2 samples, 0.01%)</title><rect x="64.7883%" y="277" width="0.0120%" height="15" fill="rgb(225,215,27)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="287.50"></text></g><g><title>data_encoding::encode_mut (2 samples, 0.01%)</title><rect x="64.7883%" y="261" width="0.0120%" height="15" fill="rgb(221,192,48)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="271.50"></text></g><g><title>data_encoding::vectorize (2 samples, 0.01%)</title><rect x="64.7883%" y="245" width="0.0120%" height="15" fill="rgb(219,137,20)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="255.50"></text></g><g><title>data_encoding::encode_mut::{{closure}} (2 samples, 0.01%)</title><rect x="64.7883%" y="229" width="0.0120%" height="15" fill="rgb(219,84,11)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="239.50"></text></g><g><title>data_encoding::encode_block (2 samples, 0.01%)</title><rect x="64.7883%" y="213" width="0.0120%" height="15" fill="rgb(224,10,23)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="223.50"></text></g><g><title>data_encoding::dec (2 samples, 0.01%)</title><rect x="64.7883%" y="197" width="0.0120%" height="15" fill="rgb(248,22,39)" fg:x="10819" fg:w="2"/><text x="65.0383%" y="207.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::render_operation (9 samples, 0.05%)</title><rect x="64.7703%" y="1317" width="0.0539%" height="15" fill="rgb(212,154,20)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1327.50"></text></g><g><title>tracing::span::Span::new (9 samples, 0.05%)</title><rect x="64.7703%" y="1301" width="0.0539%" height="15" fill="rgb(236,199,50)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1311.50"></text></g><g><title>tracing_core::dispatcher::get_default (9 samples, 0.05%)</title><rect x="64.7703%" y="1285" width="0.0539%" height="15" fill="rgb(211,9,17)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1295.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (9 samples, 0.05%)</title><rect x="64.7703%" y="1269" width="0.0539%" height="15" fill="rgb(243,216,36)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1279.50"></text></g><g><title>tracing::span::Span::new_with (9 samples, 0.05%)</title><rect x="64.7703%" y="1253" width="0.0539%" height="15" fill="rgb(250,2,10)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1263.50"></text></g><g><title>tracing::span::Span::make_with (9 samples, 0.05%)</title><rect x="64.7703%" y="1237" width="0.0539%" height="15" fill="rgb(226,50,48)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1247.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (9 samples, 0.05%)</title><rect x="64.7703%" y="1221" width="0.0539%" height="15" fill="rgb(243,81,16)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1231.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (9 samples, 0.05%)</title><rect x="64.7703%" y="1205" width="0.0539%" height="15" fill="rgb(250,14,2)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;L&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (9 samples, 0.05%)</title><rect x="64.7703%" y="1189" width="0.0539%" height="15" fill="rgb(233,135,29)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn tracing_subscriber::layer::Layer&lt;S&gt;+core::marker::Send+core::marker::Sync&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (9 samples, 0.05%)</title><rect x="64.7703%" y="1173" width="0.0539%" height="15" fill="rgb(224,64,43)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (9 samples, 0.05%)</title><rect x="64.7703%" y="1157" width="0.0539%" height="15" fill="rgb(238,84,13)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1167.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt;::did_enable (9 samples, 0.05%)</title><rect x="64.7703%" y="1141" width="0.0539%" height="15" fill="rgb(253,48,26)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.05%)</title><rect x="64.7703%" y="1125" width="0.0539%" height="15" fill="rgb(205,223,31)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.05%)</title><rect x="64.7703%" y="1109" width="0.0539%" height="15" fill="rgb(221,41,32)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1119.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt;::did_enable::{{closure}} (9 samples, 0.05%)</title><rect x="64.7703%" y="1093" width="0.0539%" height="15" fill="rgb(213,158,31)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1103.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FilterState::did_enable (9 samples, 0.05%)</title><rect x="64.7703%" y="1077" width="0.0539%" height="15" fill="rgb(245,126,43)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span::{{closure}} (9 samples, 0.05%)</title><rect x="64.7703%" y="1061" width="0.0539%" height="15" fill="rgb(227,7,22)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1071.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (9 samples, 0.05%)</title><rect x="64.7703%" y="1045" width="0.0539%" height="15" fill="rgb(252,90,44)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1055.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (9 samples, 0.05%)</title><rect x="64.7703%" y="1029" width="0.0539%" height="15" fill="rgb(253,91,0)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1039.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (9 samples, 0.05%)</title><rect x="64.7703%" y="1013" width="0.0539%" height="15" fill="rgb(252,175,49)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1023.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (9 samples, 0.05%)</title><rect x="64.7703%" y="997" width="0.0539%" height="15" fill="rgb(246,150,1)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="1007.50"></text></g><g><title>tracing_core::span::Attributes::record (9 samples, 0.05%)</title><rect x="64.7703%" y="981" width="0.0539%" height="15" fill="rgb(241,192,25)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="991.50"></text></g><g><title>tracing_core::field::ValueSet::record (9 samples, 0.05%)</title><rect x="64.7703%" y="965" width="0.0539%" height="15" fill="rgb(239,187,11)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="975.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (9 samples, 0.05%)</title><rect x="64.7703%" y="949" width="0.0539%" height="15" fill="rgb(218,202,51)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="959.50"></text></g><g><title>&lt;tracing_core::field::DebugValue&lt;T&gt; as tracing_core::field::Value&gt;::record (9 samples, 0.05%)</title><rect x="64.7703%" y="933" width="0.0539%" height="15" fill="rgb(225,176,8)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (9 samples, 0.05%)</title><rect x="64.7703%" y="917" width="0.0539%" height="15" fill="rgb(219,122,41)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="927.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (9 samples, 0.05%)</title><rect x="64.7703%" y="901" width="0.0539%" height="15" fill="rgb(248,140,20)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="911.50"></text></g><g><title>core::fmt::Write::write_fmt (9 samples, 0.05%)</title><rect x="64.7703%" y="885" width="0.0539%" height="15" fill="rgb(245,41,37)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="895.50"></text></g><g><title>core::fmt::write (9 samples, 0.05%)</title><rect x="64.7703%" y="869" width="0.0539%" height="15" fill="rgb(235,82,39)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="879.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (9 samples, 0.05%)</title><rect x="64.7703%" y="853" width="0.0539%" height="15" fill="rgb(230,108,42)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="863.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (9 samples, 0.05%)</title><rect x="64.7703%" y="837" width="0.0539%" height="15" fill="rgb(215,150,50)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="847.50"></text></g><g><title>&lt;veilid_core::rpc_processor::destination::Destination as core::fmt::Debug&gt;::fmt (9 samples, 0.05%)</title><rect x="64.7703%" y="821" width="0.0539%" height="15" fill="rgb(233,212,5)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="831.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (9 samples, 0.05%)</title><rect x="64.7703%" y="805" width="0.0539%" height="15" fill="rgb(245,80,22)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="815.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (9 samples, 0.05%)</title><rect x="64.7703%" y="789" width="0.0539%" height="15" fill="rgb(238,129,16)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (9 samples, 0.05%)</title><rect x="64.7703%" y="773" width="0.0539%" height="15" fill="rgb(240,19,0)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="783.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (9 samples, 0.05%)</title><rect x="64.7703%" y="757" width="0.0539%" height="15" fill="rgb(232,42,35)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="767.50"></text></g><g><title>&lt;veilid_core::routing_table::privacy::PrivateRoute as core::fmt::Debug&gt;::fmt (9 samples, 0.05%)</title><rect x="64.7703%" y="741" width="0.0539%" height="15" fill="rgb(223,130,24)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="751.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field3_finish (9 samples, 0.05%)</title><rect x="64.7703%" y="725" width="0.0539%" height="15" fill="rgb(237,16,22)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="735.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (9 samples, 0.05%)</title><rect x="64.7703%" y="709" width="0.0539%" height="15" fill="rgb(248,192,20)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (9 samples, 0.05%)</title><rect x="64.7703%" y="693" width="0.0539%" height="15" fill="rgb(233,167,2)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="703.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (9 samples, 0.05%)</title><rect x="64.7703%" y="677" width="0.0539%" height="15" fill="rgb(252,71,44)" fg:x="10816" fg:w="9"/><text x="65.0203%" y="687.50"></text></g><g><title>&lt;veilid_core::crypto::types::crypto_typed::CryptoTyped&lt;K&gt; as core::fmt::Debug&gt;::fmt (4 samples, 0.02%)</title><rect x="64.8003%" y="661" width="0.0240%" height="15" fill="rgb(238,37,47)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="671.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (4 samples, 0.02%)</title><rect x="64.8003%" y="645" width="0.0240%" height="15" fill="rgb(214,202,54)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="655.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (4 samples, 0.02%)</title><rect x="64.8003%" y="629" width="0.0240%" height="15" fill="rgb(254,165,40)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.02%)</title><rect x="64.8003%" y="613" width="0.0240%" height="15" fill="rgb(246,173,38)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="623.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (4 samples, 0.02%)</title><rect x="64.8003%" y="597" width="0.0240%" height="15" fill="rgb(215,3,27)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 0.02%)</title><rect x="64.8003%" y="581" width="0.0240%" height="15" fill="rgb(239,169,51)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="591.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as core::fmt::Debug&gt;::fmt (4 samples, 0.02%)</title><rect x="64.8003%" y="565" width="0.0240%" height="15" fill="rgb(212,5,25)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="575.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as veilid_core::crypto::byte_array_types::Encodable&gt;::encode (4 samples, 0.02%)</title><rect x="64.8003%" y="549" width="0.0240%" height="15" fill="rgb(243,45,17)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="559.50"></text></g><g><title>data_encoding::Encoding::encode (4 samples, 0.02%)</title><rect x="64.8003%" y="533" width="0.0240%" height="15" fill="rgb(242,97,9)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="543.50"></text></g><g><title>data_encoding::Encoding::encode_mut (4 samples, 0.02%)</title><rect x="64.8003%" y="517" width="0.0240%" height="15" fill="rgb(228,71,31)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="527.50"></text></g><g><title>data_encoding::encode_wrap_mut (4 samples, 0.02%)</title><rect x="64.8003%" y="501" width="0.0240%" height="15" fill="rgb(252,184,16)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="511.50"></text></g><g><title>data_encoding::encode_pad (4 samples, 0.02%)</title><rect x="64.8003%" y="485" width="0.0240%" height="15" fill="rgb(236,169,46)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="495.50"></text></g><g><title>data_encoding::encode_base (4 samples, 0.02%)</title><rect x="64.8003%" y="469" width="0.0240%" height="15" fill="rgb(207,17,47)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="479.50"></text></g><g><title>data_encoding::encode_mut (4 samples, 0.02%)</title><rect x="64.8003%" y="453" width="0.0240%" height="15" fill="rgb(206,201,28)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="463.50"></text></g><g><title>data_encoding::vectorize (4 samples, 0.02%)</title><rect x="64.8003%" y="437" width="0.0240%" height="15" fill="rgb(224,184,23)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="447.50"></text></g><g><title>data_encoding::encode_mut::{{closure}} (4 samples, 0.02%)</title><rect x="64.8003%" y="421" width="0.0240%" height="15" fill="rgb(208,139,48)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="431.50"></text></g><g><title>data_encoding::encode_block (4 samples, 0.02%)</title><rect x="64.8003%" y="405" width="0.0240%" height="15" fill="rgb(208,130,10)" fg:x="10821" fg:w="4"/><text x="65.0503%" y="415.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (2 samples, 0.01%)</title><rect x="64.8362%" y="1301" width="0.0120%" height="15" fill="rgb(211,213,45)" fg:x="10827" fg:w="2"/><text x="65.0862%" y="1311.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="64.8362%" y="1285" width="0.0120%" height="15" fill="rgb(235,100,30)" fg:x="10827" fg:w="2"/><text x="65.0862%" y="1295.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (2 samples, 0.01%)</title><rect x="64.8542%" y="1253" width="0.0120%" height="15" fill="rgb(206,144,31)" fg:x="10830" fg:w="2"/><text x="65.1042%" y="1263.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="64.8482%" y="1285" width="0.0299%" height="15" fill="rgb(224,200,26)" fg:x="10829" fg:w="5"/><text x="65.0982%" y="1295.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (5 samples, 0.03%)</title><rect x="64.8482%" y="1269" width="0.0299%" height="15" fill="rgb(247,104,53)" fg:x="10829" fg:w="5"/><text x="65.0982%" y="1279.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (2 samples, 0.01%)</title><rect x="64.8662%" y="1253" width="0.0120%" height="15" fill="rgb(220,14,17)" fg:x="10832" fg:w="2"/><text x="65.1162%" y="1263.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (2 samples, 0.01%)</title><rect x="64.8662%" y="1237" width="0.0120%" height="15" fill="rgb(230,140,40)" fg:x="10832" fg:w="2"/><text x="65.1162%" y="1247.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.01%)</title><rect x="64.8781%" y="1253" width="0.0120%" height="15" fill="rgb(229,2,41)" fg:x="10834" fg:w="2"/><text x="65.1281%" y="1263.50"></text></g><g><title>&lt;stop_token::deadline::Deadline as core::future::future::Future&gt;::poll (3 samples, 0.02%)</title><rect x="64.8781%" y="1285" width="0.0180%" height="15" fill="rgb(232,89,16)" fg:x="10834" fg:w="3"/><text x="65.1281%" y="1295.50"></text></g><g><title>&lt;stop_token::stop_source::StopToken as core::future::future::Future&gt;::poll (3 samples, 0.02%)</title><rect x="64.8781%" y="1269" width="0.0180%" height="15" fill="rgb(247,59,52)" fg:x="10834" fg:w="3"/><text x="65.1281%" y="1279.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.05%)</title><rect x="64.8482%" y="1301" width="0.0539%" height="15" fill="rgb(226,110,21)" fg:x="10829" fg:w="9"/><text x="65.0982%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::rpc_worker::{{closure}} (16 samples, 0.10%)</title><rect x="64.8242%" y="1317" width="0.0958%" height="15" fill="rgb(224,176,43)" fg:x="10825" fg:w="16"/><text x="65.0742%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="64.9320%" y="1173" width="0.0180%" height="15" fill="rgb(221,73,6)" fg:x="10843" fg:w="3"/><text x="65.1820%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.02%)</title><rect x="64.9320%" y="1157" width="0.0180%" height="15" fill="rgb(232,78,19)" fg:x="10843" fg:w="3"/><text x="65.1820%" y="1167.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (5 samples, 0.03%)</title><rect x="64.9260%" y="1189" width="0.0299%" height="15" fill="rgb(233,112,48)" fg:x="10842" fg:w="5"/><text x="65.1760%" y="1199.50"></text></g><g><title>chacha20::xchacha::quarter_round (3 samples, 0.02%)</title><rect x="64.9560%" y="1173" width="0.0180%" height="15" fill="rgb(243,131,47)" fg:x="10847" fg:w="3"/><text x="65.2060%" y="1183.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (13 samples, 0.08%)</title><rect x="64.9260%" y="1205" width="0.0778%" height="15" fill="rgb(226,51,1)" fg:x="10842" fg:w="13"/><text x="65.1760%" y="1215.50"></text></g><g><title>chacha20::xchacha::hchacha (8 samples, 0.05%)</title><rect x="64.9560%" y="1189" width="0.0479%" height="15" fill="rgb(247,58,7)" fg:x="10847" fg:w="8"/><text x="65.2060%" y="1199.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.02%)</title><rect x="64.9859%" y="1173" width="0.0180%" height="15" fill="rgb(209,7,32)" fg:x="10852" fg:w="3"/><text x="65.2359%" y="1183.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.02%)</title><rect x="64.9859%" y="1157" width="0.0180%" height="15" fill="rgb(209,39,41)" fg:x="10852" fg:w="3"/><text x="65.2359%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.02%)</title><rect x="64.9859%" y="1141" width="0.0180%" height="15" fill="rgb(226,182,46)" fg:x="10852" fg:w="3"/><text x="65.2359%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="64.9859%" y="1125" width="0.0180%" height="15" fill="rgb(230,219,10)" fg:x="10852" fg:w="3"/><text x="65.2359%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="64.9859%" y="1109" width="0.0180%" height="15" fill="rgb(227,175,30)" fg:x="10852" fg:w="3"/><text x="65.2359%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.02%)</title><rect x="64.9859%" y="1093" width="0.0180%" height="15" fill="rgb(217,2,50)" fg:x="10852" fg:w="3"/><text x="65.2359%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.02%)</title><rect x="64.9859%" y="1077" width="0.0180%" height="15" fill="rgb(229,160,0)" fg:x="10852" fg:w="3"/><text x="65.2359%" y="1087.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (3 samples, 0.02%)</title><rect x="64.9859%" y="1061" width="0.0180%" height="15" fill="rgb(207,78,37)" fg:x="10852" fg:w="3"/><text x="65.2359%" y="1071.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (14 samples, 0.08%)</title><rect x="64.9260%" y="1221" width="0.0838%" height="15" fill="rgb(225,57,0)" fg:x="10842" fg:w="14"/><text x="65.1760%" y="1231.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::apply_network_key (15 samples, 0.09%)</title><rect x="64.9260%" y="1253" width="0.0898%" height="15" fill="rgb(232,154,2)" fg:x="10842" fg:w="15"/><text x="65.1760%" y="1263.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_in_place_no_auth (15 samples, 0.09%)</title><rect x="64.9260%" y="1237" width="0.0898%" height="15" fill="rgb(241,212,25)" fg:x="10842" fg:w="15"/><text x="65.1760%" y="1247.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::send_envelope::{{closure}} (21 samples, 0.13%)</title><rect x="64.9201%" y="1301" width="0.1258%" height="15" fill="rgb(226,69,20)" fg:x="10841" fg:w="21"/><text x="65.1701%" y="1311.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::send_envelope::{{closure}}::{{closure}} (21 samples, 0.13%)</title><rect x="64.9201%" y="1285" width="0.1258%" height="15" fill="rgb(247,184,54)" fg:x="10841" fg:w="21"/><text x="65.1701%" y="1295.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::send_envelope::{{closure}}::{{closure}}::{{closure}} (21 samples, 0.13%)</title><rect x="64.9201%" y="1269" width="0.1258%" height="15" fill="rgb(210,145,0)" fg:x="10841" fg:w="21"/><text x="65.1701%" y="1279.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::build_envelope (5 samples, 0.03%)</title><rect x="65.0159%" y="1253" width="0.0299%" height="15" fill="rgb(253,82,12)" fg:x="10857" fg:w="5"/><text x="65.2659%" y="1263.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::build_envelope::{{closure}} (5 samples, 0.03%)</title><rect x="65.0159%" y="1237" width="0.0299%" height="15" fill="rgb(245,42,11)" fg:x="10857" fg:w="5"/><text x="65.2659%" y="1247.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="65.0578%" y="197" width="0.0180%" height="15" fill="rgb(219,147,32)" fg:x="10864" fg:w="3"/><text x="65.3078%" y="207.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.01%)</title><rect x="65.0758%" y="133" width="0.0120%" height="15" fill="rgb(246,12,7)" fg:x="10867" fg:w="2"/><text x="65.3258%" y="143.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u8&gt;::fmt (2 samples, 0.01%)</title><rect x="65.0758%" y="117" width="0.0120%" height="15" fill="rgb(243,50,9)" fg:x="10867" fg:w="2"/><text x="65.3258%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (2 samples, 0.01%)</title><rect x="65.0758%" y="101" width="0.0120%" height="15" fill="rgb(219,149,6)" fg:x="10867" fg:w="2"/><text x="65.3258%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.01%)</title><rect x="65.0758%" y="85" width="0.0120%" height="15" fill="rgb(241,51,42)" fg:x="10867" fg:w="2"/><text x="65.3258%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="65.0758%" y="69" width="0.0120%" height="15" fill="rgb(226,128,27)" fg:x="10867" fg:w="2"/><text x="65.3258%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (7 samples, 0.04%)</title><rect x="65.0578%" y="261" width="0.0419%" height="15" fill="rgb(244,144,4)" fg:x="10864" fg:w="7"/><text x="65.3078%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (7 samples, 0.04%)</title><rect x="65.0578%" y="245" width="0.0419%" height="15" fill="rgb(221,4,13)" fg:x="10864" fg:w="7"/><text x="65.3078%" y="255.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (7 samples, 0.04%)</title><rect x="65.0578%" y="229" width="0.0419%" height="15" fill="rgb(208,170,28)" fg:x="10864" fg:w="7"/><text x="65.3078%" y="239.50"></text></g><g><title>core::fmt::builders::DebugList::entries (7 samples, 0.04%)</title><rect x="65.0578%" y="213" width="0.0419%" height="15" fill="rgb(226,131,13)" fg:x="10864" fg:w="7"/><text x="65.3078%" y="223.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (4 samples, 0.02%)</title><rect x="65.0758%" y="197" width="0.0240%" height="15" fill="rgb(215,72,41)" fg:x="10867" fg:w="4"/><text x="65.3258%" y="207.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (4 samples, 0.02%)</title><rect x="65.0758%" y="181" width="0.0240%" height="15" fill="rgb(243,108,20)" fg:x="10867" fg:w="4"/><text x="65.3258%" y="191.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.02%)</title><rect x="65.0758%" y="165" width="0.0240%" height="15" fill="rgb(230,189,17)" fg:x="10867" fg:w="4"/><text x="65.3258%" y="175.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (4 samples, 0.02%)</title><rect x="65.0758%" y="149" width="0.0240%" height="15" fill="rgb(220,50,17)" fg:x="10867" fg:w="4"/><text x="65.3258%" y="159.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.01%)</title><rect x="65.0877%" y="133" width="0.0120%" height="15" fill="rgb(248,152,48)" fg:x="10869" fg:w="2"/><text x="65.3377%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="65.0877%" y="117" width="0.0120%" height="15" fill="rgb(244,91,11)" fg:x="10869" fg:w="2"/><text x="65.3377%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="65.0877%" y="101" width="0.0120%" height="15" fill="rgb(220,157,5)" fg:x="10869" fg:w="2"/><text x="65.3377%" y="111.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.01%)</title><rect x="65.0877%" y="85" width="0.0120%" height="15" fill="rgb(253,137,8)" fg:x="10869" fg:w="2"/><text x="65.3377%" y="95.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="65.0877%" y="69" width="0.0120%" height="15" fill="rgb(217,137,51)" fg:x="10869" fg:w="2"/><text x="65.3377%" y="79.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.01%)</title><rect x="65.0877%" y="53" width="0.0120%" height="15" fill="rgb(218,209,53)" fg:x="10869" fg:w="2"/><text x="65.3377%" y="63.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="65.0877%" y="37" width="0.0120%" height="15" fill="rgb(249,137,25)" fg:x="10869" fg:w="2"/><text x="65.3377%" y="47.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (8 samples, 0.05%)</title><rect x="65.0578%" y="453" width="0.0479%" height="15" fill="rgb(239,155,26)" fg:x="10864" fg:w="8"/><text x="65.3078%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::fmt::Debug&gt;::fmt (8 samples, 0.05%)</title><rect x="65.0578%" y="437" width="0.0479%" height="15" fill="rgb(227,85,46)" fg:x="10864" fg:w="8"/><text x="65.3078%" y="447.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (8 samples, 0.05%)</title><rect x="65.0578%" y="421" width="0.0479%" height="15" fill="rgb(251,107,43)" fg:x="10864" fg:w="8"/><text x="65.3078%" y="431.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (8 samples, 0.05%)</title><rect x="65.0578%" y="405" width="0.0479%" height="15" fill="rgb(234,170,33)" fg:x="10864" fg:w="8"/><text x="65.3078%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (8 samples, 0.05%)</title><rect x="65.0578%" y="389" width="0.0479%" height="15" fill="rgb(206,29,35)" fg:x="10864" fg:w="8"/><text x="65.3078%" y="399.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (8 samples, 0.05%)</title><rect x="65.0578%" y="373" width="0.0479%" height="15" fill="rgb(227,138,25)" fg:x="10864" fg:w="8"/><text x="65.3078%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (8 samples, 0.05%)</title><rect x="65.0578%" y="357" width="0.0479%" height="15" fill="rgb(249,131,35)" fg:x="10864" fg:w="8"/><text x="65.3078%" y="367.50"></text></g><g><title>&lt;veilid_core::routing_table::privacy::RouteHopData as core::fmt::Debug&gt;::fmt (8 samples, 0.05%)</title><rect x="65.0578%" y="341" width="0.0479%" height="15" fill="rgb(239,6,40)" fg:x="10864" fg:w="8"/><text x="65.3078%" y="351.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (8 samples, 0.05%)</title><rect x="65.0578%" y="325" width="0.0479%" height="15" fill="rgb(246,136,47)" fg:x="10864" fg:w="8"/><text x="65.3078%" y="335.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (8 samples, 0.05%)</title><rect x="65.0578%" y="309" width="0.0479%" height="15" fill="rgb(253,58,26)" fg:x="10864" fg:w="8"/><text x="65.3078%" y="319.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (8 samples, 0.05%)</title><rect x="65.0578%" y="293" width="0.0479%" height="15" fill="rgb(237,141,10)" fg:x="10864" fg:w="8"/><text x="65.3078%" y="303.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (8 samples, 0.05%)</title><rect x="65.0578%" y="277" width="0.0479%" height="15" fill="rgb(234,156,12)" fg:x="10864" fg:w="8"/><text x="65.3078%" y="287.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (11 samples, 0.07%)</title><rect x="65.0578%" y="645" width="0.0659%" height="15" fill="rgb(243,224,36)" fg:x="10864" fg:w="11"/><text x="65.3078%" y="655.50"></text></g><g><title>&lt;veilid_core::routing_table::privacy::PrivateRouteHops as core::fmt::Debug&gt;::fmt (11 samples, 0.07%)</title><rect x="65.0578%" y="629" width="0.0659%" height="15" fill="rgb(205,229,51)" fg:x="10864" fg:w="11"/><text x="65.3078%" y="639.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (11 samples, 0.07%)</title><rect x="65.0578%" y="613" width="0.0659%" height="15" fill="rgb(223,189,4)" fg:x="10864" fg:w="11"/><text x="65.3078%" y="623.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (11 samples, 0.07%)</title><rect x="65.0578%" y="597" width="0.0659%" height="15" fill="rgb(249,167,54)" fg:x="10864" fg:w="11"/><text x="65.3078%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (11 samples, 0.07%)</title><rect x="65.0578%" y="581" width="0.0659%" height="15" fill="rgb(218,34,28)" fg:x="10864" fg:w="11"/><text x="65.3078%" y="591.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (11 samples, 0.07%)</title><rect x="65.0578%" y="565" width="0.0659%" height="15" fill="rgb(232,109,42)" fg:x="10864" fg:w="11"/><text x="65.3078%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (11 samples, 0.07%)</title><rect x="65.0578%" y="549" width="0.0659%" height="15" fill="rgb(248,214,46)" fg:x="10864" fg:w="11"/><text x="65.3078%" y="559.50"></text></g><g><title>&lt;veilid_core::routing_table::privacy::RouteHop as core::fmt::Debug&gt;::fmt (11 samples, 0.07%)</title><rect x="65.0578%" y="533" width="0.0659%" height="15" fill="rgb(244,216,40)" fg:x="10864" fg:w="11"/><text x="65.3078%" y="543.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (11 samples, 0.07%)</title><rect x="65.0578%" y="517" width="0.0659%" height="15" fill="rgb(231,226,31)" fg:x="10864" fg:w="11"/><text x="65.3078%" y="527.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (11 samples, 0.07%)</title><rect x="65.0578%" y="501" width="0.0659%" height="15" fill="rgb(238,38,43)" fg:x="10864" fg:w="11"/><text x="65.3078%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (11 samples, 0.07%)</title><rect x="65.0578%" y="485" width="0.0659%" height="15" fill="rgb(208,88,43)" fg:x="10864" fg:w="11"/><text x="65.3078%" y="495.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (11 samples, 0.07%)</title><rect x="65.0578%" y="469" width="0.0659%" height="15" fill="rgb(205,136,37)" fg:x="10864" fg:w="11"/><text x="65.3078%" y="479.50"></text></g><g><title>&lt;veilid_core::routing_table::privacy::RouteNode as core::fmt::Debug&gt;::fmt (3 samples, 0.02%)</title><rect x="65.1057%" y="453" width="0.0180%" height="15" fill="rgb(237,34,14)" fg:x="10872" fg:w="3"/><text x="65.3557%" y="463.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (3 samples, 0.02%)</title><rect x="65.1057%" y="437" width="0.0180%" height="15" fill="rgb(236,193,44)" fg:x="10872" fg:w="3"/><text x="65.3557%" y="447.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (3 samples, 0.02%)</title><rect x="65.1057%" y="421" width="0.0180%" height="15" fill="rgb(231,48,10)" fg:x="10872" fg:w="3"/><text x="65.3557%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.02%)</title><rect x="65.1057%" y="405" width="0.0180%" height="15" fill="rgb(213,141,34)" fg:x="10872" fg:w="3"/><text x="65.3557%" y="415.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (3 samples, 0.02%)</title><rect x="65.1057%" y="389" width="0.0180%" height="15" fill="rgb(249,130,34)" fg:x="10872" fg:w="3"/><text x="65.3557%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (3 samples, 0.02%)</title><rect x="65.1057%" y="373" width="0.0180%" height="15" fill="rgb(219,42,41)" fg:x="10872" fg:w="3"/><text x="65.3557%" y="383.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as core::fmt::Debug&gt;::fmt (3 samples, 0.02%)</title><rect x="65.1057%" y="357" width="0.0180%" height="15" fill="rgb(224,100,54)" fg:x="10872" fg:w="3"/><text x="65.3557%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.01%)</title><rect x="65.1117%" y="341" width="0.0120%" height="15" fill="rgb(229,200,27)" fg:x="10873" fg:w="2"/><text x="65.3617%" y="351.50"></text></g><g><title>core::fmt::write (2 samples, 0.01%)</title><rect x="65.1117%" y="325" width="0.0120%" height="15" fill="rgb(217,118,10)" fg:x="10873" fg:w="2"/><text x="65.3617%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (2 samples, 0.01%)</title><rect x="65.1117%" y="309" width="0.0120%" height="15" fill="rgb(206,22,3)" fg:x="10873" fg:w="2"/><text x="65.3617%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="65.1117%" y="293" width="0.0120%" height="15" fill="rgb(232,163,46)" fg:x="10873" fg:w="2"/><text x="65.3617%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="65.1117%" y="277" width="0.0120%" height="15" fill="rgb(206,95,13)" fg:x="10873" fg:w="2"/><text x="65.3617%" y="287.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.01%)</title><rect x="65.1117%" y="261" width="0.0120%" height="15" fill="rgb(253,154,18)" fg:x="10873" fg:w="2"/><text x="65.3617%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="65.1117%" y="245" width="0.0120%" height="15" fill="rgb(219,32,23)" fg:x="10873" fg:w="2"/><text x="65.3617%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="65.1117%" y="229" width="0.0120%" height="15" fill="rgb(230,191,45)" fg:x="10873" fg:w="2"/><text x="65.3617%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="65.1117%" y="213" width="0.0120%" height="15" fill="rgb(229,64,36)" fg:x="10873" fg:w="2"/><text x="65.3617%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="65.1117%" y="197" width="0.0120%" height="15" fill="rgb(205,129,25)" fg:x="10873" fg:w="2"/><text x="65.3617%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="65.1117%" y="181" width="0.0120%" height="15" fill="rgb(254,112,7)" fg:x="10873" fg:w="2"/><text x="65.3617%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="65.1117%" y="165" width="0.0120%" height="15" fill="rgb(226,53,48)" fg:x="10873" fg:w="2"/><text x="65.3617%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="65.1117%" y="149" width="0.0120%" height="15" fill="rgb(214,153,38)" fg:x="10873" fg:w="2"/><text x="65.3617%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="65.1117%" y="133" width="0.0120%" height="15" fill="rgb(243,101,7)" fg:x="10873" fg:w="2"/><text x="65.3617%" y="143.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (14 samples, 0.08%)</title><rect x="65.0518%" y="837" width="0.0838%" height="15" fill="rgb(240,140,22)" fg:x="10863" fg:w="14"/><text x="65.3018%" y="847.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (14 samples, 0.08%)</title><rect x="65.0518%" y="821" width="0.0838%" height="15" fill="rgb(235,114,2)" fg:x="10863" fg:w="14"/><text x="65.3018%" y="831.50"></text></g><g><title>&lt;veilid_core::rpc_processor::destination::Destination as core::fmt::Debug&gt;::fmt (14 samples, 0.08%)</title><rect x="65.0518%" y="805" width="0.0838%" height="15" fill="rgb(242,59,12)" fg:x="10863" fg:w="14"/><text x="65.3018%" y="815.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (13 samples, 0.08%)</title><rect x="65.0578%" y="789" width="0.0778%" height="15" fill="rgb(252,134,9)" fg:x="10864" fg:w="13"/><text x="65.3078%" y="799.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (13 samples, 0.08%)</title><rect x="65.0578%" y="773" width="0.0778%" height="15" fill="rgb(236,4,44)" fg:x="10864" fg:w="13"/><text x="65.3078%" y="783.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (13 samples, 0.08%)</title><rect x="65.0578%" y="757" width="0.0778%" height="15" fill="rgb(254,172,41)" fg:x="10864" fg:w="13"/><text x="65.3078%" y="767.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (13 samples, 0.08%)</title><rect x="65.0578%" y="741" width="0.0778%" height="15" fill="rgb(244,63,20)" fg:x="10864" fg:w="13"/><text x="65.3078%" y="751.50"></text></g><g><title>&lt;veilid_core::routing_table::privacy::PrivateRoute as core::fmt::Debug&gt;::fmt (13 samples, 0.08%)</title><rect x="65.0578%" y="725" width="0.0778%" height="15" fill="rgb(250,73,31)" fg:x="10864" fg:w="13"/><text x="65.3078%" y="735.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field3_finish (13 samples, 0.08%)</title><rect x="65.0578%" y="709" width="0.0778%" height="15" fill="rgb(241,38,36)" fg:x="10864" fg:w="13"/><text x="65.3078%" y="719.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (13 samples, 0.08%)</title><rect x="65.0578%" y="693" width="0.0778%" height="15" fill="rgb(245,211,2)" fg:x="10864" fg:w="13"/><text x="65.3078%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (13 samples, 0.08%)</title><rect x="65.0578%" y="677" width="0.0778%" height="15" fill="rgb(206,120,28)" fg:x="10864" fg:w="13"/><text x="65.3078%" y="687.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (13 samples, 0.08%)</title><rect x="65.0578%" y="661" width="0.0778%" height="15" fill="rgb(211,59,34)" fg:x="10864" fg:w="13"/><text x="65.3078%" y="671.50"></text></g><g><title>&lt;veilid_core::crypto::types::crypto_typed::CryptoTyped&lt;K&gt; as core::fmt::Debug&gt;::fmt (2 samples, 0.01%)</title><rect x="65.1237%" y="645" width="0.0120%" height="15" fill="rgb(233,168,5)" fg:x="10875" fg:w="2"/><text x="65.3737%" y="655.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (2 samples, 0.01%)</title><rect x="65.1237%" y="629" width="0.0120%" height="15" fill="rgb(234,33,13)" fg:x="10875" fg:w="2"/><text x="65.3737%" y="639.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.01%)</title><rect x="65.1237%" y="613" width="0.0120%" height="15" fill="rgb(231,150,26)" fg:x="10875" fg:w="2"/><text x="65.3737%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.01%)</title><rect x="65.1237%" y="597" width="0.0120%" height="15" fill="rgb(217,191,4)" fg:x="10875" fg:w="2"/><text x="65.3737%" y="607.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.01%)</title><rect x="65.1237%" y="581" width="0.0120%" height="15" fill="rgb(246,198,38)" fg:x="10875" fg:w="2"/><text x="65.3737%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.01%)</title><rect x="65.1237%" y="565" width="0.0120%" height="15" fill="rgb(245,64,37)" fg:x="10875" fg:w="2"/><text x="65.3737%" y="575.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as core::fmt::Debug&gt;::fmt (2 samples, 0.01%)</title><rect x="65.1237%" y="549" width="0.0120%" height="15" fill="rgb(250,30,36)" fg:x="10875" fg:w="2"/><text x="65.3737%" y="559.50"></text></g><g><title>tracing::span::Span::new (17 samples, 0.10%)</title><rect x="65.0518%" y="1285" width="0.1018%" height="15" fill="rgb(217,86,53)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1295.50"></text></g><g><title>tracing_core::dispatcher::get_default (17 samples, 0.10%)</title><rect x="65.0518%" y="1269" width="0.1018%" height="15" fill="rgb(228,157,16)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1279.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (17 samples, 0.10%)</title><rect x="65.0518%" y="1253" width="0.1018%" height="15" fill="rgb(217,59,31)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1263.50"></text></g><g><title>tracing::span::Span::new_with (17 samples, 0.10%)</title><rect x="65.0518%" y="1237" width="0.1018%" height="15" fill="rgb(237,138,41)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1247.50"></text></g><g><title>tracing::span::Span::make_with (17 samples, 0.10%)</title><rect x="65.0518%" y="1221" width="0.1018%" height="15" fill="rgb(227,91,49)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1231.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (17 samples, 0.10%)</title><rect x="65.0518%" y="1205" width="0.1018%" height="15" fill="rgb(247,21,44)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (17 samples, 0.10%)</title><rect x="65.0518%" y="1189" width="0.1018%" height="15" fill="rgb(219,210,51)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;L&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (17 samples, 0.10%)</title><rect x="65.0518%" y="1173" width="0.1018%" height="15" fill="rgb(209,140,6)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn tracing_subscriber::layer::Layer&lt;S&gt;+core::marker::Send+core::marker::Sync&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (17 samples, 0.10%)</title><rect x="65.0518%" y="1157" width="0.1018%" height="15" fill="rgb(221,188,24)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1167.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (17 samples, 0.10%)</title><rect x="65.0518%" y="1141" width="0.1018%" height="15" fill="rgb(232,154,20)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1151.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt;::did_enable (17 samples, 0.10%)</title><rect x="65.0518%" y="1125" width="0.1018%" height="15" fill="rgb(244,137,50)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.10%)</title><rect x="65.0518%" y="1109" width="0.1018%" height="15" fill="rgb(225,185,43)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.10%)</title><rect x="65.0518%" y="1093" width="0.1018%" height="15" fill="rgb(213,205,38)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1103.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt;::did_enable::{{closure}} (17 samples, 0.10%)</title><rect x="65.0518%" y="1077" width="0.1018%" height="15" fill="rgb(236,73,12)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1087.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FilterState::did_enable (17 samples, 0.10%)</title><rect x="65.0518%" y="1061" width="0.1018%" height="15" fill="rgb(235,219,13)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1071.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span::{{closure}} (17 samples, 0.10%)</title><rect x="65.0518%" y="1045" width="0.1018%" height="15" fill="rgb(218,59,36)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (17 samples, 0.10%)</title><rect x="65.0518%" y="1029" width="0.1018%" height="15" fill="rgb(205,110,39)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1039.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (17 samples, 0.10%)</title><rect x="65.0518%" y="1013" width="0.1018%" height="15" fill="rgb(218,206,42)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1023.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (17 samples, 0.10%)</title><rect x="65.0518%" y="997" width="0.1018%" height="15" fill="rgb(248,125,24)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="1007.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (17 samples, 0.10%)</title><rect x="65.0518%" y="981" width="0.1018%" height="15" fill="rgb(242,28,27)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="991.50"></text></g><g><title>tracing_core::span::Attributes::record (17 samples, 0.10%)</title><rect x="65.0518%" y="965" width="0.1018%" height="15" fill="rgb(216,228,15)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="975.50"></text></g><g><title>tracing_core::field::ValueSet::record (17 samples, 0.10%)</title><rect x="65.0518%" y="949" width="0.1018%" height="15" fill="rgb(235,116,46)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="959.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (17 samples, 0.10%)</title><rect x="65.0518%" y="933" width="0.1018%" height="15" fill="rgb(224,18,32)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="943.50"></text></g><g><title>&lt;tracing_core::field::DebugValue&lt;T&gt; as tracing_core::field::Value&gt;::record (17 samples, 0.10%)</title><rect x="65.0518%" y="917" width="0.1018%" height="15" fill="rgb(252,5,12)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="927.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (17 samples, 0.10%)</title><rect x="65.0518%" y="901" width="0.1018%" height="15" fill="rgb(251,36,5)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="911.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (17 samples, 0.10%)</title><rect x="65.0518%" y="885" width="0.1018%" height="15" fill="rgb(217,53,14)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="895.50"></text></g><g><title>core::fmt::Write::write_fmt (17 samples, 0.10%)</title><rect x="65.0518%" y="869" width="0.1018%" height="15" fill="rgb(215,86,45)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="879.50"></text></g><g><title>core::fmt::write (17 samples, 0.10%)</title><rect x="65.0518%" y="853" width="0.1018%" height="15" fill="rgb(242,169,11)" fg:x="10863" fg:w="17"/><text x="65.3018%" y="863.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (3 samples, 0.02%)</title><rect x="65.1356%" y="837" width="0.0180%" height="15" fill="rgb(211,213,45)" fg:x="10877" fg:w="3"/><text x="65.3856%" y="847.50"></text></g><g><title>nu_ansi_term::display::AnsiGenericString&lt;S&gt;::write_to_any (3 samples, 0.02%)</title><rect x="65.1356%" y="821" width="0.0180%" height="15" fill="rgb(205,88,11)" fg:x="10877" fg:w="3"/><text x="65.3856%" y="831.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_fmt (3 samples, 0.02%)</title><rect x="65.1356%" y="805" width="0.0180%" height="15" fill="rgb(252,69,26)" fg:x="10877" fg:w="3"/><text x="65.3856%" y="815.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.02%)</title><rect x="65.1356%" y="789" width="0.0180%" height="15" fill="rgb(246,123,37)" fg:x="10877" fg:w="3"/><text x="65.3856%" y="799.50"></text></g><g><title>core::fmt::write (3 samples, 0.02%)</title><rect x="65.1356%" y="773" width="0.0180%" height="15" fill="rgb(212,205,5)" fg:x="10877" fg:w="3"/><text x="65.3856%" y="783.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Prefix as core::fmt::Display&gt;::fmt (3 samples, 0.02%)</title><rect x="65.1356%" y="757" width="0.0180%" height="15" fill="rgb(253,148,0)" fg:x="10877" fg:w="3"/><text x="65.3856%" y="767.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (3 samples, 0.02%)</title><rect x="65.1356%" y="741" width="0.0180%" height="15" fill="rgb(239,22,4)" fg:x="10877" fg:w="3"/><text x="65.3856%" y="751.50"></text></g><g><title>&lt;capnp::private::arena::BuilderArenaImpl&lt;A&gt; as capnp::private::arena::BuilderArena&gt;::get_segment_mut (3 samples, 0.02%)</title><rect x="65.1536%" y="1237" width="0.0180%" height="15" fill="rgb(226,26,53)" fg:x="10880" fg:w="3"/><text x="65.4036%" y="1247.50"></text></g><g><title>capnp::private::arena::BuilderArenaImplInner&lt;A&gt;::get_segment_mut (3 samples, 0.02%)</title><rect x="65.1536%" y="1221" width="0.0180%" height="15" fill="rgb(225,229,45)" fg:x="10880" fg:w="3"/><text x="65.4036%" y="1231.50"></text></g><g><title>capnp::message::Builder&lt;A&gt;::init_root (5 samples, 0.03%)</title><rect x="65.1536%" y="1269" width="0.0299%" height="15" fill="rgb(220,60,37)" fg:x="10880" fg:w="5"/><text x="65.4036%" y="1279.50"></text></g><g><title>capnp::message::Builder&lt;A&gt;::get_root_internal (5 samples, 0.03%)</title><rect x="65.1536%" y="1253" width="0.0299%" height="15" fill="rgb(217,180,35)" fg:x="10880" fg:w="5"/><text x="65.4036%" y="1263.50"></text></g><g><title>capnp::private::arena::BuilderArenaImpl&lt;A&gt;::allocate_segment (2 samples, 0.01%)</title><rect x="65.1716%" y="1237" width="0.0120%" height="15" fill="rgb(229,7,53)" fg:x="10883" fg:w="2"/><text x="65.4216%" y="1247.50"></text></g><g><title>capnp::private::arena::BuilderArenaImplInner&lt;A&gt;::allocate_segment (2 samples, 0.01%)</title><rect x="65.1716%" y="1221" width="0.0120%" height="15" fill="rgb(254,137,3)" fg:x="10883" fg:w="2"/><text x="65.4216%" y="1231.50"></text></g><g><title>&lt;capnp::message::HeapAllocator as capnp::message::Allocator&gt;::allocate_segment (2 samples, 0.01%)</title><rect x="65.1716%" y="1205" width="0.0120%" height="15" fill="rgb(215,140,41)" fg:x="10883" fg:w="2"/><text x="65.4216%" y="1215.50"></text></g><g><title>alloc::alloc::alloc_zeroed (2 samples, 0.01%)</title><rect x="65.1716%" y="1189" width="0.0120%" height="15" fill="rgb(250,80,15)" fg:x="10883" fg:w="2"/><text x="65.4216%" y="1199.50"></text></g><g><title>capnp::serialize::write_segment_table (2 samples, 0.01%)</title><rect x="65.1835%" y="1221" width="0.0120%" height="15" fill="rgb(252,191,6)" fg:x="10885" fg:w="2"/><text x="65.4335%" y="1231.50"></text></g><g><title>capnp::serialize::write_segment_table_internal (2 samples, 0.01%)</title><rect x="65.1835%" y="1205" width="0.0120%" height="15" fill="rgb(246,217,18)" fg:x="10885" fg:w="2"/><text x="65.4335%" y="1215.50"></text></g><g><title>&lt;capnp::serialize_packed::PackedWrite&lt;W&gt; as capnp::io::Write&gt;::write_all (2 samples, 0.01%)</title><rect x="65.1835%" y="1189" width="0.0120%" height="15" fill="rgb(223,93,7)" fg:x="10885" fg:w="2"/><text x="65.4335%" y="1199.50"></text></g><g><title>capnp::io::no_std_impls::&lt;impl capnp::io::Write for &amp;mut W&gt;::write_all (3 samples, 0.02%)</title><rect x="65.4890%" y="1189" width="0.0180%" height="15" fill="rgb(225,55,52)" fg:x="10936" fg:w="3"/><text x="65.7390%" y="1199.50"></text></g><g><title>capnp::io::no_std_impls::&lt;impl capnp::io::Write for alloc::vec::Vec&lt;u8&gt;&gt;::write_all (3 samples, 0.02%)</title><rect x="65.4890%" y="1173" width="0.0180%" height="15" fill="rgb(240,31,24)" fg:x="10936" fg:w="3"/><text x="65.7390%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.02%)</title><rect x="65.4890%" y="1157" width="0.0180%" height="15" fill="rgb(205,56,52)" fg:x="10936" fg:w="3"/><text x="65.7390%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="65.4890%" y="1141" width="0.0180%" height="15" fill="rgb(246,146,12)" fg:x="10936" fg:w="3"/><text x="65.7390%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.02%)</title><rect x="65.4890%" y="1125" width="0.0180%" height="15" fill="rgb(239,84,36)" fg:x="10936" fg:w="3"/><text x="65.7390%" y="1135.50"></text></g><g><title>&lt;i32 as core::iter::range::Step&gt;::forward_unchecked (18 samples, 0.11%)</title><rect x="65.7764%" y="1157" width="0.1078%" height="15" fill="rgb(207,41,40)" fg:x="10984" fg:w="18"/><text x="66.0264%" y="1167.50"></text></g><g><title>core::num::&lt;impl i32&gt;::unchecked_add (11 samples, 0.07%)</title><rect x="65.8183%" y="1141" width="0.0659%" height="15" fill="rgb(241,179,25)" fg:x="10991" fg:w="11"/><text x="66.0683%" y="1151.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for i32&gt;::clone (12 samples, 0.07%)</title><rect x="65.8842%" y="1157" width="0.0719%" height="15" fill="rgb(210,0,34)" fg:x="11002" fg:w="12"/><text x="66.1342%" y="1167.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (15 samples, 0.09%)</title><rect x="65.9560%" y="1157" width="0.0898%" height="15" fill="rgb(225,217,29)" fg:x="11014" fg:w="15"/><text x="66.2060%" y="1167.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="66.1058%" y="1141" width="0.0120%" height="15" fill="rgb(216,191,38)" fg:x="11039" fg:w="2"/><text x="66.3558%" y="1151.50"></text></g><g><title>core::ptr::read (27 samples, 0.16%)</title><rect x="66.1177%" y="1141" width="0.1617%" height="15" fill="rgb(232,140,52)" fg:x="11041" fg:w="27"/><text x="66.3677%" y="1151.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (10 samples, 0.06%)</title><rect x="66.2195%" y="1125" width="0.0599%" height="15" fill="rgb(223,158,51)" fg:x="11058" fg:w="10"/><text x="66.4695%" y="1135.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (2 samples, 0.01%)</title><rect x="66.2674%" y="1109" width="0.0120%" height="15" fill="rgb(235,29,51)" fg:x="11066" fg:w="2"/><text x="66.5174%" y="1119.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (134 samples, 0.80%)</title><rect x="65.5129%" y="1189" width="0.8024%" height="15" fill="rgb(215,181,18)" fg:x="10940" fg:w="134"/><text x="65.7629%" y="1199.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (132 samples, 0.79%)</title><rect x="65.5249%" y="1173" width="0.7905%" height="15" fill="rgb(227,125,34)" fg:x="10942" fg:w="132"/><text x="65.7749%" y="1183.50"></text></g><g><title>core::mem::replace (45 samples, 0.27%)</title><rect x="66.0459%" y="1157" width="0.2695%" height="15" fill="rgb(230,197,49)" fg:x="11029" fg:w="45"/><text x="66.2959%" y="1167.50"></text></g><g><title>core::ptr::write (6 samples, 0.04%)</title><rect x="66.2794%" y="1141" width="0.0359%" height="15" fill="rgb(239,141,16)" fg:x="11068" fg:w="6"/><text x="66.5294%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (4 samples, 0.02%)</title><rect x="66.3153%" y="1189" width="0.0240%" height="15" fill="rgb(225,105,43)" fg:x="11074" fg:w="4"/><text x="66.5653%" y="1199.50"></text></g><g><title>capnp::serialize_packed::write_message (194 samples, 1.16%)</title><rect x="65.1835%" y="1253" width="1.1617%" height="15" fill="rgb(214,131,14)" fg:x="10885" fg:w="194"/><text x="65.4335%" y="1263.50"></text></g><g><title>capnp::serialize::write_message (194 samples, 1.16%)</title><rect x="65.1835%" y="1237" width="1.1617%" height="15" fill="rgb(229,177,11)" fg:x="10885" fg:w="194"/><text x="65.4335%" y="1247.50"></text></g><g><title>capnp::serialize::write_segments (192 samples, 1.15%)</title><rect x="65.1955%" y="1221" width="1.1498%" height="15" fill="rgb(231,180,14)" fg:x="10887" fg:w="192"/><text x="65.4455%" y="1231.50"></text></g><g><title>&lt;capnp::serialize_packed::PackedWrite&lt;W&gt; as capnp::io::Write&gt;::write_all (191 samples, 1.14%)</title><rect x="65.2015%" y="1205" width="1.1438%" height="15" fill="rgb(232,88,2)" fg:x="10888" fg:w="191"/><text x="65.4515%" y="1215.50"></text></g><g><title>veilid_core::rpc_processor::builder_to_vec (195 samples, 1.17%)</title><rect x="65.1835%" y="1269" width="1.1677%" height="15" fill="rgb(205,220,8)" fg:x="10885" fg:w="195"/><text x="65.4335%" y="1279.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation::RPCOperationKind::encode (2 samples, 0.01%)</title><rect x="66.3513%" y="1253" width="0.0120%" height="15" fill="rgb(225,23,53)" fg:x="11080" fg:w="2"/><text x="66.6013%" y="1263.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::statement::{{closure}}::{{closure}}::{{closure}} (242 samples, 1.45%)</title><rect x="64.9201%" y="1317" width="1.4492%" height="15" fill="rgb(213,62,29)" fg:x="10841" fg:w="242"/><text x="65.1701%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::render_operation (221 samples, 1.32%)</title><rect x="65.0458%" y="1301" width="1.3234%" height="15" fill="rgb(227,75,7)" fg:x="10862" fg:w="221"/><text x="65.2958%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::render_operation::{{closure}} (203 samples, 1.22%)</title><rect x="65.1536%" y="1285" width="1.2156%" height="15" fill="rgb(207,105,14)" fg:x="10880" fg:w="203"/><text x="65.4036%" y="1295.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation::RPCOperation::encode (3 samples, 0.02%)</title><rect x="66.3513%" y="1269" width="0.0180%" height="15" fill="rgb(245,62,29)" fg:x="11080" fg:w="3"/><text x="66.6013%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.01%)</title><rect x="66.4112%" y="1141" width="0.0120%" height="15" fill="rgb(236,202,4)" fg:x="11090" fg:w="2"/><text x="66.6612%" y="1151.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::record_send_success (7 samples, 0.04%)</title><rect x="66.3872%" y="1285" width="0.0419%" height="15" fill="rgb(250,67,1)" fg:x="11086" fg:w="7"/><text x="66.6372%" y="1295.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_spec_store::RouteSpecStore::with_route_stats (6 samples, 0.04%)</title><rect x="66.3932%" y="1269" width="0.0359%" height="15" fill="rgb(253,115,44)" fg:x="11087" fg:w="6"/><text x="66.6432%" y="1279.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_spec_store_content::RouteSpecStoreContent::get_detail_mut (4 samples, 0.02%)</title><rect x="66.4052%" y="1253" width="0.0240%" height="15" fill="rgb(251,139,18)" fg:x="11089" fg:w="4"/><text x="66.6552%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4 samples, 0.02%)</title><rect x="66.4052%" y="1237" width="0.0240%" height="15" fill="rgb(218,22,32)" fg:x="11089" fg:w="4"/><text x="66.6552%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4 samples, 0.02%)</title><rect x="66.4052%" y="1221" width="0.0240%" height="15" fill="rgb(243,53,5)" fg:x="11089" fg:w="4"/><text x="66.6552%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4 samples, 0.02%)</title><rect x="66.4052%" y="1205" width="0.0240%" height="15" fill="rgb(227,56,16)" fg:x="11089" fg:w="4"/><text x="66.6552%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.02%)</title><rect x="66.4112%" y="1189" width="0.0180%" height="15" fill="rgb(245,53,0)" fg:x="11090" fg:w="3"/><text x="66.6612%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="66.4112%" y="1173" width="0.0180%" height="15" fill="rgb(216,170,35)" fg:x="11090" fg:w="3"/><text x="66.6612%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.02%)</title><rect x="66.4112%" y="1157" width="0.0180%" height="15" fill="rgb(211,200,8)" fg:x="11090" fg:w="3"/><text x="66.6612%" y="1167.50"></text></g><g><title>tracing_core::dispatcher::get_default (2 samples, 0.01%)</title><rect x="66.4351%" y="1173" width="0.0120%" height="15" fill="rgb(228,204,44)" fg:x="11094" fg:w="2"/><text x="66.6851%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.01%)</title><rect x="66.4351%" y="1157" width="0.0120%" height="15" fill="rgb(214,121,17)" fg:x="11094" fg:w="2"/><text x="66.6851%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="66.4351%" y="1141" width="0.0120%" height="15" fill="rgb(233,64,38)" fg:x="11094" fg:w="2"/><text x="66.6851%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (4 samples, 0.02%)</title><rect x="66.4291%" y="1269" width="0.0240%" height="15" fill="rgb(253,54,19)" fg:x="11093" fg:w="4"/><text x="66.6791%" y="1279.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="66.4291%" y="1253" width="0.0240%" height="15" fill="rgb(253,94,18)" fg:x="11093" fg:w="4"/><text x="66.6791%" y="1263.50"></text></g><g><title>tracing::span::Span::do_exit (4 samples, 0.02%)</title><rect x="66.4291%" y="1237" width="0.0240%" height="15" fill="rgb(227,57,52)" fg:x="11093" fg:w="4"/><text x="66.6791%" y="1247.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (4 samples, 0.02%)</title><rect x="66.4291%" y="1221" width="0.0240%" height="15" fill="rgb(230,228,50)" fg:x="11093" fg:w="4"/><text x="66.6791%" y="1231.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (4 samples, 0.02%)</title><rect x="66.4291%" y="1205" width="0.0240%" height="15" fill="rgb(217,205,27)" fg:x="11093" fg:w="4"/><text x="66.6791%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (3 samples, 0.02%)</title><rect x="66.4351%" y="1189" width="0.0180%" height="15" fill="rgb(252,71,50)" fg:x="11094" fg:w="3"/><text x="66.6851%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (2 samples, 0.01%)</title><rect x="66.4531%" y="1269" width="0.0120%" height="15" fill="rgb(209,86,4)" fg:x="11097" fg:w="2"/><text x="66.7031%" y="1279.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="66.4531%" y="1253" width="0.0120%" height="15" fill="rgb(229,94,0)" fg:x="11097" fg:w="2"/><text x="66.7031%" y="1263.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (2 samples, 0.01%)</title><rect x="66.4531%" y="1237" width="0.0120%" height="15" fill="rgb(252,223,21)" fg:x="11097" fg:w="2"/><text x="66.7031%" y="1247.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.01%)</title><rect x="66.4531%" y="1221" width="0.0120%" height="15" fill="rgb(230,210,4)" fg:x="11097" fg:w="2"/><text x="66.7031%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;L&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (3 samples, 0.02%)</title><rect x="66.4770%" y="1157" width="0.0180%" height="15" fill="rgb(240,149,38)" fg:x="11101" fg:w="3"/><text x="66.7270%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn tracing_subscriber::layer::Layer&lt;S&gt;+core::marker::Send+core::marker::Sync&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (2 samples, 0.01%)</title><rect x="66.4830%" y="1141" width="0.0120%" height="15" fill="rgb(254,105,20)" fg:x="11102" fg:w="2"/><text x="66.7330%" y="1151.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (2 samples, 0.01%)</title><rect x="66.4830%" y="1125" width="0.0120%" height="15" fill="rgb(253,87,46)" fg:x="11102" fg:w="2"/><text x="66.7330%" y="1135.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt;::did_enable (2 samples, 0.01%)</title><rect x="66.4830%" y="1109" width="0.0120%" height="15" fill="rgb(253,116,33)" fg:x="11102" fg:w="2"/><text x="66.7330%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.01%)</title><rect x="66.4830%" y="1093" width="0.0120%" height="15" fill="rgb(229,198,5)" fg:x="11102" fg:w="2"/><text x="66.7330%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="66.4830%" y="1077" width="0.0120%" height="15" fill="rgb(242,38,37)" fg:x="11102" fg:w="2"/><text x="66.7330%" y="1087.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt;::did_enable::{{closure}} (2 samples, 0.01%)</title><rect x="66.4830%" y="1061" width="0.0120%" height="15" fill="rgb(242,69,53)" fg:x="11102" fg:w="2"/><text x="66.7330%" y="1071.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FilterState::did_enable (2 samples, 0.01%)</title><rect x="66.4830%" y="1045" width="0.0120%" height="15" fill="rgb(249,80,16)" fg:x="11102" fg:w="2"/><text x="66.7330%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span::{{closure}} (2 samples, 0.01%)</title><rect x="66.4830%" y="1029" width="0.0120%" height="15" fill="rgb(206,128,11)" fg:x="11102" fg:w="2"/><text x="66.7330%" y="1039.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::render_operation (14 samples, 0.08%)</title><rect x="66.4291%" y="1285" width="0.0838%" height="15" fill="rgb(212,35,20)" fg:x="11093" fg:w="14"/><text x="66.6791%" y="1295.50"></text></g><g><title>tracing::span::Span::new (6 samples, 0.04%)</title><rect x="66.4770%" y="1269" width="0.0359%" height="15" fill="rgb(236,79,13)" fg:x="11101" fg:w="6"/><text x="66.7270%" y="1279.50"></text></g><g><title>tracing_core::dispatcher::get_default (6 samples, 0.04%)</title><rect x="66.4770%" y="1253" width="0.0359%" height="15" fill="rgb(233,123,3)" fg:x="11101" fg:w="6"/><text x="66.7270%" y="1263.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (6 samples, 0.04%)</title><rect x="66.4770%" y="1237" width="0.0359%" height="15" fill="rgb(214,93,52)" fg:x="11101" fg:w="6"/><text x="66.7270%" y="1247.50"></text></g><g><title>tracing::span::Span::new_with (6 samples, 0.04%)</title><rect x="66.4770%" y="1221" width="0.0359%" height="15" fill="rgb(251,37,40)" fg:x="11101" fg:w="6"/><text x="66.7270%" y="1231.50"></text></g><g><title>tracing::span::Span::make_with (6 samples, 0.04%)</title><rect x="66.4770%" y="1205" width="0.0359%" height="15" fill="rgb(227,80,54)" fg:x="11101" fg:w="6"/><text x="66.7270%" y="1215.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (6 samples, 0.04%)</title><rect x="66.4770%" y="1189" width="0.0359%" height="15" fill="rgb(254,48,11)" fg:x="11101" fg:w="6"/><text x="66.7270%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (6 samples, 0.04%)</title><rect x="66.4770%" y="1173" width="0.0359%" height="15" fill="rgb(235,193,26)" fg:x="11101" fg:w="6"/><text x="66.7270%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (3 samples, 0.02%)</title><rect x="66.4950%" y="1157" width="0.0180%" height="15" fill="rgb(229,99,21)" fg:x="11104" fg:w="3"/><text x="66.7450%" y="1167.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::statement::{{closure}}::{{closure}} (25 samples, 0.15%)</title><rect x="66.3692%" y="1317" width="0.1497%" height="15" fill="rgb(211,140,41)" fg:x="11083" fg:w="25"/><text x="66.6192%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::statement::{{closure}}::{{closure}}::{{closure}} (25 samples, 0.15%)</title><rect x="66.3692%" y="1301" width="0.1497%" height="15" fill="rgb(240,227,30)" fg:x="11083" fg:w="25"/><text x="66.6192%" y="1311.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="66.5249%" y="1301" width="0.0120%" height="15" fill="rgb(215,224,45)" fg:x="11109" fg:w="2"/><text x="66.7749%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (2 samples, 0.01%)</title><rect x="66.5249%" y="1285" width="0.0120%" height="15" fill="rgb(206,123,31)" fg:x="11109" fg:w="2"/><text x="66.7749%" y="1295.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="66.5249%" y="1269" width="0.0120%" height="15" fill="rgb(210,138,16)" fg:x="11109" fg:w="2"/><text x="66.7749%" y="1279.50"></text></g><g><title>tracing::span::Span::do_exit (2 samples, 0.01%)</title><rect x="66.5249%" y="1253" width="0.0120%" height="15" fill="rgb(228,57,28)" fg:x="11109" fg:w="2"/><text x="66.7749%" y="1263.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (2 samples, 0.01%)</title><rect x="66.5249%" y="1237" width="0.0120%" height="15" fill="rgb(242,170,10)" fg:x="11109" fg:w="2"/><text x="66.7749%" y="1247.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2 samples, 0.01%)</title><rect x="66.5249%" y="1221" width="0.0120%" height="15" fill="rgb(228,214,39)" fg:x="11109" fg:w="2"/><text x="66.7749%" y="1231.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.01%)</title><rect x="66.5669%" y="325" width="0.0120%" height="15" fill="rgb(218,179,33)" fg:x="11116" fg:w="2"/><text x="66.8169%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.01%)</title><rect x="66.5669%" y="309" width="0.0120%" height="15" fill="rgb(235,193,39)" fg:x="11116" fg:w="2"/><text x="66.8169%" y="319.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.01%)</title><rect x="66.5669%" y="293" width="0.0120%" height="15" fill="rgb(219,221,36)" fg:x="11116" fg:w="2"/><text x="66.8169%" y="303.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::Nonce as core::fmt::Debug&gt;::fmt (2 samples, 0.01%)</title><rect x="66.5669%" y="277" width="0.0120%" height="15" fill="rgb(248,218,19)" fg:x="11116" fg:w="2"/><text x="66.8169%" y="287.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::Nonce as veilid_core::crypto::byte_array_types::Encodable&gt;::encode (2 samples, 0.01%)</title><rect x="66.5669%" y="261" width="0.0120%" height="15" fill="rgb(205,50,9)" fg:x="11116" fg:w="2"/><text x="66.8169%" y="271.50"></text></g><g><title>data_encoding::Encoding::encode (2 samples, 0.01%)</title><rect x="66.5669%" y="245" width="0.0120%" height="15" fill="rgb(238,81,28)" fg:x="11116" fg:w="2"/><text x="66.8169%" y="255.50"></text></g><g><title>data_encoding::Encoding::encode_mut (2 samples, 0.01%)</title><rect x="66.5669%" y="229" width="0.0120%" height="15" fill="rgb(235,110,19)" fg:x="11116" fg:w="2"/><text x="66.8169%" y="239.50"></text></g><g><title>data_encoding::encode_wrap_mut (2 samples, 0.01%)</title><rect x="66.5669%" y="213" width="0.0120%" height="15" fill="rgb(214,7,14)" fg:x="11116" fg:w="2"/><text x="66.8169%" y="223.50"></text></g><g><title>data_encoding::encode_pad (2 samples, 0.01%)</title><rect x="66.5669%" y="197" width="0.0120%" height="15" fill="rgb(211,77,3)" fg:x="11116" fg:w="2"/><text x="66.8169%" y="207.50"></text></g><g><title>data_encoding::encode_base (2 samples, 0.01%)</title><rect x="66.5669%" y="181" width="0.0120%" height="15" fill="rgb(229,5,9)" fg:x="11116" fg:w="2"/><text x="66.8169%" y="191.50"></text></g><g><title>data_encoding::encode_mut (2 samples, 0.01%)</title><rect x="66.5669%" y="165" width="0.0120%" height="15" fill="rgb(225,90,11)" fg:x="11116" fg:w="2"/><text x="66.8169%" y="175.50"></text></g><g><title>data_encoding::vectorize (2 samples, 0.01%)</title><rect x="66.5669%" y="149" width="0.0120%" height="15" fill="rgb(242,56,8)" fg:x="11116" fg:w="2"/><text x="66.8169%" y="159.50"></text></g><g><title>data_encoding::encode_mut::{{closure}} (2 samples, 0.01%)</title><rect x="66.5669%" y="133" width="0.0120%" height="15" fill="rgb(249,212,39)" fg:x="11116" fg:w="2"/><text x="66.8169%" y="143.50"></text></g><g><title>data_encoding::encode_block (2 samples, 0.01%)</title><rect x="66.5669%" y="117" width="0.0120%" height="15" fill="rgb(236,90,9)" fg:x="11116" fg:w="2"/><text x="66.8169%" y="127.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (3 samples, 0.02%)</title><rect x="66.5669%" y="469" width="0.0180%" height="15" fill="rgb(206,88,35)" fg:x="11116" fg:w="3"/><text x="66.8169%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::fmt::Debug&gt;::fmt (3 samples, 0.02%)</title><rect x="66.5669%" y="453" width="0.0180%" height="15" fill="rgb(205,126,30)" fg:x="11116" fg:w="3"/><text x="66.8169%" y="463.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (3 samples, 0.02%)</title><rect x="66.5669%" y="437" width="0.0180%" height="15" fill="rgb(230,176,12)" fg:x="11116" fg:w="3"/><text x="66.8169%" y="447.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (3 samples, 0.02%)</title><rect x="66.5669%" y="421" width="0.0180%" height="15" fill="rgb(243,19,9)" fg:x="11116" fg:w="3"/><text x="66.8169%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.02%)</title><rect x="66.5669%" y="405" width="0.0180%" height="15" fill="rgb(245,171,17)" fg:x="11116" fg:w="3"/><text x="66.8169%" y="415.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (3 samples, 0.02%)</title><rect x="66.5669%" y="389" width="0.0180%" height="15" fill="rgb(227,52,21)" fg:x="11116" fg:w="3"/><text x="66.8169%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (3 samples, 0.02%)</title><rect x="66.5669%" y="373" width="0.0180%" height="15" fill="rgb(238,69,14)" fg:x="11116" fg:w="3"/><text x="66.8169%" y="383.50"></text></g><g><title>&lt;veilid_core::routing_table::privacy::RouteHopData as core::fmt::Debug&gt;::fmt (3 samples, 0.02%)</title><rect x="66.5669%" y="357" width="0.0180%" height="15" fill="rgb(241,156,39)" fg:x="11116" fg:w="3"/><text x="66.8169%" y="367.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (3 samples, 0.02%)</title><rect x="66.5669%" y="341" width="0.0180%" height="15" fill="rgb(212,227,28)" fg:x="11116" fg:w="3"/><text x="66.8169%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (6 samples, 0.04%)</title><rect x="66.5669%" y="661" width="0.0359%" height="15" fill="rgb(209,118,27)" fg:x="11116" fg:w="6"/><text x="66.8169%" y="671.50"></text></g><g><title>&lt;veilid_core::routing_table::privacy::PrivateRouteHops as core::fmt::Debug&gt;::fmt (6 samples, 0.04%)</title><rect x="66.5669%" y="645" width="0.0359%" height="15" fill="rgb(226,102,5)" fg:x="11116" fg:w="6"/><text x="66.8169%" y="655.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (6 samples, 0.04%)</title><rect x="66.5669%" y="629" width="0.0359%" height="15" fill="rgb(223,34,3)" fg:x="11116" fg:w="6"/><text x="66.8169%" y="639.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (6 samples, 0.04%)</title><rect x="66.5669%" y="613" width="0.0359%" height="15" fill="rgb(221,81,38)" fg:x="11116" fg:w="6"/><text x="66.8169%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (6 samples, 0.04%)</title><rect x="66.5669%" y="597" width="0.0359%" height="15" fill="rgb(236,219,28)" fg:x="11116" fg:w="6"/><text x="66.8169%" y="607.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (6 samples, 0.04%)</title><rect x="66.5669%" y="581" width="0.0359%" height="15" fill="rgb(213,200,14)" fg:x="11116" fg:w="6"/><text x="66.8169%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (6 samples, 0.04%)</title><rect x="66.5669%" y="565" width="0.0359%" height="15" fill="rgb(240,33,19)" fg:x="11116" fg:w="6"/><text x="66.8169%" y="575.50"></text></g><g><title>&lt;veilid_core::routing_table::privacy::RouteHop as core::fmt::Debug&gt;::fmt (6 samples, 0.04%)</title><rect x="66.5669%" y="549" width="0.0359%" height="15" fill="rgb(233,113,27)" fg:x="11116" fg:w="6"/><text x="66.8169%" y="559.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (6 samples, 0.04%)</title><rect x="66.5669%" y="533" width="0.0359%" height="15" fill="rgb(220,221,18)" fg:x="11116" fg:w="6"/><text x="66.8169%" y="543.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (6 samples, 0.04%)</title><rect x="66.5669%" y="517" width="0.0359%" height="15" fill="rgb(238,92,8)" fg:x="11116" fg:w="6"/><text x="66.8169%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (6 samples, 0.04%)</title><rect x="66.5669%" y="501" width="0.0359%" height="15" fill="rgb(222,164,16)" fg:x="11116" fg:w="6"/><text x="66.8169%" y="511.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (6 samples, 0.04%)</title><rect x="66.5669%" y="485" width="0.0359%" height="15" fill="rgb(241,119,3)" fg:x="11116" fg:w="6"/><text x="66.8169%" y="495.50"></text></g><g><title>&lt;veilid_core::routing_table::privacy::RouteNode as core::fmt::Debug&gt;::fmt (3 samples, 0.02%)</title><rect x="66.5848%" y="469" width="0.0180%" height="15" fill="rgb(241,44,8)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (3 samples, 0.02%)</title><rect x="66.5848%" y="453" width="0.0180%" height="15" fill="rgb(230,36,40)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="463.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (3 samples, 0.02%)</title><rect x="66.5848%" y="437" width="0.0180%" height="15" fill="rgb(243,16,36)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.02%)</title><rect x="66.5848%" y="421" width="0.0180%" height="15" fill="rgb(231,4,26)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="431.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (3 samples, 0.02%)</title><rect x="66.5848%" y="405" width="0.0180%" height="15" fill="rgb(240,9,31)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (3 samples, 0.02%)</title><rect x="66.5848%" y="389" width="0.0180%" height="15" fill="rgb(207,173,15)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="399.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as core::fmt::Debug&gt;::fmt (3 samples, 0.02%)</title><rect x="66.5848%" y="373" width="0.0180%" height="15" fill="rgb(224,192,53)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="383.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as veilid_core::crypto::byte_array_types::Encodable&gt;::encode (3 samples, 0.02%)</title><rect x="66.5848%" y="357" width="0.0180%" height="15" fill="rgb(223,67,28)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="367.50"></text></g><g><title>data_encoding::Encoding::encode (3 samples, 0.02%)</title><rect x="66.5848%" y="341" width="0.0180%" height="15" fill="rgb(211,20,47)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="351.50"></text></g><g><title>data_encoding::Encoding::encode_mut (3 samples, 0.02%)</title><rect x="66.5848%" y="325" width="0.0180%" height="15" fill="rgb(240,228,2)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="335.50"></text></g><g><title>data_encoding::encode_wrap_mut (3 samples, 0.02%)</title><rect x="66.5848%" y="309" width="0.0180%" height="15" fill="rgb(248,151,12)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="319.50"></text></g><g><title>data_encoding::encode_pad (3 samples, 0.02%)</title><rect x="66.5848%" y="293" width="0.0180%" height="15" fill="rgb(244,8,39)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="303.50"></text></g><g><title>data_encoding::encode_base (3 samples, 0.02%)</title><rect x="66.5848%" y="277" width="0.0180%" height="15" fill="rgb(222,26,8)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="287.50"></text></g><g><title>data_encoding::encode_mut (3 samples, 0.02%)</title><rect x="66.5848%" y="261" width="0.0180%" height="15" fill="rgb(213,106,44)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="271.50"></text></g><g><title>data_encoding::vectorize (3 samples, 0.02%)</title><rect x="66.5848%" y="245" width="0.0180%" height="15" fill="rgb(214,129,20)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="255.50"></text></g><g><title>data_encoding::encode_mut::{{closure}} (3 samples, 0.02%)</title><rect x="66.5848%" y="229" width="0.0180%" height="15" fill="rgb(212,32,13)" fg:x="11119" fg:w="3"/><text x="66.8348%" y="239.50"></text></g><g><title>data_encoding::encode_block (2 samples, 0.01%)</title><rect x="66.5908%" y="213" width="0.0120%" height="15" fill="rgb(208,168,33)" fg:x="11120" fg:w="2"/><text x="66.8408%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="66.6208%" y="389" width="0.0120%" height="15" fill="rgb(231,207,8)" fg:x="11125" fg:w="2"/><text x="66.8708%" y="399.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as veilid_core::crypto::byte_array_types::Encodable&gt;::encode (8 samples, 0.05%)</title><rect x="66.6028%" y="549" width="0.0479%" height="15" fill="rgb(235,219,23)" fg:x="11122" fg:w="8"/><text x="66.8528%" y="559.50"></text></g><g><title>data_encoding::Encoding::encode (8 samples, 0.05%)</title><rect x="66.6028%" y="533" width="0.0479%" height="15" fill="rgb(226,216,26)" fg:x="11122" fg:w="8"/><text x="66.8528%" y="543.50"></text></g><g><title>data_encoding::Encoding::encode_mut (8 samples, 0.05%)</title><rect x="66.6028%" y="517" width="0.0479%" height="15" fill="rgb(239,137,16)" fg:x="11122" fg:w="8"/><text x="66.8528%" y="527.50"></text></g><g><title>data_encoding::encode_wrap_mut (8 samples, 0.05%)</title><rect x="66.6028%" y="501" width="0.0479%" height="15" fill="rgb(207,12,36)" fg:x="11122" fg:w="8"/><text x="66.8528%" y="511.50"></text></g><g><title>data_encoding::encode_pad (8 samples, 0.05%)</title><rect x="66.6028%" y="485" width="0.0479%" height="15" fill="rgb(210,214,24)" fg:x="11122" fg:w="8"/><text x="66.8528%" y="495.50"></text></g><g><title>data_encoding::encode_base (8 samples, 0.05%)</title><rect x="66.6028%" y="469" width="0.0479%" height="15" fill="rgb(206,56,30)" fg:x="11122" fg:w="8"/><text x="66.8528%" y="479.50"></text></g><g><title>data_encoding::encode_mut (8 samples, 0.05%)</title><rect x="66.6028%" y="453" width="0.0479%" height="15" fill="rgb(228,143,26)" fg:x="11122" fg:w="8"/><text x="66.8528%" y="463.50"></text></g><g><title>data_encoding::vectorize (7 samples, 0.04%)</title><rect x="66.6088%" y="437" width="0.0419%" height="15" fill="rgb(216,218,46)" fg:x="11123" fg:w="7"/><text x="66.8588%" y="447.50"></text></g><g><title>data_encoding::encode_mut::{{closure}} (6 samples, 0.04%)</title><rect x="66.6148%" y="421" width="0.0359%" height="15" fill="rgb(206,6,19)" fg:x="11124" fg:w="6"/><text x="66.8648%" y="431.50"></text></g><g><title>data_encoding::encode_block (5 samples, 0.03%)</title><rect x="66.6208%" y="405" width="0.0299%" height="15" fill="rgb(239,177,51)" fg:x="11125" fg:w="5"/><text x="66.8708%" y="415.50"></text></g><g><title>&lt;veilid_core::crypto::types::crypto_typed::CryptoTyped&lt;K&gt; as core::fmt::Debug&gt;::fmt (9 samples, 0.05%)</title><rect x="66.6028%" y="661" width="0.0539%" height="15" fill="rgb(216,55,25)" fg:x="11122" fg:w="9"/><text x="66.8528%" y="671.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (9 samples, 0.05%)</title><rect x="66.6028%" y="645" width="0.0539%" height="15" fill="rgb(231,163,29)" fg:x="11122" fg:w="9"/><text x="66.8528%" y="655.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (9 samples, 0.05%)</title><rect x="66.6028%" y="629" width="0.0539%" height="15" fill="rgb(232,149,50)" fg:x="11122" fg:w="9"/><text x="66.8528%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (9 samples, 0.05%)</title><rect x="66.6028%" y="613" width="0.0539%" height="15" fill="rgb(223,142,48)" fg:x="11122" fg:w="9"/><text x="66.8528%" y="623.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (9 samples, 0.05%)</title><rect x="66.6028%" y="597" width="0.0539%" height="15" fill="rgb(245,83,23)" fg:x="11122" fg:w="9"/><text x="66.8528%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (9 samples, 0.05%)</title><rect x="66.6028%" y="581" width="0.0539%" height="15" fill="rgb(224,63,2)" fg:x="11122" fg:w="9"/><text x="66.8528%" y="591.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as core::fmt::Debug&gt;::fmt (9 samples, 0.05%)</title><rect x="66.6028%" y="565" width="0.0539%" height="15" fill="rgb(218,65,53)" fg:x="11122" fg:w="9"/><text x="66.8528%" y="575.50"></text></g><g><title>&lt;veilid_core::routing_table::privacy::PrivateRoute as core::fmt::Debug&gt;::fmt (17 samples, 0.10%)</title><rect x="66.5669%" y="741" width="0.1018%" height="15" fill="rgb(221,84,29)" fg:x="11116" fg:w="17"/><text x="66.8169%" y="751.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field3_finish (17 samples, 0.10%)</title><rect x="66.5669%" y="725" width="0.1018%" height="15" fill="rgb(234,0,32)" fg:x="11116" fg:w="17"/><text x="66.8169%" y="735.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (17 samples, 0.10%)</title><rect x="66.5669%" y="709" width="0.1018%" height="15" fill="rgb(206,20,16)" fg:x="11116" fg:w="17"/><text x="66.8169%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (17 samples, 0.10%)</title><rect x="66.5669%" y="693" width="0.1018%" height="15" fill="rgb(244,172,18)" fg:x="11116" fg:w="17"/><text x="66.8169%" y="703.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (17 samples, 0.10%)</title><rect x="66.5669%" y="677" width="0.1018%" height="15" fill="rgb(254,133,1)" fg:x="11116" fg:w="17"/><text x="66.8169%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.01%)</title><rect x="66.6567%" y="661" width="0.0120%" height="15" fill="rgb(222,206,41)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="66.6567%" y="645" width="0.0120%" height="15" fill="rgb(212,3,42)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="66.6567%" y="629" width="0.0120%" height="15" fill="rgb(241,11,4)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="639.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.01%)</title><rect x="66.6567%" y="613" width="0.0120%" height="15" fill="rgb(205,19,26)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="66.6567%" y="597" width="0.0120%" height="15" fill="rgb(210,179,32)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="66.6567%" y="581" width="0.0120%" height="15" fill="rgb(227,116,49)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="66.6567%" y="565" width="0.0120%" height="15" fill="rgb(211,146,6)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="66.6567%" y="549" width="0.0120%" height="15" fill="rgb(219,44,39)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="66.6567%" y="533" width="0.0120%" height="15" fill="rgb(234,128,11)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="66.6567%" y="517" width="0.0120%" height="15" fill="rgb(220,183,53)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="66.6567%" y="501" width="0.0120%" height="15" fill="rgb(213,219,32)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="66.6567%" y="485" width="0.0120%" height="15" fill="rgb(232,156,16)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="66.6567%" y="469" width="0.0120%" height="15" fill="rgb(246,135,34)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="66.6567%" y="453" width="0.0120%" height="15" fill="rgb(241,99,0)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="463.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="66.6567%" y="437" width="0.0120%" height="15" fill="rgb(222,103,45)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="447.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="66.6567%" y="421" width="0.0120%" height="15" fill="rgb(212,57,4)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="431.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="66.6567%" y="405" width="0.0120%" height="15" fill="rgb(215,68,47)" fg:x="11131" fg:w="2"/><text x="66.9067%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (20 samples, 0.12%)</title><rect x="66.5609%" y="853" width="0.1198%" height="15" fill="rgb(230,84,2)" fg:x="11115" fg:w="20"/><text x="66.8109%" y="863.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (20 samples, 0.12%)</title><rect x="66.5609%" y="837" width="0.1198%" height="15" fill="rgb(220,102,14)" fg:x="11115" fg:w="20"/><text x="66.8109%" y="847.50"></text></g><g><title>&lt;veilid_core::rpc_processor::destination::Destination as core::fmt::Debug&gt;::fmt (20 samples, 0.12%)</title><rect x="66.5609%" y="821" width="0.1198%" height="15" fill="rgb(240,10,32)" fg:x="11115" fg:w="20"/><text x="66.8109%" y="831.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (20 samples, 0.12%)</title><rect x="66.5609%" y="805" width="0.1198%" height="15" fill="rgb(215,47,27)" fg:x="11115" fg:w="20"/><text x="66.8109%" y="815.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (20 samples, 0.12%)</title><rect x="66.5609%" y="789" width="0.1198%" height="15" fill="rgb(233,188,43)" fg:x="11115" fg:w="20"/><text x="66.8109%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (20 samples, 0.12%)</title><rect x="66.5609%" y="773" width="0.1198%" height="15" fill="rgb(253,190,1)" fg:x="11115" fg:w="20"/><text x="66.8109%" y="783.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (20 samples, 0.12%)</title><rect x="66.5609%" y="757" width="0.1198%" height="15" fill="rgb(206,114,52)" fg:x="11115" fg:w="20"/><text x="66.8109%" y="767.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.01%)</title><rect x="66.6687%" y="741" width="0.0120%" height="15" fill="rgb(233,120,37)" fg:x="11133" fg:w="2"/><text x="66.9187%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="66.6687%" y="725" width="0.0120%" height="15" fill="rgb(214,52,39)" fg:x="11133" fg:w="2"/><text x="66.9187%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="66.6687%" y="709" width="0.0120%" height="15" fill="rgb(223,80,29)" fg:x="11133" fg:w="2"/><text x="66.9187%" y="719.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.01%)</title><rect x="66.6687%" y="693" width="0.0120%" height="15" fill="rgb(230,101,40)" fg:x="11133" fg:w="2"/><text x="66.9187%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="66.6687%" y="677" width="0.0120%" height="15" fill="rgb(219,211,8)" fg:x="11133" fg:w="2"/><text x="66.9187%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="66.6687%" y="661" width="0.0120%" height="15" fill="rgb(252,126,28)" fg:x="11133" fg:w="2"/><text x="66.9187%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;L&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (22 samples, 0.13%)</title><rect x="66.5609%" y="1189" width="0.1317%" height="15" fill="rgb(215,56,38)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn tracing_subscriber::layer::Layer&lt;S&gt;+core::marker::Send+core::marker::Sync&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (22 samples, 0.13%)</title><rect x="66.5609%" y="1173" width="0.1317%" height="15" fill="rgb(249,55,44)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (22 samples, 0.13%)</title><rect x="66.5609%" y="1157" width="0.1317%" height="15" fill="rgb(220,221,32)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="1167.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt;::did_enable (22 samples, 0.13%)</title><rect x="66.5609%" y="1141" width="0.1317%" height="15" fill="rgb(212,216,41)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22 samples, 0.13%)</title><rect x="66.5609%" y="1125" width="0.1317%" height="15" fill="rgb(228,213,43)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.13%)</title><rect x="66.5609%" y="1109" width="0.1317%" height="15" fill="rgb(211,31,26)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="1119.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt;::did_enable::{{closure}} (22 samples, 0.13%)</title><rect x="66.5609%" y="1093" width="0.1317%" height="15" fill="rgb(229,202,19)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="1103.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::FilterState::did_enable (22 samples, 0.13%)</title><rect x="66.5609%" y="1077" width="0.1317%" height="15" fill="rgb(229,105,46)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span::{{closure}} (22 samples, 0.13%)</title><rect x="66.5609%" y="1061" width="0.1317%" height="15" fill="rgb(235,108,1)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="1071.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (22 samples, 0.13%)</title><rect x="66.5609%" y="1045" width="0.1317%" height="15" fill="rgb(245,111,35)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="1055.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (22 samples, 0.13%)</title><rect x="66.5609%" y="1029" width="0.1317%" height="15" fill="rgb(219,185,31)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="1039.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (22 samples, 0.13%)</title><rect x="66.5609%" y="1013" width="0.1317%" height="15" fill="rgb(214,4,43)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="1023.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (22 samples, 0.13%)</title><rect x="66.5609%" y="997" width="0.1317%" height="15" fill="rgb(235,227,40)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="1007.50"></text></g><g><title>tracing_core::span::Attributes::record (22 samples, 0.13%)</title><rect x="66.5609%" y="981" width="0.1317%" height="15" fill="rgb(230,88,30)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="991.50"></text></g><g><title>tracing_core::field::ValueSet::record (22 samples, 0.13%)</title><rect x="66.5609%" y="965" width="0.1317%" height="15" fill="rgb(216,217,1)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="975.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (22 samples, 0.13%)</title><rect x="66.5609%" y="949" width="0.1317%" height="15" fill="rgb(248,139,50)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="959.50"></text></g><g><title>&lt;tracing_core::field::DebugValue&lt;T&gt; as tracing_core::field::Value&gt;::record (22 samples, 0.13%)</title><rect x="66.5609%" y="933" width="0.1317%" height="15" fill="rgb(233,1,21)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (22 samples, 0.13%)</title><rect x="66.5609%" y="917" width="0.1317%" height="15" fill="rgb(215,183,12)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="927.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (22 samples, 0.13%)</title><rect x="66.5609%" y="901" width="0.1317%" height="15" fill="rgb(229,104,42)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="911.50"></text></g><g><title>core::fmt::Write::write_fmt (22 samples, 0.13%)</title><rect x="66.5609%" y="885" width="0.1317%" height="15" fill="rgb(243,34,48)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="895.50"></text></g><g><title>core::fmt::write (22 samples, 0.13%)</title><rect x="66.5609%" y="869" width="0.1317%" height="15" fill="rgb(239,11,44)" fg:x="11115" fg:w="22"/><text x="66.8109%" y="879.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (2 samples, 0.01%)</title><rect x="66.6806%" y="853" width="0.0120%" height="15" fill="rgb(231,98,35)" fg:x="11135" fg:w="2"/><text x="66.9306%" y="863.50"></text></g><g><title>nu_ansi_term::display::AnsiGenericString&lt;S&gt;::write_to_any (2 samples, 0.01%)</title><rect x="66.6806%" y="837" width="0.0120%" height="15" fill="rgb(233,28,25)" fg:x="11135" fg:w="2"/><text x="66.9306%" y="847.50"></text></g><g><title>tracing::span::Span::new (24 samples, 0.14%)</title><rect x="66.5609%" y="1301" width="0.1437%" height="15" fill="rgb(234,123,11)" fg:x="11115" fg:w="24"/><text x="66.8109%" y="1311.50"></text></g><g><title>tracing_core::dispatcher::get_default (24 samples, 0.14%)</title><rect x="66.5609%" y="1285" width="0.1437%" height="15" fill="rgb(220,69,3)" fg:x="11115" fg:w="24"/><text x="66.8109%" y="1295.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (24 samples, 0.14%)</title><rect x="66.5609%" y="1269" width="0.1437%" height="15" fill="rgb(214,64,36)" fg:x="11115" fg:w="24"/><text x="66.8109%" y="1279.50"></text></g><g><title>tracing::span::Span::new_with (24 samples, 0.14%)</title><rect x="66.5609%" y="1253" width="0.1437%" height="15" fill="rgb(211,138,32)" fg:x="11115" fg:w="24"/><text x="66.8109%" y="1263.50"></text></g><g><title>tracing::span::Span::make_with (24 samples, 0.14%)</title><rect x="66.5609%" y="1237" width="0.1437%" height="15" fill="rgb(213,118,47)" fg:x="11115" fg:w="24"/><text x="66.8109%" y="1247.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (24 samples, 0.14%)</title><rect x="66.5609%" y="1221" width="0.1437%" height="15" fill="rgb(243,124,49)" fg:x="11115" fg:w="24"/><text x="66.8109%" y="1231.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (24 samples, 0.14%)</title><rect x="66.5609%" y="1205" width="0.1437%" height="15" fill="rgb(221,30,28)" fg:x="11115" fg:w="24"/><text x="66.8109%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.01%)</title><rect x="66.6926%" y="1189" width="0.0120%" height="15" fill="rgb(246,37,13)" fg:x="11137" fg:w="2"/><text x="66.9426%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (2 samples, 0.01%)</title><rect x="66.6926%" y="1173" width="0.0120%" height="15" fill="rgb(249,66,14)" fg:x="11137" fg:w="2"/><text x="66.9426%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.01%)</title><rect x="66.6926%" y="1157" width="0.0120%" height="15" fill="rgb(213,166,5)" fg:x="11137" fg:w="2"/><text x="66.9426%" y="1167.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span::{{closure}} (2 samples, 0.01%)</title><rect x="66.6926%" y="1141" width="0.0120%" height="15" fill="rgb(221,66,24)" fg:x="11137" fg:w="2"/><text x="66.9426%" y="1151.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::statement::{{closure}} (32 samples, 0.19%)</title><rect x="66.5190%" y="1317" width="0.1916%" height="15" fill="rgb(210,132,17)" fg:x="11108" fg:w="32"/><text x="66.7690%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::validate_rpc_operation (7 samples, 0.04%)</title><rect x="66.7106%" y="1317" width="0.0419%" height="15" fill="rgb(243,202,5)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation::RPCOperation::validate (7 samples, 0.04%)</title><rect x="66.7106%" y="1301" width="0.0419%" height="15" fill="rgb(233,70,48)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation::RPCOperationKind::validate (7 samples, 0.04%)</title><rect x="66.7106%" y="1285" width="0.0419%" height="15" fill="rgb(238,41,26)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1295.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::answer::RPCAnswer::validate (7 samples, 0.04%)</title><rect x="66.7106%" y="1269" width="0.0419%" height="15" fill="rgb(241,19,31)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1279.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::answer::RPCAnswerDetail::validate (7 samples, 0.04%)</title><rect x="66.7106%" y="1253" width="0.0419%" height="15" fill="rgb(214,76,10)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1263.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation_find_node::RPCOperationFindNodeA::validate (7 samples, 0.04%)</title><rect x="66.7106%" y="1237" width="0.0419%" height="15" fill="rgb(254,202,22)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1247.50"></text></g><g><title>veilid_core::routing_table::types::peer_info::PeerInfo::validate_vec (7 samples, 0.04%)</title><rect x="66.7106%" y="1221" width="0.0419%" height="15" fill="rgb(214,72,24)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1231.50"></text></g><g><title>veilid_core::routing_table::types::peer_info::PeerInfo::validate (7 samples, 0.04%)</title><rect x="66.7106%" y="1205" width="0.0419%" height="15" fill="rgb(221,92,46)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1215.50"></text></g><g><title>veilid_core::routing_table::types::signed_node_info::SignedNodeInfo::validate (7 samples, 0.04%)</title><rect x="66.7106%" y="1189" width="0.0419%" height="15" fill="rgb(246,13,50)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1199.50"></text></g><g><title>veilid_core::routing_table::types::signed_direct_node_info::SignedDirectNodeInfo::validate (7 samples, 0.04%)</title><rect x="66.7106%" y="1173" width="0.0419%" height="15" fill="rgb(240,165,38)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1183.50"></text></g><g><title>veilid_core::crypto::Crypto::verify_signatures (7 samples, 0.04%)</title><rect x="66.7106%" y="1157" width="0.0419%" height="15" fill="rgb(241,24,51)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1167.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::verify (7 samples, 0.04%)</title><rect x="66.7106%" y="1141" width="0.0419%" height="15" fill="rgb(227,51,44)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1151.50"></text></g><g><title>ed25519_dalek::public::PublicKey::verify_prehashed (7 samples, 0.04%)</title><rect x="66.7106%" y="1125" width="0.0419%" height="15" fill="rgb(231,121,3)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1135.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::compress (7 samples, 0.04%)</title><rect x="66.7106%" y="1109" width="0.0419%" height="15" fill="rgb(245,3,41)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1119.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::invert (7 samples, 0.04%)</title><rect x="66.7106%" y="1093" width="0.0419%" height="15" fill="rgb(214,13,26)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1103.50"></text></g><g><title>curve25519_dalek::field::&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (7 samples, 0.04%)</title><rect x="66.7106%" y="1077" width="0.0419%" height="15" fill="rgb(252,75,11)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1087.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (7 samples, 0.04%)</title><rect x="66.7106%" y="1061" width="0.0419%" height="15" fill="rgb(218,226,17)" fg:x="11140" fg:w="7"/><text x="66.9606%" y="1071.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::cached_dh (4 samples, 0.02%)</title><rect x="66.7645%" y="1301" width="0.0240%" height="15" fill="rgb(248,89,38)" fg:x="11149" fg:w="4"/><text x="67.0145%" y="1311.50"></text></g><g><title>veilid_core::crypto::Crypto::cached_dh_internal (4 samples, 0.02%)</title><rect x="66.7645%" y="1285" width="0.0240%" height="15" fill="rgb(237,73,46)" fg:x="11149" fg:w="4"/><text x="67.0145%" y="1295.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::compute_dh (4 samples, 0.02%)</title><rect x="66.7645%" y="1269" width="0.0240%" height="15" fill="rgb(242,78,33)" fg:x="11149" fg:w="4"/><text x="67.0145%" y="1279.50"></text></g><g><title>x25519_dalek::x25519::StaticSecret::diffie_hellman (3 samples, 0.02%)</title><rect x="66.7705%" y="1253" width="0.0180%" height="15" fill="rgb(235,60,3)" fg:x="11150" fg:w="3"/><text x="67.0205%" y="1263.50"></text></g><g><title>curve25519_dalek::montgomery::&lt;impl core::ops::arith::Mul&lt;curve25519_dalek::montgomery::MontgomeryPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (3 samples, 0.02%)</title><rect x="66.7705%" y="1237" width="0.0180%" height="15" fill="rgb(216,172,19)" fg:x="11150" fg:w="3"/><text x="67.0205%" y="1247.50"></text></g><g><title>curve25519_dalek::montgomery::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (3 samples, 0.02%)</title><rect x="66.7705%" y="1221" width="0.0180%" height="15" fill="rgb(227,6,42)" fg:x="11150" fg:w="3"/><text x="67.0205%" y="1231.50"></text></g><g><title>&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (3 samples, 0.02%)</title><rect x="66.7705%" y="1205" width="0.0180%" height="15" fill="rgb(223,207,42)" fg:x="11150" fg:w="3"/><text x="67.0205%" y="1215.50"></text></g><g><title>curve25519_dalek::montgomery::differential_add_and_double (3 samples, 0.02%)</title><rect x="66.7705%" y="1189" width="0.0180%" height="15" fill="rgb(246,138,30)" fg:x="11150" fg:w="3"/><text x="67.0205%" y="1199.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (3 samples, 0.02%)</title><rect x="66.7705%" y="1173" width="0.0180%" height="15" fill="rgb(251,199,47)" fg:x="11150" fg:w="3"/><text x="67.0205%" y="1183.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::apply_keystream::{{closure}} (2 samples, 0.01%)</title><rect x="66.8783%" y="1093" width="0.0120%" height="15" fill="rgb(228,218,44)" fg:x="11168" fg:w="2"/><text x="67.1283%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.01%)</title><rect x="66.8962%" y="1045" width="0.0120%" height="15" fill="rgb(220,68,6)" fg:x="11171" fg:w="2"/><text x="67.1462%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (8 samples, 0.05%)</title><rect x="66.8663%" y="1109" width="0.0479%" height="15" fill="rgb(240,60,26)" fg:x="11166" fg:w="8"/><text x="67.1163%" y="1119.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (4 samples, 0.02%)</title><rect x="66.8902%" y="1093" width="0.0240%" height="15" fill="rgb(211,200,19)" fg:x="11170" fg:w="4"/><text x="67.1402%" y="1103.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (4 samples, 0.02%)</title><rect x="66.8902%" y="1077" width="0.0240%" height="15" fill="rgb(242,145,30)" fg:x="11170" fg:w="4"/><text x="67.1402%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (4 samples, 0.02%)</title><rect x="66.8902%" y="1061" width="0.0240%" height="15" fill="rgb(225,64,13)" fg:x="11170" fg:w="4"/><text x="67.1402%" y="1071.50"></text></g><g><title>core::cmp::min (4 samples, 0.02%)</title><rect x="66.9262%" y="1093" width="0.0240%" height="15" fill="rgb(218,103,35)" fg:x="11176" fg:w="4"/><text x="67.1762%" y="1103.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.02%)</title><rect x="66.9262%" y="1077" width="0.0240%" height="15" fill="rgb(216,93,46)" fg:x="11176" fg:w="4"/><text x="67.1762%" y="1087.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (2 samples, 0.01%)</title><rect x="66.9501%" y="1093" width="0.0120%" height="15" fill="rgb(225,159,27)" fg:x="11180" fg:w="2"/><text x="67.2001%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.13%)</title><rect x="66.8423%" y="1141" width="0.1258%" height="15" fill="rgb(225,204,11)" fg:x="11162" fg:w="21"/><text x="67.0923%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (19 samples, 0.11%)</title><rect x="66.8543%" y="1125" width="0.1138%" height="15" fill="rgb(205,56,4)" fg:x="11164" fg:w="19"/><text x="67.1043%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::ChunksMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (9 samples, 0.05%)</title><rect x="66.9142%" y="1109" width="0.0539%" height="15" fill="rgb(206,6,35)" fg:x="11174" fg:w="9"/><text x="67.1642%" y="1119.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="66.9741%" y="1141" width="0.0180%" height="15" fill="rgb(247,73,52)" fg:x="11184" fg:w="3"/><text x="67.2241%" y="1151.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="67.0160%" y="1125" width="0.0180%" height="15" fill="rgb(246,97,4)" fg:x="11191" fg:w="3"/><text x="67.2660%" y="1135.50"></text></g><g><title>[veilid-server] (11 samples, 0.07%)</title><rect x="67.1537%" y="1093" width="0.0659%" height="15" fill="rgb(212,37,15)" fg:x="11214" fg:w="11"/><text x="67.4037%" y="1103.50"></text></g><g><title>__memcpy_avx_unaligned_erms (32 samples, 0.19%)</title><rect x="67.2196%" y="1093" width="0.1916%" height="15" fill="rgb(208,130,40)" fg:x="11225" fg:w="32"/><text x="67.4696%" y="1103.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="67.5549%" y="1077" width="0.0180%" height="15" fill="rgb(236,55,29)" fg:x="11281" fg:w="3"/><text x="67.8049%" y="1087.50"></text></g><g><title>chacha20::backend::avx2::StateWord::add_epi32 (49 samples, 0.29%)</title><rect x="67.4112%" y="1093" width="0.2934%" height="15" fill="rgb(209,156,45)" fg:x="11257" fg:w="49"/><text x="67.6612%" y="1103.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (21 samples, 0.13%)</title><rect x="67.5789%" y="1077" width="0.1258%" height="15" fill="rgb(249,107,4)" fg:x="11285" fg:w="21"/><text x="67.8289%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (5 samples, 0.03%)</title><rect x="67.6747%" y="1061" width="0.0299%" height="15" fill="rgb(227,7,13)" fg:x="11301" fg:w="5"/><text x="67.9247%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="67.8544%" y="1077" width="0.0240%" height="15" fill="rgb(250,129,14)" fg:x="11331" fg:w="4"/><text x="68.1044%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.01%)</title><rect x="67.8783%" y="1077" width="0.0120%" height="15" fill="rgb(229,92,13)" fg:x="11335" fg:w="2"/><text x="68.1283%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.01%)</title><rect x="67.8903%" y="1077" width="0.0120%" height="15" fill="rgb(245,98,39)" fg:x="11337" fg:w="2"/><text x="68.1403%" y="1087.50"></text></g><g><title>chacha20::backend::avx2::StateWord::rol (54 samples, 0.32%)</title><rect x="67.7047%" y="1093" width="0.3234%" height="15" fill="rgb(234,135,48)" fg:x="11306" fg:w="54"/><text x="67.9547%" y="1103.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (21 samples, 0.13%)</title><rect x="67.9023%" y="1077" width="0.1258%" height="15" fill="rgb(230,98,28)" fg:x="11339" fg:w="21"/><text x="68.1523%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (6 samples, 0.04%)</title><rect x="67.9921%" y="1061" width="0.0359%" height="15" fill="rgb(223,121,0)" fg:x="11354" fg:w="6"/><text x="68.2421%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="68.1238%" y="1077" width="0.0120%" height="15" fill="rgb(234,173,33)" fg:x="11376" fg:w="2"/><text x="68.3738%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (6 samples, 0.04%)</title><rect x="68.1358%" y="1077" width="0.0359%" height="15" fill="rgb(245,47,8)" fg:x="11378" fg:w="6"/><text x="68.3858%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.02%)</title><rect x="68.1538%" y="1061" width="0.0180%" height="15" fill="rgb(205,17,20)" fg:x="11381" fg:w="3"/><text x="68.4038%" y="1071.50"></text></g><g><title>chacha20::backend::avx2::StateWord::rol_16 (91 samples, 0.54%)</title><rect x="68.0280%" y="1093" width="0.5449%" height="15" fill="rgb(232,151,16)" fg:x="11360" fg:w="91"/><text x="68.2780%" y="1103.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi8 (67 samples, 0.40%)</title><rect x="68.1717%" y="1077" width="0.4012%" height="15" fill="rgb(208,30,32)" fg:x="11384" fg:w="67"/><text x="68.4217%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (47 samples, 0.28%)</title><rect x="68.2915%" y="1061" width="0.2815%" height="15" fill="rgb(254,26,3)" fg:x="11404" fg:w="47"/><text x="68.5415%" y="1071.50"></text></g><g><title>core::core_arch::simd::i8x32::new (22 samples, 0.13%)</title><rect x="68.4412%" y="1045" width="0.1317%" height="15" fill="rgb(240,177,30)" fg:x="11429" fg:w="22"/><text x="68.6912%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="68.6688%" y="1077" width="0.0180%" height="15" fill="rgb(248,76,44)" fg:x="11467" fg:w="3"/><text x="68.9188%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (6 samples, 0.04%)</title><rect x="68.6867%" y="1077" width="0.0359%" height="15" fill="rgb(241,186,54)" fg:x="11470" fg:w="6"/><text x="68.9367%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (4 samples, 0.02%)</title><rect x="68.6987%" y="1061" width="0.0240%" height="15" fill="rgb(249,171,29)" fg:x="11472" fg:w="4"/><text x="68.9487%" y="1071.50"></text></g><g><title>chacha20::backend::avx2::StateWord::rol_8 (92 samples, 0.55%)</title><rect x="68.5730%" y="1093" width="0.5509%" height="15" fill="rgb(237,151,44)" fg:x="11451" fg:w="92"/><text x="68.8230%" y="1103.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi8 (67 samples, 0.40%)</title><rect x="68.7227%" y="1077" width="0.4012%" height="15" fill="rgb(228,174,30)" fg:x="11476" fg:w="67"/><text x="68.9727%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (47 samples, 0.28%)</title><rect x="68.8424%" y="1061" width="0.2815%" height="15" fill="rgb(252,14,37)" fg:x="11496" fg:w="47"/><text x="69.0924%" y="1071.50"></text></g><g><title>core::core_arch::simd::i8x32::new (22 samples, 0.13%)</title><rect x="68.9922%" y="1045" width="0.1317%" height="15" fill="rgb(207,111,40)" fg:x="11521" fg:w="22"/><text x="69.2422%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7 samples, 0.04%)</title><rect x="69.2616%" y="1077" width="0.0419%" height="15" fill="rgb(248,171,54)" fg:x="11566" fg:w="7"/><text x="69.5116%" y="1087.50"></text></g><g><title>chacha20::backend::avx2::StateWord::xor (50 samples, 0.30%)</title><rect x="69.1239%" y="1093" width="0.2994%" height="15" fill="rgb(211,127,2)" fg:x="11543" fg:w="50"/><text x="69.3739%" y="1103.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (20 samples, 0.12%)</title><rect x="69.3036%" y="1077" width="0.1198%" height="15" fill="rgb(236,87,47)" fg:x="11573" fg:w="20"/><text x="69.5536%" y="1087.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (9 samples, 0.05%)</title><rect x="69.3694%" y="1061" width="0.0539%" height="15" fill="rgb(223,190,45)" fg:x="11584" fg:w="9"/><text x="69.6194%" y="1071.50"></text></g><g><title>chacha20::backend::avx2::add_xor_rot (395 samples, 2.37%)</title><rect x="67.0699%" y="1109" width="2.3654%" height="15" fill="rgb(215,5,16)" fg:x="11200" fg:w="395"/><text x="67.3199%" y="1119.50">ch..</text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.01%)</title><rect x="69.4233%" y="1093" width="0.0120%" height="15" fill="rgb(252,82,33)" fg:x="11593" fg:w="2"/><text x="69.6733%" y="1103.50"></text></g><g><title>[veilid-server] (2 samples, 0.01%)</title><rect x="69.4652%" y="1093" width="0.0120%" height="15" fill="rgb(247,213,44)" fg:x="11600" fg:w="2"/><text x="69.7152%" y="1103.50"></text></g><g><title>__memcpy_avx_unaligned_erms (13 samples, 0.08%)</title><rect x="69.4772%" y="1093" width="0.0778%" height="15" fill="rgb(205,196,44)" fg:x="11602" fg:w="13"/><text x="69.7272%" y="1103.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="69.6030%" y="1077" width="0.0120%" height="15" fill="rgb(237,96,54)" fg:x="11623" fg:w="2"/><text x="69.8530%" y="1087.50"></text></g><g><title>chacha20::backend::avx2::cols_to_rows (42 samples, 0.25%)</title><rect x="69.4353%" y="1109" width="0.2515%" height="15" fill="rgb(230,113,34)" fg:x="11595" fg:w="42"/><text x="69.6853%" y="1119.50"></text></g><g><title>chacha20::backend::avx2::StateWord::shuffle_epi32 (22 samples, 0.13%)</title><rect x="69.5551%" y="1093" width="0.1317%" height="15" fill="rgb(221,224,12)" fg:x="11615" fg:w="22"/><text x="69.8051%" y="1103.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (12 samples, 0.07%)</title><rect x="69.6149%" y="1077" width="0.0719%" height="15" fill="rgb(219,112,44)" fg:x="11625" fg:w="12"/><text x="69.8649%" y="1087.50"></text></g><g><title>[veilid-server] (2 samples, 0.01%)</title><rect x="69.7108%" y="1093" width="0.0120%" height="15" fill="rgb(210,31,13)" fg:x="11641" fg:w="2"/><text x="69.9608%" y="1103.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="69.7227%" y="1093" width="0.0120%" height="15" fill="rgb(230,25,16)" fg:x="11643" fg:w="2"/><text x="69.9727%" y="1103.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="69.7946%" y="1077" width="0.0120%" height="15" fill="rgb(246,108,53)" fg:x="11655" fg:w="2"/><text x="70.0446%" y="1087.50"></text></g><g><title>chacha20::backend::avx2::double_quarter_round (467 samples, 2.80%)</title><rect x="67.0399%" y="1125" width="2.7966%" height="15" fill="rgb(241,172,50)" fg:x="11195" fg:w="467"/><text x="67.2899%" y="1135.50">ch..</text></g><g><title>chacha20::backend::avx2::rows_to_cols (25 samples, 0.15%)</title><rect x="69.6868%" y="1109" width="0.1497%" height="15" fill="rgb(235,141,10)" fg:x="11637" fg:w="25"/><text x="69.9368%" y="1119.50"></text></g><g><title>chacha20::backend::avx2::StateWord::shuffle_epi32 (17 samples, 0.10%)</title><rect x="69.7347%" y="1093" width="0.1018%" height="15" fill="rgb(220,174,43)" fg:x="11645" fg:w="17"/><text x="69.9847%" y="1103.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (5 samples, 0.03%)</title><rect x="69.8066%" y="1077" width="0.0299%" height="15" fill="rgb(215,181,40)" fg:x="11657" fg:w="5"/><text x="70.0566%" y="1087.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::rounds (477 samples, 2.86%)</title><rect x="66.9920%" y="1141" width="2.8565%" height="15" fill="rgb(230,97,2)" fg:x="11187" fg:w="477"/><text x="67.2420%" y="1151.50">ch..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="69.8365%" y="1125" width="0.0120%" height="15" fill="rgb(211,25,27)" fg:x="11662" fg:w="2"/><text x="70.0865%" y="1135.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="69.8365%" y="1109" width="0.0120%" height="15" fill="rgb(230,87,26)" fg:x="11662" fg:w="2"/><text x="70.0865%" y="1119.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="69.8365%" y="1093" width="0.0120%" height="15" fill="rgb(227,160,17)" fg:x="11662" fg:w="2"/><text x="70.0865%" y="1103.50"></text></g><g><title>chacha20::backend::avx2::iv_setup (3 samples, 0.02%)</title><rect x="69.8485%" y="1141" width="0.0180%" height="15" fill="rgb(244,85,34)" fg:x="11664" fg:w="3"/><text x="70.0985%" y="1151.50"></text></g><g><title>core::cmp::min (3 samples, 0.02%)</title><rect x="69.8904%" y="1093" width="0.0180%" height="15" fill="rgb(207,70,0)" fg:x="11671" fg:w="3"/><text x="70.1404%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (12 samples, 0.07%)</title><rect x="69.8784%" y="1141" width="0.0719%" height="15" fill="rgb(223,129,7)" fg:x="11669" fg:w="12"/><text x="70.1284%" y="1151.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (11 samples, 0.07%)</title><rect x="69.8844%" y="1125" width="0.0659%" height="15" fill="rgb(246,105,7)" fg:x="11670" fg:w="11"/><text x="70.1344%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (11 samples, 0.07%)</title><rect x="69.8844%" y="1109" width="0.0659%" height="15" fill="rgb(215,154,42)" fg:x="11670" fg:w="11"/><text x="70.1344%" y="1119.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (7 samples, 0.04%)</title><rect x="69.9084%" y="1093" width="0.0419%" height="15" fill="rgb(220,215,30)" fg:x="11674" fg:w="7"/><text x="70.1584%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::ChunksMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (7 samples, 0.04%)</title><rect x="69.9084%" y="1077" width="0.0419%" height="15" fill="rgb(228,81,51)" fg:x="11674" fg:w="7"/><text x="70.1584%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::len (2 samples, 0.01%)</title><rect x="69.9383%" y="1061" width="0.0120%" height="15" fill="rgb(247,71,54)" fg:x="11679" fg:w="2"/><text x="70.1883%" y="1071.50"></text></g><g><title>core::ptr::metadata::metadata (2 samples, 0.01%)</title><rect x="69.9383%" y="1045" width="0.0120%" height="15" fill="rgb(234,176,34)" fg:x="11679" fg:w="2"/><text x="70.1883%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (4 samples, 0.02%)</title><rect x="69.9563%" y="1141" width="0.0240%" height="15" fill="rgb(241,103,54)" fg:x="11682" fg:w="4"/><text x="70.2063%" y="1151.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="69.9563%" y="1125" width="0.0240%" height="15" fill="rgb(228,22,34)" fg:x="11682" fg:w="4"/><text x="70.2063%" y="1135.50"></text></g><g><title>chacha20::backend::autodetect::Core&lt;R&gt;::apply_keystream (535 samples, 3.20%)</title><rect x="66.7884%" y="1173" width="3.2038%" height="15" fill="rgb(241,179,48)" fg:x="11153" fg:w="535"/><text x="67.0384%" y="1183.50">cha..</text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::apply_keystream (535 samples, 3.20%)</title><rect x="66.7884%" y="1157" width="3.2038%" height="15" fill="rgb(235,167,37)" fg:x="11153" fg:w="535"/><text x="67.0384%" y="1167.50">cha..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.01%)</title><rect x="69.9802%" y="1141" width="0.0120%" height="15" fill="rgb(213,109,30)" fg:x="11686" fg:w="2"/><text x="70.2302%" y="1151.50"></text></g><g><title>chacha20::backend::avx2::StateWord::add_epi32 (2 samples, 0.01%)</title><rect x="69.9922%" y="1077" width="0.0120%" height="15" fill="rgb(222,172,16)" fg:x="11688" fg:w="2"/><text x="70.2422%" y="1087.50"></text></g><g><title>chacha20::backend::avx2::add_xor_rot (4 samples, 0.02%)</title><rect x="69.9922%" y="1093" width="0.0240%" height="15" fill="rgb(233,192,5)" fg:x="11688" fg:w="4"/><text x="70.2422%" y="1103.50"></text></g><g><title>chacha20::backend::avx2::double_quarter_round (5 samples, 0.03%)</title><rect x="69.9922%" y="1109" width="0.0299%" height="15" fill="rgb(247,189,41)" fg:x="11688" fg:w="5"/><text x="70.2422%" y="1119.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (541 samples, 3.24%)</title><rect x="66.7884%" y="1221" width="3.2397%" height="15" fill="rgb(218,134,47)" fg:x="11153" fg:w="541"/><text x="67.0384%" y="1231.50">cip..</text></g><g><title>&lt;chacha20::xchacha::XChaCha&lt;R&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (541 samples, 3.24%)</title><rect x="66.7884%" y="1205" width="3.2397%" height="15" fill="rgb(216,29,3)" fg:x="11153" fg:w="541"/><text x="67.0384%" y="1215.50">&lt;ch..</text></g><g><title>&lt;chacha20::chacha::ChaCha&lt;R,MC&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (541 samples, 3.24%)</title><rect x="66.7884%" y="1189" width="3.2397%" height="15" fill="rgb(246,140,12)" fg:x="11153" fg:w="541"/><text x="67.0384%" y="1199.50">&lt;ch..</text></g><g><title>chacha20::chacha::ChaCha&lt;R,MC&gt;::generate_block (6 samples, 0.04%)</title><rect x="69.9922%" y="1173" width="0.0359%" height="15" fill="rgb(230,136,11)" fg:x="11688" fg:w="6"/><text x="70.2422%" y="1183.50"></text></g><g><title>chacha20::backend::autodetect::Core&lt;R&gt;::generate (6 samples, 0.04%)</title><rect x="69.9922%" y="1157" width="0.0359%" height="15" fill="rgb(247,22,47)" fg:x="11688" fg:w="6"/><text x="70.2422%" y="1167.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::generate (6 samples, 0.04%)</title><rect x="69.9922%" y="1141" width="0.0359%" height="15" fill="rgb(218,84,22)" fg:x="11688" fg:w="6"/><text x="70.2422%" y="1151.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::rounds (6 samples, 0.04%)</title><rect x="69.9922%" y="1125" width="0.0359%" height="15" fill="rgb(216,87,39)" fg:x="11688" fg:w="6"/><text x="70.2422%" y="1135.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (5 samples, 0.03%)</title><rect x="70.1479%" y="1141" width="0.0299%" height="15" fill="rgb(221,178,8)" fg:x="11714" fg:w="5"/><text x="70.3979%" y="1151.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (12 samples, 0.07%)</title><rect x="70.1779%" y="1141" width="0.0719%" height="15" fill="rgb(230,42,11)" fg:x="11719" fg:w="12"/><text x="70.4279%" y="1151.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (6 samples, 0.04%)</title><rect x="70.2138%" y="1125" width="0.0359%" height="15" fill="rgb(237,229,4)" fg:x="11725" fg:w="6"/><text x="70.4638%" y="1135.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (15 samples, 0.09%)</title><rect x="70.2557%" y="1125" width="0.0898%" height="15" fill="rgb(222,31,33)" fg:x="11732" fg:w="15"/><text x="70.5057%" y="1135.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (15 samples, 0.09%)</title><rect x="70.2557%" y="1109" width="0.0898%" height="15" fill="rgb(210,17,39)" fg:x="11732" fg:w="15"/><text x="70.5057%" y="1119.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (15 samples, 0.09%)</title><rect x="70.2557%" y="1093" width="0.0898%" height="15" fill="rgb(244,93,20)" fg:x="11732" fg:w="15"/><text x="70.5057%" y="1103.50"></text></g><g><title>core::core_arch::simd::i8x32::new (4 samples, 0.02%)</title><rect x="70.3216%" y="1077" width="0.0240%" height="15" fill="rgb(210,40,47)" fg:x="11743" fg:w="4"/><text x="70.5716%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (17 samples, 0.10%)</title><rect x="70.2497%" y="1141" width="0.1018%" height="15" fill="rgb(239,211,47)" fg:x="11731" fg:w="17"/><text x="70.4997%" y="1151.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.01%)</title><rect x="70.3515%" y="1141" width="0.0120%" height="15" fill="rgb(251,223,49)" fg:x="11748" fg:w="2"/><text x="70.6015%" y="1151.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (53 samples, 0.32%)</title><rect x="70.0521%" y="1157" width="0.3174%" height="15" fill="rgb(221,149,5)" fg:x="11698" fg:w="53"/><text x="70.3021%" y="1167.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="70.3695%" y="1157" width="0.0120%" height="15" fill="rgb(219,224,51)" fg:x="11751" fg:w="2"/><text x="70.6195%" y="1167.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (3 samples, 0.02%)</title><rect x="70.3874%" y="1157" width="0.0180%" height="15" fill="rgb(223,7,8)" fg:x="11754" fg:w="3"/><text x="70.6374%" y="1167.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.01%)</title><rect x="70.3934%" y="1141" width="0.0120%" height="15" fill="rgb(241,217,22)" fg:x="11755" fg:w="2"/><text x="70.6434%" y="1151.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="70.4054%" y="1157" width="0.0180%" height="15" fill="rgb(248,209,0)" fg:x="11757" fg:w="3"/><text x="70.6554%" y="1167.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (8 samples, 0.05%)</title><rect x="70.5791%" y="1125" width="0.0479%" height="15" fill="rgb(217,205,4)" fg:x="11786" fg:w="8"/><text x="70.8291%" y="1135.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (5 samples, 0.03%)</title><rect x="70.5970%" y="1109" width="0.0299%" height="15" fill="rgb(228,124,39)" fg:x="11789" fg:w="5"/><text x="70.8470%" y="1119.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (8 samples, 0.05%)</title><rect x="70.6270%" y="1125" width="0.0479%" height="15" fill="rgb(250,116,42)" fg:x="11794" fg:w="8"/><text x="70.8770%" y="1135.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.02%)</title><rect x="70.6509%" y="1109" width="0.0240%" height="15" fill="rgb(223,202,9)" fg:x="11798" fg:w="4"/><text x="70.9009%" y="1119.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (124 samples, 0.74%)</title><rect x="70.0281%" y="1173" width="0.7426%" height="15" fill="rgb(242,222,40)" fg:x="11694" fg:w="124"/><text x="70.2781%" y="1183.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (58 samples, 0.35%)</title><rect x="70.4234%" y="1157" width="0.3473%" height="15" fill="rgb(229,99,46)" fg:x="11760" fg:w="58"/><text x="70.6734%" y="1167.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (47 samples, 0.28%)</title><rect x="70.4893%" y="1141" width="0.2815%" height="15" fill="rgb(225,56,46)" fg:x="11771" fg:w="47"/><text x="70.7393%" y="1151.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (16 samples, 0.10%)</title><rect x="70.6749%" y="1125" width="0.0958%" height="15" fill="rgb(227,94,5)" fg:x="11802" fg:w="16"/><text x="70.9249%" y="1135.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (11 samples, 0.07%)</title><rect x="70.7048%" y="1109" width="0.0659%" height="15" fill="rgb(205,112,38)" fg:x="11807" fg:w="11"/><text x="70.9548%" y="1119.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (666 samples, 3.99%)</title><rect x="66.7884%" y="1237" width="3.9883%" height="15" fill="rgb(231,133,46)" fg:x="11153" fg:w="666"/><text x="67.0384%" y="1247.50">chac..</text></g><g><title>universal_hash::UniversalHash::update_padded (125 samples, 0.75%)</title><rect x="70.0281%" y="1221" width="0.7485%" height="15" fill="rgb(217,16,9)" fg:x="11694" fg:w="125"/><text x="70.2781%" y="1231.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update (125 samples, 0.75%)</title><rect x="70.0281%" y="1205" width="0.7485%" height="15" fill="rgb(249,173,9)" fg:x="11694" fg:w="125"/><text x="70.2781%" y="1215.50"></text></g><g><title>poly1305::backend::autodetect::State::compute_block (125 samples, 0.75%)</title><rect x="70.0281%" y="1189" width="0.7485%" height="15" fill="rgb(205,163,53)" fg:x="11694" fg:w="125"/><text x="70.2781%" y="1199.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::NewUniversalHash&gt;::new (2 samples, 0.01%)</title><rect x="70.7767%" y="1221" width="0.0120%" height="15" fill="rgb(217,54,41)" fg:x="11819" fg:w="2"/><text x="71.0267%" y="1231.50"></text></g><g><title>poly1305::backend::autodetect::State::new (2 samples, 0.01%)</title><rect x="70.7767%" y="1205" width="0.0120%" height="15" fill="rgb(228,216,12)" fg:x="11819" fg:w="2"/><text x="71.0267%" y="1215.50"></text></g><g><title>poly1305::backend::avx2::State::new (2 samples, 0.01%)</title><rect x="70.7767%" y="1189" width="0.0120%" height="15" fill="rgb(244,228,15)" fg:x="11819" fg:w="2"/><text x="71.0267%" y="1199.50"></text></g><g><title>chacha20::backend::avx2::add_xor_rot (7 samples, 0.04%)</title><rect x="70.7947%" y="1093" width="0.0419%" height="15" fill="rgb(221,176,53)" fg:x="11822" fg:w="7"/><text x="71.0447%" y="1103.50"></text></g><g><title>chacha20::backend::avx2::StateWord::rol_8 (2 samples, 0.01%)</title><rect x="70.8246%" y="1077" width="0.0120%" height="15" fill="rgb(205,94,34)" fg:x="11827" fg:w="2"/><text x="71.0746%" y="1087.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::rounds (9 samples, 0.05%)</title><rect x="70.7887%" y="1125" width="0.0539%" height="15" fill="rgb(213,110,48)" fg:x="11821" fg:w="9"/><text x="71.0387%" y="1135.50"></text></g><g><title>chacha20::backend::avx2::double_quarter_round (8 samples, 0.05%)</title><rect x="70.7947%" y="1109" width="0.0479%" height="15" fill="rgb(236,142,28)" fg:x="11822" fg:w="8"/><text x="71.0447%" y="1119.50"></text></g><g><title>chacha20::chacha::ChaCha&lt;R,MC&gt;::generate_block (10 samples, 0.06%)</title><rect x="70.7887%" y="1173" width="0.0599%" height="15" fill="rgb(225,135,29)" fg:x="11821" fg:w="10"/><text x="71.0387%" y="1183.50"></text></g><g><title>chacha20::backend::autodetect::Core&lt;R&gt;::generate (10 samples, 0.06%)</title><rect x="70.7887%" y="1157" width="0.0599%" height="15" fill="rgb(252,45,31)" fg:x="11821" fg:w="10"/><text x="71.0387%" y="1167.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::generate (10 samples, 0.06%)</title><rect x="70.7887%" y="1141" width="0.0599%" height="15" fill="rgb(211,187,50)" fg:x="11821" fg:w="10"/><text x="71.0387%" y="1151.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::encrypt_aead (679 samples, 4.07%)</title><rect x="66.7884%" y="1301" width="4.0661%" height="15" fill="rgb(229,109,7)" fg:x="11153" fg:w="679"/><text x="67.0384%" y="1311.50">&lt;vei..</text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::encrypt_in_place_aead (679 samples, 4.07%)</title><rect x="66.7884%" y="1285" width="4.0661%" height="15" fill="rgb(251,131,51)" fg:x="11153" fg:w="679"/><text x="67.0384%" y="1295.50">&lt;vei..</text></g><g><title>aead::AeadInPlace::encrypt_in_place (679 samples, 4.07%)</title><rect x="66.7884%" y="1269" width="4.0661%" height="15" fill="rgb(251,180,35)" fg:x="11153" fg:w="679"/><text x="67.0384%" y="1279.50">aead..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (679 samples, 4.07%)</title><rect x="66.7884%" y="1253" width="4.0661%" height="15" fill="rgb(211,46,32)" fg:x="11153" fg:w="679"/><text x="67.0384%" y="1263.50">&lt;cha..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (13 samples, 0.08%)</title><rect x="70.7767%" y="1237" width="0.0778%" height="15" fill="rgb(248,123,17)" fg:x="11819" fg:w="13"/><text x="71.0267%" y="1247.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (11 samples, 0.07%)</title><rect x="70.7887%" y="1221" width="0.0659%" height="15" fill="rgb(227,141,18)" fg:x="11821" fg:w="11"/><text x="71.0387%" y="1231.50"></text></g><g><title>&lt;chacha20::xchacha::XChaCha&lt;R&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (11 samples, 0.07%)</title><rect x="70.7887%" y="1205" width="0.0659%" height="15" fill="rgb(216,102,9)" fg:x="11821" fg:w="11"/><text x="71.0387%" y="1215.50"></text></g><g><title>&lt;chacha20::chacha::ChaCha&lt;R,MC&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (11 samples, 0.07%)</title><rect x="70.7887%" y="1189" width="0.0659%" height="15" fill="rgb(253,47,13)" fg:x="11821" fg:w="11"/><text x="71.0387%" y="1199.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::wrap_with_route (685 samples, 4.10%)</title><rect x="66.7645%" y="1317" width="4.1020%" height="15" fill="rgb(226,93,23)" fg:x="11149" fg:w="685"/><text x="67.0145%" y="1327.50">veil..</text></g><g><title>veilid_core::rpc_processor::RPCProcessor::get_sender_peer_info (2 samples, 0.01%)</title><rect x="70.8545%" y="1301" width="0.0120%" height="15" fill="rgb(247,104,17)" fg:x="11832" fg:w="2"/><text x="71.1045%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::RPCProcessor::get_sender_peer_info::{{closure}} (2 samples, 0.01%)</title><rect x="70.8545%" y="1285" width="0.0120%" height="15" fill="rgb(233,203,26)" fg:x="11832" fg:w="2"/><text x="71.1045%" y="1295.50"></text></g><g><title>veilid_core::routing_table::RoutingTable::get_own_peer_info (2 samples, 0.01%)</title><rect x="70.8545%" y="1269" width="0.0120%" height="15" fill="rgb(244,98,49)" fg:x="11832" fg:w="2"/><text x="71.1045%" y="1279.50"></text></g><g><title>veilid_core::routing_table::routing_table_inner::RoutingTableInner::get_own_peer_info (2 samples, 0.01%)</title><rect x="70.8545%" y="1253" width="0.0120%" height="15" fill="rgb(235,134,22)" fg:x="11832" fg:w="2"/><text x="71.1045%" y="1263.50"></text></g><g><title>veilid_core::routing_table::routing_table_inner::RoutingTableInner::with_routing_domain (2 samples, 0.01%)</title><rect x="70.8545%" y="1237" width="0.0120%" height="15" fill="rgb(221,70,32)" fg:x="11832" fg:w="2"/><text x="71.1045%" y="1247.50"></text></g><g><title>veilid_core::routing_table::routing_table_inner::RoutingTableInner::get_own_peer_info::{{closure}} (2 samples, 0.01%)</title><rect x="70.8545%" y="1221" width="0.0120%" height="15" fill="rgb(238,15,50)" fg:x="11832" fg:w="2"/><text x="71.1045%" y="1231.50"></text></g><g><title>veilid_core::routing_table::routing_domains::RoutingDomainDetailCommon::with_peer_info (2 samples, 0.01%)</title><rect x="70.8545%" y="1205" width="0.0120%" height="15" fill="rgb(215,221,48)" fg:x="11832" fg:w="2"/><text x="71.1045%" y="1215.50"></text></g><g><title>veilid_core::routing_table::routing_table_inner::RoutingTableInner::get_own_peer_info::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="70.8545%" y="1189" width="0.0120%" height="15" fill="rgb(236,73,3)" fg:x="11832" fg:w="2"/><text x="71.1045%" y="1199.50"></text></g><g><title>&lt;veilid_core::routing_table::types::peer_info::PeerInfo as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="70.8545%" y="1173" width="0.0120%" height="15" fill="rgb(250,107,11)" fg:x="11832" fg:w="2"/><text x="71.1045%" y="1183.50"></text></g><g><title>&lt;veilid_core::routing_table::types::signed_node_info::SignedNodeInfo as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="70.8545%" y="1157" width="0.0120%" height="15" fill="rgb(242,39,14)" fg:x="11832" fg:w="2"/><text x="71.1045%" y="1167.50"></text></g><g><title>&lt;veilid_core::routing_table::types::signed_direct_node_info::SignedDirectNodeInfo as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="70.8545%" y="1141" width="0.0120%" height="15" fill="rgb(248,164,37)" fg:x="11832" fg:w="2"/><text x="71.1045%" y="1151.50"></text></g><g><title>veilid_core::rpc_processor::coders::node_info::decode_node_info (2 samples, 0.01%)</title><rect x="70.8665%" y="1317" width="0.0120%" height="15" fill="rgb(217,60,12)" fg:x="11834" fg:w="2"/><text x="71.1165%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::coders::dial_info_detail::decode_dial_info_detail (2 samples, 0.01%)</title><rect x="70.8665%" y="1301" width="0.0120%" height="15" fill="rgb(240,125,29)" fg:x="11834" fg:w="2"/><text x="71.1165%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::coders::dial_info::decode_dial_info (2 samples, 0.01%)</title><rect x="70.8665%" y="1285" width="0.0120%" height="15" fill="rgb(208,207,28)" fg:x="11834" fg:w="2"/><text x="71.1165%" y="1295.50"></text></g><g><title>veilid_core::network_manager::types::dial_info::DialInfo::try_ws (2 samples, 0.01%)</title><rect x="70.8665%" y="1269" width="0.0120%" height="15" fill="rgb(209,159,27)" fg:x="11834" fg:w="2"/><text x="71.1165%" y="1279.50"></text></g><g><title>&lt;veilid_tools::split_url::SplitUrl as core::str::traits::FromStr&gt;::from_str (2 samples, 0.01%)</title><rect x="70.8665%" y="1253" width="0.0120%" height="15" fill="rgb(251,176,53)" fg:x="11834" fg:w="2"/><text x="71.1165%" y="1263.50"></text></g><g><title>&lt;veilid_tools::split_url::SplitUrlPath as core::str::traits::FromStr&gt;::from_str (2 samples, 0.01%)</title><rect x="70.8665%" y="1237" width="0.0120%" height="15" fill="rgb(211,85,7)" fg:x="11834" fg:w="2"/><text x="71.1165%" y="1247.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::operation::RPCOperationKind::decode (2 samples, 0.01%)</title><rect x="70.8965%" y="1317" width="0.0120%" height="15" fill="rgb(216,64,54)" fg:x="11839" fg:w="2"/><text x="71.1465%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::statement::RPCStatement::decode (2 samples, 0.01%)</title><rect x="70.8965%" y="1301" width="0.0120%" height="15" fill="rgb(217,54,24)" fg:x="11839" fg:w="2"/><text x="71.1465%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::coders::operations::statement::RPCStatementDetail::decode (2 samples, 0.01%)</title><rect x="70.8965%" y="1285" width="0.0120%" height="15" fill="rgb(208,206,53)" fg:x="11839" fg:w="2"/><text x="71.1465%" y="1295.50"></text></g><g><title>veilid_core::rpc_processor::coders::peer_info::decode_peer_info (3 samples, 0.02%)</title><rect x="70.9204%" y="1317" width="0.0180%" height="15" fill="rgb(251,74,39)" fg:x="11843" fg:w="3"/><text x="71.1704%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::coders::signed_node_info::decode_signed_node_info (3 samples, 0.02%)</title><rect x="70.9204%" y="1301" width="0.0180%" height="15" fill="rgb(226,47,5)" fg:x="11843" fg:w="3"/><text x="71.1704%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::coders::signed_direct_node_info::decode_signed_direct_node_info (3 samples, 0.02%)</title><rect x="70.9204%" y="1285" width="0.0180%" height="15" fill="rgb(234,111,33)" fg:x="11843" fg:w="3"/><text x="71.1704%" y="1295.50"></text></g><g><title>veilid_core::rpc_processor::coders::node_info::decode_node_info (3 samples, 0.02%)</title><rect x="70.9204%" y="1269" width="0.0180%" height="15" fill="rgb(251,14,10)" fg:x="11843" fg:w="3"/><text x="71.1704%" y="1279.50"></text></g><g><title>veilid_core::rpc_processor::coders::dial_info_detail::decode_dial_info_detail (3 samples, 0.02%)</title><rect x="70.9204%" y="1253" width="0.0180%" height="15" fill="rgb(232,43,0)" fg:x="11843" fg:w="3"/><text x="71.1704%" y="1263.50"></text></g><g><title>veilid_core::rpc_processor::coders::dial_info::decode_dial_info (3 samples, 0.02%)</title><rect x="70.9204%" y="1237" width="0.0180%" height="15" fill="rgb(222,68,43)" fg:x="11843" fg:w="3"/><text x="71.1704%" y="1247.50"></text></g><g><title>veilid_core::rpc_processor::coders::signed_direct_node_info::decode_signed_direct_node_info (2 samples, 0.01%)</title><rect x="70.9384%" y="1317" width="0.0120%" height="15" fill="rgb(217,24,23)" fg:x="11846" fg:w="2"/><text x="71.1884%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::coders::node_info::decode_node_info (2 samples, 0.01%)</title><rect x="70.9384%" y="1301" width="0.0120%" height="15" fill="rgb(229,209,14)" fg:x="11846" fg:w="2"/><text x="71.1884%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::coders::dial_info_detail::decode_dial_info_detail (2 samples, 0.01%)</title><rect x="70.9384%" y="1285" width="0.0120%" height="15" fill="rgb(250,149,48)" fg:x="11846" fg:w="2"/><text x="71.1884%" y="1295.50"></text></g><g><title>veilid_core::rpc_processor::coders::dial_info::decode_dial_info (2 samples, 0.01%)</title><rect x="70.9384%" y="1269" width="0.0120%" height="15" fill="rgb(210,120,37)" fg:x="11846" fg:w="2"/><text x="71.1884%" y="1279.50"></text></g><g><title>veilid_core::network_manager::types::dial_info::DialInfo::try_ws (2 samples, 0.01%)</title><rect x="70.9384%" y="1253" width="0.0120%" height="15" fill="rgb(210,21,8)" fg:x="11846" fg:w="2"/><text x="71.1884%" y="1263.50"></text></g><g><title>&lt;veilid_tools::split_url::SplitUrl as core::str::traits::FromStr&gt;::from_str (2 samples, 0.01%)</title><rect x="70.9384%" y="1237" width="0.0120%" height="15" fill="rgb(243,145,7)" fg:x="11846" fg:w="2"/><text x="71.1884%" y="1247.50"></text></g><g><title>veilid_core::rpc_processor::operation_waiter::OperationWaiter&lt;T,C&gt;::complete_op_waiter::{{closure}} (2 samples, 0.01%)</title><rect x="70.9623%" y="1317" width="0.0120%" height="15" fill="rgb(238,178,32)" fg:x="11850" fg:w="2"/><text x="71.2123%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::operation_waiter::OperationWaiter&lt;T,C&gt;::complete_op_waiter::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="70.9623%" y="1301" width="0.0120%" height="15" fill="rgb(222,4,10)" fg:x="11850" fg:w="2"/><text x="71.2123%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::operation_waiter::OperationWaiter&lt;T,C&gt;::complete_op_waiter::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="70.9623%" y="1285" width="0.0120%" height="15" fill="rgb(239,7,37)" fg:x="11850" fg:w="2"/><text x="71.2123%" y="1295.50"></text></g><g><title>veilid_tools::eventual_value::EventualValue&lt;T&gt;::resolve (2 samples, 0.01%)</title><rect x="70.9623%" y="1269" width="0.0120%" height="15" fill="rgb(215,31,37)" fg:x="11850" fg:w="2"/><text x="71.2123%" y="1279.50"></text></g><g><title>veilid_tools::eventual_base::EventualBase::resolve_to_value (2 samples, 0.01%)</title><rect x="70.9623%" y="1253" width="0.0120%" height="15" fill="rgb(224,83,33)" fg:x="11850" fg:w="2"/><text x="71.2123%" y="1263.50"></text></g><g><title>veilid_core::rpc_processor::rpc_app_message::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_app_message::{{closure}} (3 samples, 0.02%)</title><rect x="70.9803%" y="1317" width="0.0180%" height="15" fill="rgb(239,55,3)" fg:x="11853" fg:w="3"/><text x="71.2303%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::rpc_app_message::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_app_message::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="70.9863%" y="1301" width="0.0120%" height="15" fill="rgb(247,92,11)" fg:x="11854" fg:w="2"/><text x="71.2363%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::rpc_app_message::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_app_message::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="70.9863%" y="1285" width="0.0120%" height="15" fill="rgb(239,200,7)" fg:x="11854" fg:w="2"/><text x="71.2363%" y="1295.50"></text></g><g><title>veilid_core::rpc_processor::rpc_app_message::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::rpc_call_app_message::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="71.0043%" y="1317" width="0.0180%" height="15" fill="rgb(227,115,8)" fg:x="11857" fg:w="3"/><text x="71.2543%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::rpc_app_message::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::rpc_call_app_message::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="71.0102%" y="1301" width="0.0120%" height="15" fill="rgb(215,189,27)" fg:x="11858" fg:w="2"/><text x="71.2602%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::rpc_find_node::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::rpc_call_find_node::{{closure}}::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="71.0282%" y="1317" width="0.0180%" height="15" fill="rgb(251,216,39)" fg:x="11861" fg:w="3"/><text x="71.2782%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (4 samples, 0.02%)</title><rect x="71.1240%" y="1141" width="0.0240%" height="15" fill="rgb(207,29,47)" fg:x="11877" fg:w="4"/><text x="71.3740%" y="1151.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (7 samples, 0.04%)</title><rect x="71.1480%" y="1141" width="0.0419%" height="15" fill="rgb(210,71,34)" fg:x="11881" fg:w="7"/><text x="71.3980%" y="1151.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.01%)</title><rect x="71.1779%" y="1125" width="0.0120%" height="15" fill="rgb(253,217,51)" fg:x="11886" fg:w="2"/><text x="71.4279%" y="1135.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (16 samples, 0.10%)</title><rect x="71.2138%" y="1125" width="0.0958%" height="15" fill="rgb(222,117,46)" fg:x="11892" fg:w="16"/><text x="71.4638%" y="1135.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (15 samples, 0.09%)</title><rect x="71.2198%" y="1109" width="0.0898%" height="15" fill="rgb(226,132,6)" fg:x="11893" fg:w="15"/><text x="71.4698%" y="1119.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (15 samples, 0.09%)</title><rect x="71.2198%" y="1093" width="0.0898%" height="15" fill="rgb(254,145,51)" fg:x="11893" fg:w="15"/><text x="71.4698%" y="1103.50"></text></g><g><title>core::core_arch::simd::i8x32::new (2 samples, 0.01%)</title><rect x="71.2977%" y="1077" width="0.0120%" height="15" fill="rgb(231,199,27)" fg:x="11906" fg:w="2"/><text x="71.5477%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (21 samples, 0.13%)</title><rect x="71.1899%" y="1141" width="0.1258%" height="15" fill="rgb(245,158,14)" fg:x="11888" fg:w="21"/><text x="71.4399%" y="1151.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.01%)</title><rect x="71.3156%" y="1141" width="0.0120%" height="15" fill="rgb(240,113,14)" fg:x="11909" fg:w="2"/><text x="71.5656%" y="1151.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (45 samples, 0.27%)</title><rect x="71.0701%" y="1157" width="0.2695%" height="15" fill="rgb(210,20,13)" fg:x="11868" fg:w="45"/><text x="71.3201%" y="1167.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.01%)</title><rect x="71.3276%" y="1141" width="0.0120%" height="15" fill="rgb(241,144,13)" fg:x="11911" fg:w="2"/><text x="71.5776%" y="1151.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (2 samples, 0.01%)</title><rect x="71.3276%" y="1125" width="0.0120%" height="15" fill="rgb(235,43,34)" fg:x="11911" fg:w="2"/><text x="71.5776%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (3 samples, 0.02%)</title><rect x="71.3576%" y="1157" width="0.0180%" height="15" fill="rgb(208,36,20)" fg:x="11916" fg:w="3"/><text x="71.6076%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="71.3576%" y="1141" width="0.0180%" height="15" fill="rgb(239,204,10)" fg:x="11916" fg:w="3"/><text x="71.6076%" y="1151.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="71.3576%" y="1125" width="0.0180%" height="15" fill="rgb(217,84,43)" fg:x="11916" fg:w="3"/><text x="71.6076%" y="1135.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (8 samples, 0.05%)</title><rect x="71.4654%" y="1125" width="0.0479%" height="15" fill="rgb(241,170,50)" fg:x="11934" fg:w="8"/><text x="71.7154%" y="1135.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.02%)</title><rect x="71.4953%" y="1109" width="0.0180%" height="15" fill="rgb(226,205,29)" fg:x="11939" fg:w="3"/><text x="71.7453%" y="1119.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::decrypt_aead (90 samples, 0.54%)</title><rect x="71.0522%" y="1301" width="0.5390%" height="15" fill="rgb(233,113,1)" fg:x="11865" fg:w="90"/><text x="71.3022%" y="1311.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::decrypt_in_place_aead (90 samples, 0.54%)</title><rect x="71.0522%" y="1285" width="0.5390%" height="15" fill="rgb(253,98,13)" fg:x="11865" fg:w="90"/><text x="71.3022%" y="1295.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (90 samples, 0.54%)</title><rect x="71.0522%" y="1269" width="0.5390%" height="15" fill="rgb(211,115,12)" fg:x="11865" fg:w="90"/><text x="71.3022%" y="1279.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (90 samples, 0.54%)</title><rect x="71.0522%" y="1253" width="0.5390%" height="15" fill="rgb(208,12,16)" fg:x="11865" fg:w="90"/><text x="71.3022%" y="1263.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (90 samples, 0.54%)</title><rect x="71.0522%" y="1237" width="0.5390%" height="15" fill="rgb(237,193,54)" fg:x="11865" fg:w="90"/><text x="71.3022%" y="1247.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (90 samples, 0.54%)</title><rect x="71.0522%" y="1221" width="0.5390%" height="15" fill="rgb(243,22,42)" fg:x="11865" fg:w="90"/><text x="71.3022%" y="1231.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update (90 samples, 0.54%)</title><rect x="71.0522%" y="1205" width="0.5390%" height="15" fill="rgb(233,151,36)" fg:x="11865" fg:w="90"/><text x="71.3022%" y="1215.50"></text></g><g><title>poly1305::backend::autodetect::State::compute_block (90 samples, 0.54%)</title><rect x="71.0522%" y="1189" width="0.5390%" height="15" fill="rgb(237,57,45)" fg:x="11865" fg:w="90"/><text x="71.3022%" y="1199.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (90 samples, 0.54%)</title><rect x="71.0522%" y="1173" width="0.5390%" height="15" fill="rgb(221,88,17)" fg:x="11865" fg:w="90"/><text x="71.3022%" y="1183.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (36 samples, 0.22%)</title><rect x="71.3755%" y="1157" width="0.2156%" height="15" fill="rgb(230,79,15)" fg:x="11919" fg:w="36"/><text x="71.6255%" y="1167.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (27 samples, 0.16%)</title><rect x="71.4294%" y="1141" width="0.1617%" height="15" fill="rgb(213,57,13)" fg:x="11928" fg:w="27"/><text x="71.6794%" y="1151.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (12 samples, 0.07%)</title><rect x="71.5193%" y="1125" width="0.0719%" height="15" fill="rgb(222,116,39)" fg:x="11943" fg:w="12"/><text x="71.7693%" y="1135.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (9 samples, 0.05%)</title><rect x="71.5372%" y="1109" width="0.0539%" height="15" fill="rgb(245,107,2)" fg:x="11946" fg:w="9"/><text x="71.7872%" y="1119.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_private_routed_operation::{{closure}} (91 samples, 0.54%)</title><rect x="71.0522%" y="1317" width="0.5449%" height="15" fill="rgb(238,1,10)" fg:x="11865" fg:w="91"/><text x="71.3022%" y="1327.50"></text></g><g><title>chacha20::backend::avx2::StateWord::add_epi32 (2 samples, 0.01%)</title><rect x="71.5971%" y="1093" width="0.0120%" height="15" fill="rgb(249,4,48)" fg:x="11956" fg:w="2"/><text x="71.8471%" y="1103.50"></text></g><g><title>[veilid-server] (4 samples, 0.02%)</title><rect x="71.6690%" y="1077" width="0.0240%" height="15" fill="rgb(223,151,18)" fg:x="11968" fg:w="4"/><text x="71.9190%" y="1087.50"></text></g><g><title>__memcpy_avx_unaligned_erms (9 samples, 0.05%)</title><rect x="71.6929%" y="1077" width="0.0539%" height="15" fill="rgb(227,65,43)" fg:x="11972" fg:w="9"/><text x="71.9429%" y="1087.50"></text></g><g><title>[veilid-server] (2 samples, 0.01%)</title><rect x="71.8965%" y="1061" width="0.0120%" height="15" fill="rgb(218,40,45)" fg:x="12006" fg:w="2"/><text x="72.1465%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="71.9085%" y="1061" width="0.0120%" height="15" fill="rgb(252,121,31)" fg:x="12008" fg:w="2"/><text x="72.1585%" y="1071.50"></text></g><g><title>chacha20::backend::avx2::StateWord::add_epi32 (44 samples, 0.26%)</title><rect x="71.7468%" y="1077" width="0.2635%" height="15" fill="rgb(219,158,43)" fg:x="11981" fg:w="44"/><text x="71.9968%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (15 samples, 0.09%)</title><rect x="71.9205%" y="1061" width="0.0898%" height="15" fill="rgb(231,162,42)" fg:x="12010" fg:w="15"/><text x="72.1705%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.02%)</title><rect x="71.9863%" y="1045" width="0.0240%" height="15" fill="rgb(217,179,25)" fg:x="12021" fg:w="4"/><text x="72.2363%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="72.0822%" y="1061" width="0.0120%" height="15" fill="rgb(206,212,31)" fg:x="12037" fg:w="2"/><text x="72.3322%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.02%)</title><rect x="72.1001%" y="1061" width="0.0180%" height="15" fill="rgb(235,144,12)" fg:x="12040" fg:w="3"/><text x="72.3501%" y="1071.50"></text></g><g><title>chacha20::backend::avx2::StateWord::rol (27 samples, 0.16%)</title><rect x="72.0103%" y="1077" width="0.1617%" height="15" fill="rgb(213,51,10)" fg:x="12025" fg:w="27"/><text x="72.2603%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (9 samples, 0.05%)</title><rect x="72.1181%" y="1061" width="0.0539%" height="15" fill="rgb(231,145,14)" fg:x="12043" fg:w="9"/><text x="72.3681%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.02%)</title><rect x="72.1480%" y="1045" width="0.0240%" height="15" fill="rgb(235,15,28)" fg:x="12048" fg:w="4"/><text x="72.3980%" y="1055.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (3 samples, 0.02%)</title><rect x="72.2259%" y="1061" width="0.0180%" height="15" fill="rgb(237,206,10)" fg:x="12061" fg:w="3"/><text x="72.4759%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.02%)</title><rect x="72.2259%" y="1045" width="0.0180%" height="15" fill="rgb(236,227,27)" fg:x="12061" fg:w="3"/><text x="72.4759%" y="1055.50"></text></g><g><title>chacha20::backend::avx2::StateWord::rol_16 (51 samples, 0.31%)</title><rect x="72.1720%" y="1077" width="0.3054%" height="15" fill="rgb(246,83,35)" fg:x="12052" fg:w="51"/><text x="72.4220%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi8 (39 samples, 0.23%)</title><rect x="72.2438%" y="1061" width="0.2335%" height="15" fill="rgb(220,136,24)" fg:x="12064" fg:w="39"/><text x="72.4938%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (22 samples, 0.13%)</title><rect x="72.3456%" y="1045" width="0.1317%" height="15" fill="rgb(217,3,25)" fg:x="12081" fg:w="22"/><text x="72.5956%" y="1055.50"></text></g><g><title>core::core_arch::simd::i8x32::new (11 samples, 0.07%)</title><rect x="72.4115%" y="1029" width="0.0659%" height="15" fill="rgb(239,24,14)" fg:x="12092" fg:w="11"/><text x="72.6615%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="72.5612%" y="1061" width="0.0120%" height="15" fill="rgb(244,16,53)" fg:x="12117" fg:w="2"/><text x="72.8112%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (6 samples, 0.04%)</title><rect x="72.5732%" y="1061" width="0.0359%" height="15" fill="rgb(208,175,44)" fg:x="12119" fg:w="6"/><text x="72.8232%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.02%)</title><rect x="72.5912%" y="1045" width="0.0180%" height="15" fill="rgb(252,18,48)" fg:x="12122" fg:w="3"/><text x="72.8412%" y="1055.50"></text></g><g><title>chacha20::backend::avx2::StateWord::rol_8 (53 samples, 0.32%)</title><rect x="72.4774%" y="1077" width="0.3174%" height="15" fill="rgb(234,199,32)" fg:x="12103" fg:w="53"/><text x="72.7274%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi8 (31 samples, 0.19%)</title><rect x="72.6091%" y="1061" width="0.1856%" height="15" fill="rgb(225,77,54)" fg:x="12125" fg:w="31"/><text x="72.8591%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (25 samples, 0.15%)</title><rect x="72.6451%" y="1045" width="0.1497%" height="15" fill="rgb(225,42,25)" fg:x="12131" fg:w="25"/><text x="72.8951%" y="1055.50"></text></g><g><title>core::core_arch::simd::i8x32::new (9 samples, 0.05%)</title><rect x="72.7409%" y="1029" width="0.0539%" height="15" fill="rgb(242,227,46)" fg:x="12147" fg:w="9"/><text x="72.9909%" y="1039.50"></text></g><g><title>[veilid-server] (2 samples, 0.01%)</title><rect x="72.8966%" y="1061" width="0.0120%" height="15" fill="rgb(246,197,35)" fg:x="12173" fg:w="2"/><text x="73.1466%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8 samples, 0.05%)</title><rect x="72.9086%" y="1061" width="0.0479%" height="15" fill="rgb(215,159,26)" fg:x="12175" fg:w="8"/><text x="73.1586%" y="1071.50"></text></g><g><title>chacha20::backend::autodetect::Core&lt;R&gt;::apply_keystream (240 samples, 1.44%)</title><rect x="71.5971%" y="1157" width="1.4372%" height="15" fill="rgb(212,194,50)" fg:x="11956" fg:w="240"/><text x="71.8471%" y="1167.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::apply_keystream (240 samples, 1.44%)</title><rect x="71.5971%" y="1141" width="1.4372%" height="15" fill="rgb(246,132,1)" fg:x="11956" fg:w="240"/><text x="71.8471%" y="1151.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::rounds (240 samples, 1.44%)</title><rect x="71.5971%" y="1125" width="1.4372%" height="15" fill="rgb(217,71,7)" fg:x="11956" fg:w="240"/><text x="71.8471%" y="1135.50"></text></g><g><title>chacha20::backend::avx2::double_quarter_round (240 samples, 1.44%)</title><rect x="71.5971%" y="1109" width="1.4372%" height="15" fill="rgb(252,59,32)" fg:x="11956" fg:w="240"/><text x="71.8471%" y="1119.50"></text></g><g><title>chacha20::backend::avx2::add_xor_rot (235 samples, 1.41%)</title><rect x="71.6270%" y="1093" width="1.4073%" height="15" fill="rgb(253,204,25)" fg:x="11961" fg:w="235"/><text x="71.8770%" y="1103.50"></text></g><g><title>chacha20::backend::avx2::StateWord::xor (40 samples, 0.24%)</title><rect x="72.7948%" y="1077" width="0.2395%" height="15" fill="rgb(232,21,16)" fg:x="12156" fg:w="40"/><text x="73.0448%" y="1087.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (13 samples, 0.08%)</title><rect x="72.9565%" y="1061" width="0.0778%" height="15" fill="rgb(248,90,29)" fg:x="12183" fg:w="13"/><text x="73.2065%" y="1071.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.01%)</title><rect x="73.0223%" y="1045" width="0.0120%" height="15" fill="rgb(249,223,7)" fg:x="12194" fg:w="2"/><text x="73.2723%" y="1055.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (241 samples, 1.44%)</title><rect x="71.5971%" y="1205" width="1.4432%" height="15" fill="rgb(231,119,42)" fg:x="11956" fg:w="241"/><text x="71.8471%" y="1215.50"></text></g><g><title>&lt;chacha20::xchacha::XChaCha&lt;R&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (241 samples, 1.44%)</title><rect x="71.5971%" y="1189" width="1.4432%" height="15" fill="rgb(215,41,35)" fg:x="11956" fg:w="241"/><text x="71.8471%" y="1199.50"></text></g><g><title>&lt;chacha20::chacha::ChaCha&lt;R,MC&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (241 samples, 1.44%)</title><rect x="71.5971%" y="1173" width="1.4432%" height="15" fill="rgb(220,44,45)" fg:x="11956" fg:w="241"/><text x="71.8471%" y="1183.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (242 samples, 1.45%)</title><rect x="71.5971%" y="1221" width="1.4492%" height="15" fill="rgb(253,197,36)" fg:x="11956" fg:w="242"/><text x="71.8471%" y="1231.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::decrypt_aead (246 samples, 1.47%)</title><rect x="71.5971%" y="1285" width="1.4731%" height="15" fill="rgb(245,225,54)" fg:x="11956" fg:w="246"/><text x="71.8471%" y="1295.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::decrypt_in_place_aead (246 samples, 1.47%)</title><rect x="71.5971%" y="1269" width="1.4731%" height="15" fill="rgb(239,94,37)" fg:x="11956" fg:w="246"/><text x="71.8471%" y="1279.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (246 samples, 1.47%)</title><rect x="71.5971%" y="1253" width="1.4731%" height="15" fill="rgb(242,217,10)" fg:x="11956" fg:w="246"/><text x="71.8471%" y="1263.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (246 samples, 1.47%)</title><rect x="71.5971%" y="1237" width="1.4731%" height="15" fill="rgb(250,193,7)" fg:x="11956" fg:w="246"/><text x="71.8471%" y="1247.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (4 samples, 0.02%)</title><rect x="73.0463%" y="1221" width="0.0240%" height="15" fill="rgb(230,104,19)" fg:x="12198" fg:w="4"/><text x="73.2963%" y="1231.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (3 samples, 0.02%)</title><rect x="73.0523%" y="1205" width="0.0180%" height="15" fill="rgb(230,181,4)" fg:x="12199" fg:w="3"/><text x="73.3023%" y="1215.50"></text></g><g><title>&lt;chacha20::xchacha::XChaCha&lt;R&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (3 samples, 0.02%)</title><rect x="73.0523%" y="1189" width="0.0180%" height="15" fill="rgb(216,219,49)" fg:x="12199" fg:w="3"/><text x="73.3023%" y="1199.50"></text></g><g><title>&lt;chacha20::chacha::ChaCha&lt;R,MC&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (3 samples, 0.02%)</title><rect x="73.0523%" y="1173" width="0.0180%" height="15" fill="rgb(254,144,0)" fg:x="12199" fg:w="3"/><text x="73.3023%" y="1183.50"></text></g><g><title>chacha20::chacha::ChaCha&lt;R,MC&gt;::generate_block (3 samples, 0.02%)</title><rect x="73.0523%" y="1157" width="0.0180%" height="15" fill="rgb(205,209,38)" fg:x="12199" fg:w="3"/><text x="73.3023%" y="1167.50"></text></g><g><title>chacha20::backend::autodetect::Core&lt;R&gt;::generate (3 samples, 0.02%)</title><rect x="73.0523%" y="1141" width="0.0180%" height="15" fill="rgb(240,21,42)" fg:x="12199" fg:w="3"/><text x="73.3023%" y="1151.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::generate (3 samples, 0.02%)</title><rect x="73.0523%" y="1125" width="0.0180%" height="15" fill="rgb(241,132,3)" fg:x="12199" fg:w="3"/><text x="73.3023%" y="1135.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::rounds (3 samples, 0.02%)</title><rect x="73.0523%" y="1109" width="0.0180%" height="15" fill="rgb(225,14,2)" fg:x="12199" fg:w="3"/><text x="73.3023%" y="1119.50"></text></g><g><title>chacha20::backend::avx2::double_quarter_round (3 samples, 0.02%)</title><rect x="73.0523%" y="1093" width="0.0180%" height="15" fill="rgb(210,141,35)" fg:x="12199" fg:w="3"/><text x="73.3023%" y="1103.50"></text></g><g><title>chacha20::backend::avx2::add_xor_rot (3 samples, 0.02%)</title><rect x="73.0523%" y="1077" width="0.0180%" height="15" fill="rgb(251,14,44)" fg:x="12199" fg:w="3"/><text x="73.3023%" y="1087.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_private_routed_operation (247 samples, 1.48%)</title><rect x="71.5971%" y="1317" width="1.4791%" height="15" fill="rgb(247,48,18)" fg:x="11956" fg:w="247"/><text x="71.8471%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_private_routed_operation::{{closure}} (247 samples, 1.48%)</title><rect x="71.5971%" y="1301" width="1.4791%" height="15" fill="rgb(225,0,40)" fg:x="11956" fg:w="247"/><text x="71.8471%" y="1311.50"></text></g><g><title>veilid_core::crypto::Crypto::get (2 samples, 0.01%)</title><rect x="73.1002%" y="1301" width="0.0120%" height="15" fill="rgb(221,31,33)" fg:x="12207" fg:w="2"/><text x="73.3502%" y="1311.50"></text></g><g><title>&lt;chacha20::xchacha::XChaCha&lt;R&gt; as cipher::common::NewCipher&gt;::new (2 samples, 0.01%)</title><rect x="73.1241%" y="1173" width="0.0120%" height="15" fill="rgb(237,42,40)" fg:x="12211" fg:w="2"/><text x="73.3741%" y="1183.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::apply_keystream::{{closure}} (3 samples, 0.02%)</title><rect x="73.2918%" y="1029" width="0.0180%" height="15" fill="rgb(233,51,29)" fg:x="12239" fg:w="3"/><text x="73.5418%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (6 samples, 0.04%)</title><rect x="73.2858%" y="1045" width="0.0359%" height="15" fill="rgb(226,58,20)" fg:x="12238" fg:w="6"/><text x="73.5358%" y="1055.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (2 samples, 0.01%)</title><rect x="73.3098%" y="1029" width="0.0120%" height="15" fill="rgb(208,98,7)" fg:x="12242" fg:w="2"/><text x="73.5598%" y="1039.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (2 samples, 0.01%)</title><rect x="73.3098%" y="1013" width="0.0120%" height="15" fill="rgb(228,143,44)" fg:x="12242" fg:w="2"/><text x="73.5598%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2 samples, 0.01%)</title><rect x="73.3098%" y="997" width="0.0120%" height="15" fill="rgb(246,55,38)" fg:x="12242" fg:w="2"/><text x="73.5598%" y="1007.50"></text></g><g><title>core::cmp::min (2 samples, 0.01%)</title><rect x="73.3277%" y="1029" width="0.0120%" height="15" fill="rgb(247,87,16)" fg:x="12245" fg:w="2"/><text x="73.5777%" y="1039.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.01%)</title><rect x="73.3277%" y="1013" width="0.0120%" height="15" fill="rgb(234,129,42)" fg:x="12245" fg:w="2"/><text x="73.5777%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.09%)</title><rect x="73.2559%" y="1077" width="0.0898%" height="15" fill="rgb(220,82,16)" fg:x="12233" fg:w="15"/><text x="73.5059%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (15 samples, 0.09%)</title><rect x="73.2559%" y="1061" width="0.0898%" height="15" fill="rgb(211,88,4)" fg:x="12233" fg:w="15"/><text x="73.5059%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::ChunksMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (4 samples, 0.02%)</title><rect x="73.3218%" y="1045" width="0.0240%" height="15" fill="rgb(248,151,21)" fg:x="12244" fg:w="4"/><text x="73.5718%" y="1055.50"></text></g><g><title>[veilid-server] (2 samples, 0.01%)</title><rect x="73.3457%" y="1077" width="0.0120%" height="15" fill="rgb(238,163,6)" fg:x="12248" fg:w="2"/><text x="73.5957%" y="1087.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="73.3577%" y="1077" width="0.0120%" height="15" fill="rgb(209,183,11)" fg:x="12250" fg:w="2"/><text x="73.6077%" y="1087.50"></text></g><g><title>chacha20::backend::avx2::iv_setup (3 samples, 0.02%)</title><rect x="73.3697%" y="1077" width="0.0180%" height="15" fill="rgb(219,37,20)" fg:x="12252" fg:w="3"/><text x="73.6197%" y="1087.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.01%)</title><rect x="73.3876%" y="1077" width="0.0120%" height="15" fill="rgb(210,158,4)" fg:x="12255" fg:w="2"/><text x="73.6376%" y="1087.50"></text></g><g><title>core::cmp::min (4 samples, 0.02%)</title><rect x="73.4236%" y="1029" width="0.0240%" height="15" fill="rgb(221,167,53)" fg:x="12261" fg:w="4"/><text x="73.6736%" y="1039.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.01%)</title><rect x="73.4355%" y="1013" width="0.0120%" height="15" fill="rgb(237,151,45)" fg:x="12263" fg:w="2"/><text x="73.6855%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.01%)</title><rect x="73.4535%" y="1013" width="0.0120%" height="15" fill="rgb(231,39,3)" fg:x="12266" fg:w="2"/><text x="73.7035%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.01%)</title><rect x="73.4535%" y="997" width="0.0120%" height="15" fill="rgb(212,167,28)" fg:x="12266" fg:w="2"/><text x="73.7035%" y="1007.50"></text></g><g><title>chacha20::backend::autodetect::Core&lt;R&gt;::apply_keystream (55 samples, 0.33%)</title><rect x="73.1541%" y="1109" width="0.3294%" height="15" fill="rgb(232,178,8)" fg:x="12216" fg:w="55"/><text x="73.4041%" y="1119.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::apply_keystream (55 samples, 0.33%)</title><rect x="73.1541%" y="1093" width="0.3294%" height="15" fill="rgb(225,151,20)" fg:x="12216" fg:w="55"/><text x="73.4041%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (13 samples, 0.08%)</title><rect x="73.4056%" y="1077" width="0.0778%" height="15" fill="rgb(238,3,37)" fg:x="12258" fg:w="13"/><text x="73.6556%" y="1087.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (13 samples, 0.08%)</title><rect x="73.4056%" y="1061" width="0.0778%" height="15" fill="rgb(251,147,42)" fg:x="12258" fg:w="13"/><text x="73.6556%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (13 samples, 0.08%)</title><rect x="73.4056%" y="1045" width="0.0778%" height="15" fill="rgb(208,173,10)" fg:x="12258" fg:w="13"/><text x="73.6556%" y="1055.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (6 samples, 0.04%)</title><rect x="73.4475%" y="1029" width="0.0359%" height="15" fill="rgb(246,225,4)" fg:x="12265" fg:w="6"/><text x="73.6975%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::ChunksMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.02%)</title><rect x="73.4655%" y="1013" width="0.0180%" height="15" fill="rgb(248,102,6)" fg:x="12268" fg:w="3"/><text x="73.7155%" y="1023.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (57 samples, 0.34%)</title><rect x="73.1481%" y="1157" width="0.3413%" height="15" fill="rgb(232,6,21)" fg:x="12215" fg:w="57"/><text x="73.3981%" y="1167.50"></text></g><g><title>&lt;chacha20::xchacha::XChaCha&lt;R&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (57 samples, 0.34%)</title><rect x="73.1481%" y="1141" width="0.3413%" height="15" fill="rgb(221,179,22)" fg:x="12215" fg:w="57"/><text x="73.3981%" y="1151.50"></text></g><g><title>&lt;chacha20::chacha::ChaCha&lt;R,MC&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (57 samples, 0.34%)</title><rect x="73.1481%" y="1125" width="0.3413%" height="15" fill="rgb(252,50,20)" fg:x="12215" fg:w="57"/><text x="73.3981%" y="1135.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="73.4954%" y="1141" width="0.0299%" height="15" fill="rgb(222,56,38)" fg:x="12273" fg:w="5"/><text x="73.7454%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="73.4954%" y="1125" width="0.0299%" height="15" fill="rgb(206,193,29)" fg:x="12273" fg:w="5"/><text x="73.7454%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (4 samples, 0.02%)</title><rect x="73.5014%" y="1109" width="0.0240%" height="15" fill="rgb(239,192,45)" fg:x="12274" fg:w="4"/><text x="73.7514%" y="1119.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (2 samples, 0.01%)</title><rect x="73.5134%" y="1093" width="0.0120%" height="15" fill="rgb(254,18,36)" fg:x="12276" fg:w="2"/><text x="73.7634%" y="1103.50"></text></g><g><title>poly1305::backend::autodetect::avx2_cpuid::InitToken::get (6 samples, 0.04%)</title><rect x="73.5313%" y="1109" width="0.0359%" height="15" fill="rgb(221,127,11)" fg:x="12279" fg:w="6"/><text x="73.7813%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (6 samples, 0.04%)</title><rect x="73.5313%" y="1093" width="0.0359%" height="15" fill="rgb(234,146,35)" fg:x="12279" fg:w="6"/><text x="73.7813%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.04%)</title><rect x="73.5313%" y="1077" width="0.0359%" height="15" fill="rgb(254,201,37)" fg:x="12279" fg:w="6"/><text x="73.7813%" y="1087.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update (9 samples, 0.05%)</title><rect x="73.5254%" y="1141" width="0.0539%" height="15" fill="rgb(211,202,23)" fg:x="12278" fg:w="9"/><text x="73.7754%" y="1151.50"></text></g><g><title>poly1305::backend::autodetect::State::compute_block (9 samples, 0.05%)</title><rect x="73.5254%" y="1125" width="0.0539%" height="15" fill="rgb(237,91,2)" fg:x="12278" fg:w="9"/><text x="73.7754%" y="1135.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (2 samples, 0.01%)</title><rect x="73.5673%" y="1109" width="0.0120%" height="15" fill="rgb(226,228,36)" fg:x="12285" fg:w="2"/><text x="73.8173%" y="1119.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (75 samples, 0.45%)</title><rect x="73.1481%" y="1173" width="0.4491%" height="15" fill="rgb(213,63,50)" fg:x="12215" fg:w="75"/><text x="73.3981%" y="1183.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (18 samples, 0.11%)</title><rect x="73.4894%" y="1157" width="0.1078%" height="15" fill="rgb(235,194,19)" fg:x="12272" fg:w="18"/><text x="73.7394%" y="1167.50"></text></g><g><title>generic_array::GenericArray&lt;T,N&gt;::from_slice (3 samples, 0.02%)</title><rect x="73.5793%" y="1141" width="0.0180%" height="15" fill="rgb(207,204,18)" fg:x="12287" fg:w="3"/><text x="73.8293%" y="1151.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.02%)</title><rect x="73.5793%" y="1125" width="0.0180%" height="15" fill="rgb(248,8,7)" fg:x="12287" fg:w="3"/><text x="73.8293%" y="1135.50"></text></g><g><title>&lt;&amp;generic_array::GenericArray&lt;T,N&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (3 samples, 0.02%)</title><rect x="73.5793%" y="1109" width="0.0180%" height="15" fill="rgb(223,145,47)" fg:x="12287" fg:w="3"/><text x="73.8293%" y="1119.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::decrypt_aead (81 samples, 0.49%)</title><rect x="73.1241%" y="1237" width="0.4851%" height="15" fill="rgb(228,84,11)" fg:x="12211" fg:w="81"/><text x="73.3741%" y="1247.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::decrypt_in_place_aead (81 samples, 0.49%)</title><rect x="73.1241%" y="1221" width="0.4851%" height="15" fill="rgb(218,76,45)" fg:x="12211" fg:w="81"/><text x="73.3741%" y="1231.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (81 samples, 0.49%)</title><rect x="73.1241%" y="1205" width="0.4851%" height="15" fill="rgb(223,80,15)" fg:x="12211" fg:w="81"/><text x="73.3741%" y="1215.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (81 samples, 0.49%)</title><rect x="73.1241%" y="1189" width="0.4851%" height="15" fill="rgb(219,218,33)" fg:x="12211" fg:w="81"/><text x="73.3741%" y="1199.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (2 samples, 0.01%)</title><rect x="73.5972%" y="1173" width="0.0120%" height="15" fill="rgb(208,51,11)" fg:x="12290" fg:w="2"/><text x="73.8472%" y="1183.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (2 samples, 0.01%)</title><rect x="73.5972%" y="1157" width="0.0120%" height="15" fill="rgb(229,165,39)" fg:x="12290" fg:w="2"/><text x="73.8472%" y="1167.50"></text></g><g><title>&lt;chacha20::xchacha::XChaCha&lt;R&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (2 samples, 0.01%)</title><rect x="73.5972%" y="1141" width="0.0120%" height="15" fill="rgb(241,100,24)" fg:x="12290" fg:w="2"/><text x="73.8472%" y="1151.50"></text></g><g><title>&lt;chacha20::chacha::ChaCha&lt;R,MC&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (2 samples, 0.01%)</title><rect x="73.5972%" y="1125" width="0.0120%" height="15" fill="rgb(228,14,23)" fg:x="12290" fg:w="2"/><text x="73.8472%" y="1135.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_route::{{closure}}::{{closure}}::{{closure}} (89 samples, 0.53%)</title><rect x="73.0822%" y="1317" width="0.5330%" height="15" fill="rgb(247,116,52)" fg:x="12204" fg:w="89"/><text x="73.3322%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_routed_operation (84 samples, 0.50%)</title><rect x="73.1122%" y="1301" width="0.5030%" height="15" fill="rgb(216,149,33)" fg:x="12209" fg:w="84"/><text x="73.3622%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_routed_operation::{{closure}} (84 samples, 0.50%)</title><rect x="73.1122%" y="1285" width="0.5030%" height="15" fill="rgb(238,142,29)" fg:x="12209" fg:w="84"/><text x="73.3622%" y="1295.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_private_routed_operation (82 samples, 0.49%)</title><rect x="73.1241%" y="1269" width="0.4910%" height="15" fill="rgb(224,83,40)" fg:x="12211" fg:w="82"/><text x="73.3741%" y="1279.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_private_routed_operation::{{closure}} (82 samples, 0.49%)</title><rect x="73.1241%" y="1253" width="0.4910%" height="15" fill="rgb(234,165,11)" fg:x="12211" fg:w="82"/><text x="73.3741%" y="1263.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_route::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="73.6152%" y="1317" width="0.0180%" height="15" fill="rgb(215,96,23)" fg:x="12293" fg:w="3"/><text x="73.8652%" y="1327.50"></text></g><g><title>core::future::identity_future (2 samples, 0.01%)</title><rect x="73.6212%" y="1301" width="0.0120%" height="15" fill="rgb(233,179,26)" fg:x="12294" fg:w="2"/><text x="73.8712%" y="1311.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="73.6212%" y="1285" width="0.0120%" height="15" fill="rgb(225,129,33)" fg:x="12294" fg:w="2"/><text x="73.8712%" y="1295.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="73.6511%" y="1045" width="0.0180%" height="15" fill="rgb(237,49,13)" fg:x="12299" fg:w="3"/><text x="73.9011%" y="1055.50"></text></g><g><title>chacha20::backend::avx2::cols_to_rows (10 samples, 0.06%)</title><rect x="73.6332%" y="1077" width="0.0599%" height="15" fill="rgb(211,3,31)" fg:x="12296" fg:w="10"/><text x="73.8832%" y="1087.50"></text></g><g><title>chacha20::backend::avx2::StateWord::shuffle_epi32 (10 samples, 0.06%)</title><rect x="73.6332%" y="1061" width="0.0599%" height="15" fill="rgb(216,152,19)" fg:x="12296" fg:w="10"/><text x="73.8832%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.02%)</title><rect x="73.6691%" y="1045" width="0.0240%" height="15" fill="rgb(251,121,35)" fg:x="12302" fg:w="4"/><text x="73.9191%" y="1055.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.01%)</title><rect x="73.6811%" y="1029" width="0.0120%" height="15" fill="rgb(210,217,47)" fg:x="12304" fg:w="2"/><text x="73.9311%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="73.7350%" y="1045" width="0.0120%" height="15" fill="rgb(244,116,22)" fg:x="12313" fg:w="2"/><text x="73.9850%" y="1055.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_routed_operation::{{closure}} (22 samples, 0.13%)</title><rect x="73.6332%" y="1317" width="0.1317%" height="15" fill="rgb(228,17,21)" fg:x="12296" fg:w="22"/><text x="73.8832%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_private_routed_operation (22 samples, 0.13%)</title><rect x="73.6332%" y="1301" width="0.1317%" height="15" fill="rgb(240,149,34)" fg:x="12296" fg:w="22"/><text x="73.8832%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_private_routed_operation::{{closure}} (22 samples, 0.13%)</title><rect x="73.6332%" y="1285" width="0.1317%" height="15" fill="rgb(208,125,47)" fg:x="12296" fg:w="22"/><text x="73.8832%" y="1295.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::decrypt_aead (22 samples, 0.13%)</title><rect x="73.6332%" y="1269" width="0.1317%" height="15" fill="rgb(249,186,39)" fg:x="12296" fg:w="22"/><text x="73.8832%" y="1279.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::decrypt_in_place_aead (22 samples, 0.13%)</title><rect x="73.6332%" y="1253" width="0.1317%" height="15" fill="rgb(240,220,33)" fg:x="12296" fg:w="22"/><text x="73.8832%" y="1263.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (22 samples, 0.13%)</title><rect x="73.6332%" y="1237" width="0.1317%" height="15" fill="rgb(243,110,23)" fg:x="12296" fg:w="22"/><text x="73.8832%" y="1247.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (22 samples, 0.13%)</title><rect x="73.6332%" y="1221" width="0.1317%" height="15" fill="rgb(219,163,46)" fg:x="12296" fg:w="22"/><text x="73.8832%" y="1231.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (22 samples, 0.13%)</title><rect x="73.6332%" y="1205" width="0.1317%" height="15" fill="rgb(216,126,30)" fg:x="12296" fg:w="22"/><text x="73.8832%" y="1215.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (22 samples, 0.13%)</title><rect x="73.6332%" y="1189" width="0.1317%" height="15" fill="rgb(208,139,11)" fg:x="12296" fg:w="22"/><text x="73.8832%" y="1199.50"></text></g><g><title>&lt;chacha20::xchacha::XChaCha&lt;R&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (22 samples, 0.13%)</title><rect x="73.6332%" y="1173" width="0.1317%" height="15" fill="rgb(213,118,36)" fg:x="12296" fg:w="22"/><text x="73.8832%" y="1183.50"></text></g><g><title>&lt;chacha20::chacha::ChaCha&lt;R,MC&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (22 samples, 0.13%)</title><rect x="73.6332%" y="1157" width="0.1317%" height="15" fill="rgb(226,43,17)" fg:x="12296" fg:w="22"/><text x="73.8832%" y="1167.50"></text></g><g><title>chacha20::backend::autodetect::Core&lt;R&gt;::apply_keystream (22 samples, 0.13%)</title><rect x="73.6332%" y="1141" width="0.1317%" height="15" fill="rgb(254,217,4)" fg:x="12296" fg:w="22"/><text x="73.8832%" y="1151.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::apply_keystream (22 samples, 0.13%)</title><rect x="73.6332%" y="1125" width="0.1317%" height="15" fill="rgb(210,134,47)" fg:x="12296" fg:w="22"/><text x="73.8832%" y="1135.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::rounds (22 samples, 0.13%)</title><rect x="73.6332%" y="1109" width="0.1317%" height="15" fill="rgb(237,24,49)" fg:x="12296" fg:w="22"/><text x="73.8832%" y="1119.50"></text></g><g><title>chacha20::backend::avx2::double_quarter_round (22 samples, 0.13%)</title><rect x="73.6332%" y="1093" width="0.1317%" height="15" fill="rgb(251,39,46)" fg:x="12296" fg:w="22"/><text x="73.8832%" y="1103.50"></text></g><g><title>chacha20::backend::avx2::rows_to_cols (12 samples, 0.07%)</title><rect x="73.6930%" y="1077" width="0.0719%" height="15" fill="rgb(251,220,3)" fg:x="12306" fg:w="12"/><text x="73.9430%" y="1087.50"></text></g><g><title>chacha20::backend::avx2::StateWord::shuffle_epi32 (12 samples, 0.07%)</title><rect x="73.6930%" y="1061" width="0.0719%" height="15" fill="rgb(228,105,12)" fg:x="12306" fg:w="12"/><text x="73.9430%" y="1071.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.02%)</title><rect x="73.7469%" y="1045" width="0.0180%" height="15" fill="rgb(215,196,1)" fg:x="12315" fg:w="3"/><text x="73.9969%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="73.7829%" y="1077" width="0.0120%" height="15" fill="rgb(214,33,39)" fg:x="12321" fg:w="2"/><text x="74.0329%" y="1087.50"></text></g><g><title>chacha20::backend::avx2::cols_to_rows (15 samples, 0.09%)</title><rect x="73.8128%" y="1061" width="0.0898%" height="15" fill="rgb(220,19,52)" fg:x="12326" fg:w="15"/><text x="74.0628%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (11 samples, 0.07%)</title><rect x="73.8368%" y="1045" width="0.0659%" height="15" fill="rgb(221,78,38)" fg:x="12330" fg:w="11"/><text x="74.0868%" y="1055.50"></text></g><g><title>[veilid-server] (6 samples, 0.04%)</title><rect x="73.9146%" y="1045" width="0.0359%" height="15" fill="rgb(253,30,16)" fg:x="12343" fg:w="6"/><text x="74.1646%" y="1055.50"></text></g><g><title>chacha20::backend::avx2::double_quarter_round (35 samples, 0.21%)</title><rect x="73.7948%" y="1077" width="0.2096%" height="15" fill="rgb(242,65,0)" fg:x="12323" fg:w="35"/><text x="74.0448%" y="1087.50"></text></g><g><title>chacha20::backend::avx2::rows_to_cols (17 samples, 0.10%)</title><rect x="73.9026%" y="1061" width="0.1018%" height="15" fill="rgb(235,201,12)" fg:x="12341" fg:w="17"/><text x="74.1526%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (9 samples, 0.05%)</title><rect x="73.9505%" y="1045" width="0.0539%" height="15" fill="rgb(233,161,9)" fg:x="12349" fg:w="9"/><text x="74.2005%" y="1055.50"></text></g><g><title>chacha20::backend::autodetect::Core&lt;R&gt;::apply_keystream (44 samples, 0.26%)</title><rect x="73.7649%" y="1125" width="0.2635%" height="15" fill="rgb(241,207,41)" fg:x="12318" fg:w="44"/><text x="74.0149%" y="1135.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::apply_keystream (44 samples, 0.26%)</title><rect x="73.7649%" y="1109" width="0.2635%" height="15" fill="rgb(212,69,46)" fg:x="12318" fg:w="44"/><text x="74.0149%" y="1119.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::rounds (44 samples, 0.26%)</title><rect x="73.7649%" y="1093" width="0.2635%" height="15" fill="rgb(239,69,45)" fg:x="12318" fg:w="44"/><text x="74.0149%" y="1103.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.02%)</title><rect x="74.0044%" y="1077" width="0.0240%" height="15" fill="rgb(242,117,48)" fg:x="12358" fg:w="4"/><text x="74.2544%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.02%)</title><rect x="74.0044%" y="1061" width="0.0240%" height="15" fill="rgb(228,41,36)" fg:x="12358" fg:w="4"/><text x="74.2544%" y="1071.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="74.0164%" y="1045" width="0.0120%" height="15" fill="rgb(212,3,32)" fg:x="12360" fg:w="2"/><text x="74.2664%" y="1055.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (46 samples, 0.28%)</title><rect x="73.7649%" y="1189" width="0.2755%" height="15" fill="rgb(233,41,49)" fg:x="12318" fg:w="46"/><text x="74.0149%" y="1199.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (46 samples, 0.28%)</title><rect x="73.7649%" y="1173" width="0.2755%" height="15" fill="rgb(252,170,49)" fg:x="12318" fg:w="46"/><text x="74.0149%" y="1183.50"></text></g><g><title>&lt;chacha20::xchacha::XChaCha&lt;R&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (46 samples, 0.28%)</title><rect x="73.7649%" y="1157" width="0.2755%" height="15" fill="rgb(229,53,26)" fg:x="12318" fg:w="46"/><text x="74.0149%" y="1167.50"></text></g><g><title>&lt;chacha20::chacha::ChaCha&lt;R,MC&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream (46 samples, 0.28%)</title><rect x="73.7649%" y="1141" width="0.2755%" height="15" fill="rgb(217,157,12)" fg:x="12318" fg:w="46"/><text x="74.0149%" y="1151.50"></text></g><g><title>chacha20::chacha::ChaCha&lt;R,MC&gt;::generate_block (2 samples, 0.01%)</title><rect x="74.0284%" y="1125" width="0.0120%" height="15" fill="rgb(227,17,9)" fg:x="12362" fg:w="2"/><text x="74.2784%" y="1135.50"></text></g><g><title>chacha20::backend::autodetect::Core&lt;R&gt;::generate (2 samples, 0.01%)</title><rect x="74.0284%" y="1109" width="0.0120%" height="15" fill="rgb(218,84,12)" fg:x="12362" fg:w="2"/><text x="74.2784%" y="1119.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::generate (2 samples, 0.01%)</title><rect x="74.0284%" y="1093" width="0.0120%" height="15" fill="rgb(212,79,24)" fg:x="12362" fg:w="2"/><text x="74.2784%" y="1103.50"></text></g><g><title>chacha20::backend::avx2::Core&lt;R&gt;::rounds (2 samples, 0.01%)</title><rect x="74.0284%" y="1077" width="0.0120%" height="15" fill="rgb(217,222,37)" fg:x="12362" fg:w="2"/><text x="74.2784%" y="1087.50"></text></g><g><title>chacha20::backend::avx2::double_quarter_round (2 samples, 0.01%)</title><rect x="74.0284%" y="1061" width="0.0120%" height="15" fill="rgb(246,208,8)" fg:x="12362" fg:w="2"/><text x="74.2784%" y="1071.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_routed_operation (47 samples, 0.28%)</title><rect x="73.7649%" y="1317" width="0.2815%" height="15" fill="rgb(244,133,10)" fg:x="12318" fg:w="47"/><text x="74.0149%" y="1327.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_routed_operation::{{closure}} (47 samples, 0.28%)</title><rect x="73.7649%" y="1301" width="0.2815%" height="15" fill="rgb(209,219,41)" fg:x="12318" fg:w="47"/><text x="74.0149%" y="1311.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_private_routed_operation (47 samples, 0.28%)</title><rect x="73.7649%" y="1285" width="0.2815%" height="15" fill="rgb(253,175,45)" fg:x="12318" fg:w="47"/><text x="74.0149%" y="1295.50"></text></g><g><title>veilid_core::rpc_processor::rpc_route::&lt;impl veilid_core::rpc_processor::RPCProcessor&gt;::process_private_routed_operation::{{closure}} (47 samples, 0.28%)</title><rect x="73.7649%" y="1269" width="0.2815%" height="15" fill="rgb(235,100,37)" fg:x="12318" fg:w="47"/><text x="74.0149%" y="1279.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::decrypt_aead (47 samples, 0.28%)</title><rect x="73.7649%" y="1253" width="0.2815%" height="15" fill="rgb(225,87,19)" fg:x="12318" fg:w="47"/><text x="74.0149%" y="1263.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::decrypt_in_place_aead (47 samples, 0.28%)</title><rect x="73.7649%" y="1237" width="0.2815%" height="15" fill="rgb(217,152,17)" fg:x="12318" fg:w="47"/><text x="74.0149%" y="1247.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (47 samples, 0.28%)</title><rect x="73.7649%" y="1221" width="0.2815%" height="15" fill="rgb(235,72,13)" fg:x="12318" fg:w="47"/><text x="74.0149%" y="1231.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (47 samples, 0.28%)</title><rect x="73.7649%" y="1205" width="0.2815%" height="15" fill="rgb(233,140,18)" fg:x="12318" fg:w="47"/><text x="74.0149%" y="1215.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="74.0643%" y="1301" width="0.0120%" height="15" fill="rgb(207,212,28)" fg:x="12368" fg:w="2"/><text x="74.3143%" y="1311.50"></text></g><g><title>veilid_core::veilid_api::json_api::process::JsonRequestProcessor::process_request::{{closure}} (4 samples, 0.02%)</title><rect x="74.0583%" y="1317" width="0.0240%" height="15" fill="rgb(220,130,25)" fg:x="12367" fg:w="4"/><text x="74.3083%" y="1327.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_spec_store::RouteSpecStore::best_remote_private_route (2 samples, 0.01%)</title><rect x="74.1062%" y="1285" width="0.0120%" height="15" fill="rgb(205,55,34)" fg:x="12375" fg:w="2"/><text x="74.3562%" y="1295.50"></text></g><g><title>veilid_core::routing_table::route_spec_store::route_spec_store_cache::RouteSpecStoreCache::get_remote_private_route (2 samples, 0.01%)</title><rect x="74.1062%" y="1269" width="0.0120%" height="15" fill="rgb(237,54,35)" fg:x="12375" fg:w="2"/><text x="74.3562%" y="1279.50"></text></g><g><title>hashlink::lru_cache::LruCache&lt;K,V,S&gt;::get_mut (2 samples, 0.01%)</title><rect x="74.1062%" y="1253" width="0.0120%" height="15" fill="rgb(208,67,23)" fg:x="12375" fg:w="2"/><text x="74.3562%" y="1263.50"></text></g><g><title>hashlink::linked_hash_map::RawEntryBuilderMut&lt;K,V,S&gt;::from_key (2 samples, 0.01%)</title><rect x="74.1062%" y="1237" width="0.0120%" height="15" fill="rgb(206,207,50)" fg:x="12375" fg:w="2"/><text x="74.3562%" y="1247.50"></text></g><g><title>veilid_core::veilid_api::routing_context::RoutingContext::app_message::{{closure}}::{{closure}}::{{closure}} (5 samples, 0.03%)</title><rect x="74.0943%" y="1317" width="0.0299%" height="15" fill="rgb(213,211,42)" fg:x="12373" fg:w="5"/><text x="74.3443%" y="1327.50"></text></g><g><title>veilid_core::veilid_api::routing_context::RoutingContext::get_destination::{{closure}} (4 samples, 0.02%)</title><rect x="74.1002%" y="1301" width="0.0240%" height="15" fill="rgb(252,197,50)" fg:x="12374" fg:w="4"/><text x="74.3502%" y="1311.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="74.1242%" y="1301" width="0.0299%" height="15" fill="rgb(251,211,41)" fg:x="12378" fg:w="5"/><text x="74.3742%" y="1311.50"></text></g><g><title>tracing::span::Span::enter (3 samples, 0.02%)</title><rect x="74.1362%" y="1285" width="0.0180%" height="15" fill="rgb(229,211,5)" fg:x="12380" fg:w="3"/><text x="74.3862%" y="1295.50"></text></g><g><title>tracing::span::Span::do_enter (3 samples, 0.02%)</title><rect x="74.1362%" y="1269" width="0.0180%" height="15" fill="rgb(239,36,31)" fg:x="12380" fg:w="3"/><text x="74.3862%" y="1279.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (3 samples, 0.02%)</title><rect x="74.1362%" y="1253" width="0.0180%" height="15" fill="rgb(248,67,31)" fg:x="12380" fg:w="3"/><text x="74.3862%" y="1263.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (3 samples, 0.02%)</title><rect x="74.1362%" y="1237" width="0.0180%" height="15" fill="rgb(249,55,44)" fg:x="12380" fg:w="3"/><text x="74.3862%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;L&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (3 samples, 0.02%)</title><rect x="74.1362%" y="1221" width="0.0180%" height="15" fill="rgb(216,82,12)" fg:x="12380" fg:w="3"/><text x="74.3862%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn tracing_subscriber::layer::Layer&lt;S&gt;+core::marker::Send+core::marker::Sync&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (3 samples, 0.02%)</title><rect x="74.1362%" y="1205" width="0.0180%" height="15" fill="rgb(242,174,1)" fg:x="12380" fg:w="3"/><text x="74.3862%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (3 samples, 0.02%)</title><rect x="74.1362%" y="1189" width="0.0180%" height="15" fill="rgb(208,120,29)" fg:x="12380" fg:w="3"/><text x="74.3862%" y="1199.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::if_enabled_for (3 samples, 0.02%)</title><rect x="74.1362%" y="1173" width="0.0180%" height="15" fill="rgb(221,105,43)" fg:x="12380" fg:w="3"/><text x="74.3862%" y="1183.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::is_enabled_inner (3 samples, 0.02%)</title><rect x="74.1362%" y="1157" width="0.0180%" height="15" fill="rgb(234,124,22)" fg:x="12380" fg:w="3"/><text x="74.3862%" y="1167.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::span (3 samples, 0.02%)</title><rect x="74.1362%" y="1141" width="0.0180%" height="15" fill="rgb(212,23,30)" fg:x="12380" fg:w="3"/><text x="74.3862%" y="1151.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (3 samples, 0.02%)</title><rect x="74.1362%" y="1125" width="0.0180%" height="15" fill="rgb(219,122,53)" fg:x="12380" fg:w="3"/><text x="74.3862%" y="1135.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (2 samples, 0.01%)</title><rect x="74.1422%" y="1109" width="0.0120%" height="15" fill="rgb(248,84,24)" fg:x="12381" fg:w="2"/><text x="74.3922%" y="1119.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (2 samples, 0.01%)</title><rect x="74.1422%" y="1093" width="0.0120%" height="15" fill="rgb(245,115,18)" fg:x="12381" fg:w="2"/><text x="74.3922%" y="1103.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (2 samples, 0.01%)</title><rect x="74.1422%" y="1077" width="0.0120%" height="15" fill="rgb(227,176,51)" fg:x="12381" fg:w="2"/><text x="74.3922%" y="1087.50"></text></g><g><title>tracing::__macro_support::__is_enabled (2 samples, 0.01%)</title><rect x="74.1661%" y="1301" width="0.0120%" height="15" fill="rgb(229,63,42)" fg:x="12385" fg:w="2"/><text x="74.4161%" y="1311.50"></text></g><g><title>tracing_core::dispatcher::get_default (2 samples, 0.01%)</title><rect x="74.1661%" y="1285" width="0.0120%" height="15" fill="rgb(247,202,24)" fg:x="12385" fg:w="2"/><text x="74.4161%" y="1295.50"></text></g><g><title>tracing::__macro_support::__is_enabled::{{closure}} (2 samples, 0.01%)</title><rect x="74.1661%" y="1269" width="0.0120%" height="15" fill="rgb(244,173,20)" fg:x="12385" fg:w="2"/><text x="74.4161%" y="1279.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enabled (2 samples, 0.01%)</title><rect x="74.1661%" y="1253" width="0.0120%" height="15" fill="rgb(242,81,47)" fg:x="12385" fg:w="2"/><text x="74.4161%" y="1263.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (2 samples, 0.01%)</title><rect x="74.1661%" y="1237" width="0.0120%" height="15" fill="rgb(231,185,54)" fg:x="12385" fg:w="2"/><text x="74.4161%" y="1247.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (10 samples, 0.06%)</title><rect x="74.7051%" y="757" width="0.0599%" height="15" fill="rgb(243,55,32)" fg:x="12475" fg:w="10"/><text x="74.9551%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (7 samples, 0.04%)</title><rect x="74.7650%" y="757" width="0.0419%" height="15" fill="rgb(208,167,19)" fg:x="12485" fg:w="7"/><text x="75.0150%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (6 samples, 0.04%)</title><rect x="74.7709%" y="741" width="0.0359%" height="15" fill="rgb(231,72,35)" fg:x="12486" fg:w="6"/><text x="75.0209%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (6 samples, 0.04%)</title><rect x="74.7709%" y="725" width="0.0359%" height="15" fill="rgb(250,173,51)" fg:x="12486" fg:w="6"/><text x="75.0209%" y="735.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.02%)</title><rect x="74.8069%" y="757" width="0.0240%" height="15" fill="rgb(209,5,22)" fg:x="12492" fg:w="4"/><text x="75.0569%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (10 samples, 0.06%)</title><rect x="74.8787%" y="741" width="0.0599%" height="15" fill="rgb(250,174,19)" fg:x="12504" fg:w="10"/><text x="75.1287%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.05%)</title><rect x="74.8907%" y="725" width="0.0479%" height="15" fill="rgb(217,3,49)" fg:x="12506" fg:w="8"/><text x="75.1407%" y="735.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.02%)</title><rect x="74.9386%" y="741" width="0.0240%" height="15" fill="rgb(218,225,5)" fg:x="12514" fg:w="4"/><text x="75.1886%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 0.45%)</title><rect x="74.5314%" y="773" width="0.4491%" height="15" fill="rgb(236,89,11)" fg:x="12446" fg:w="75"/><text x="74.7814%" y="783.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (25 samples, 0.15%)</title><rect x="74.8308%" y="757" width="0.1497%" height="15" fill="rgb(206,33,28)" fg:x="12496" fg:w="25"/><text x="75.0808%" y="767.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.02%)</title><rect x="74.9626%" y="741" width="0.0180%" height="15" fill="rgb(241,56,42)" fg:x="12518" fg:w="3"/><text x="75.2126%" y="751.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (3 samples, 0.02%)</title><rect x="75.0464%" y="725" width="0.0180%" height="15" fill="rgb(222,44,11)" fg:x="12532" fg:w="3"/><text x="75.2964%" y="735.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="75.3279%" y="677" width="0.0120%" height="15" fill="rgb(234,111,20)" fg:x="12579" fg:w="2"/><text x="75.5779%" y="687.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="75.3279%" y="661" width="0.0120%" height="15" fill="rgb(237,77,6)" fg:x="12579" fg:w="2"/><text x="75.5779%" y="671.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="75.3279%" y="645" width="0.0120%" height="15" fill="rgb(235,111,23)" fg:x="12579" fg:w="2"/><text x="75.5779%" y="655.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="75.3279%" y="629" width="0.0120%" height="15" fill="rgb(251,135,29)" fg:x="12579" fg:w="2"/><text x="75.5779%" y="639.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="75.3279%" y="613" width="0.0120%" height="15" fill="rgb(217,57,1)" fg:x="12579" fg:w="2"/><text x="75.5779%" y="623.50"></text></g><g><title>tick_sched_timer (2 samples, 0.01%)</title><rect x="75.3279%" y="597" width="0.0120%" height="15" fill="rgb(249,119,31)" fg:x="12579" fg:w="2"/><text x="75.5779%" y="607.50"></text></g><g><title>tick_sched_handle (2 samples, 0.01%)</title><rect x="75.3279%" y="581" width="0.0120%" height="15" fill="rgb(233,164,33)" fg:x="12579" fg:w="2"/><text x="75.5779%" y="591.50"></text></g><g><title>update_process_times (2 samples, 0.01%)</title><rect x="75.3279%" y="565" width="0.0120%" height="15" fill="rgb(250,217,43)" fg:x="12579" fg:w="2"/><text x="75.5779%" y="575.50"></text></g><g><title>core::fmt::Formatter::debug_lower_hex (2 samples, 0.01%)</title><rect x="75.3398%" y="677" width="0.0120%" height="15" fill="rgb(232,154,50)" fg:x="12581" fg:w="2"/><text x="75.5898%" y="687.50"></text></g><g><title>core::fmt::Formatter::debug_upper_hex (7 samples, 0.04%)</title><rect x="75.3518%" y="677" width="0.0419%" height="15" fill="rgb(227,190,8)" fg:x="12583" fg:w="7"/><text x="75.6018%" y="687.50"></text></g><g><title>&lt;u8 as core::fmt::num::DisplayInt&gt;::to_u64 (7 samples, 0.04%)</title><rect x="75.3937%" y="661" width="0.0419%" height="15" fill="rgb(209,217,32)" fg:x="12590" fg:w="7"/><text x="75.6437%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (9 samples, 0.05%)</title><rect x="75.4357%" y="661" width="0.0539%" height="15" fill="rgb(243,203,50)" fg:x="12597" fg:w="9"/><text x="75.6857%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.02%)</title><rect x="76.2321%" y="533" width="0.0180%" height="15" fill="rgb(232,152,27)" fg:x="12730" fg:w="3"/><text x="76.4821%" y="543.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (3 samples, 0.02%)</title><rect x="76.2321%" y="517" width="0.0180%" height="15" fill="rgb(240,34,29)" fg:x="12730" fg:w="3"/><text x="76.4821%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.01%)</title><rect x="76.2381%" y="501" width="0.0120%" height="15" fill="rgb(215,185,52)" fg:x="12731" fg:w="2"/><text x="76.4881%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (10 samples, 0.06%)</title><rect x="76.2201%" y="549" width="0.0599%" height="15" fill="rgb(240,89,49)" fg:x="12728" fg:w="10"/><text x="76.4701%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.03%)</title><rect x="76.2501%" y="533" width="0.0299%" height="15" fill="rgb(225,12,52)" fg:x="12733" fg:w="5"/><text x="76.5001%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (2 samples, 0.01%)</title><rect x="76.2680%" y="517" width="0.0120%" height="15" fill="rgb(239,128,45)" fg:x="12736" fg:w="2"/><text x="76.5180%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (2 samples, 0.01%)</title><rect x="76.2680%" y="501" width="0.0120%" height="15" fill="rgb(211,78,47)" fg:x="12736" fg:w="2"/><text x="76.5180%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (3 samples, 0.02%)</title><rect x="76.2800%" y="549" width="0.0180%" height="15" fill="rgb(232,31,21)" fg:x="12738" fg:w="3"/><text x="76.5300%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (12 samples, 0.07%)</title><rect x="76.7591%" y="501" width="0.0719%" height="15" fill="rgb(222,168,14)" fg:x="12818" fg:w="12"/><text x="77.0091%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (73 samples, 0.44%)</title><rect x="76.4477%" y="517" width="0.4372%" height="15" fill="rgb(209,128,24)" fg:x="12766" fg:w="73"/><text x="76.6977%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (9 samples, 0.05%)</title><rect x="76.8309%" y="501" width="0.0539%" height="15" fill="rgb(249,35,13)" fg:x="12830" fg:w="9"/><text x="77.0809%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="76.8848%" y="389" width="0.0180%" height="15" fill="rgb(218,7,2)" fg:x="12839" fg:w="3"/><text x="77.1348%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="76.8848%" y="485" width="0.0240%" height="15" fill="rgb(238,107,27)" fg:x="12839" fg:w="4"/><text x="77.1348%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.02%)</title><rect x="76.8848%" y="469" width="0.0240%" height="15" fill="rgb(217,88,38)" fg:x="12839" fg:w="4"/><text x="77.1348%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.02%)</title><rect x="76.8848%" y="453" width="0.0240%" height="15" fill="rgb(230,207,0)" fg:x="12839" fg:w="4"/><text x="77.1348%" y="463.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.02%)</title><rect x="76.8848%" y="437" width="0.0240%" height="15" fill="rgb(249,64,54)" fg:x="12839" fg:w="4"/><text x="77.1348%" y="447.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.02%)</title><rect x="76.8848%" y="421" width="0.0240%" height="15" fill="rgb(231,7,11)" fg:x="12839" fg:w="4"/><text x="77.1348%" y="431.50"></text></g><g><title>_int_realloc (4 samples, 0.02%)</title><rect x="76.8848%" y="405" width="0.0240%" height="15" fill="rgb(205,149,21)" fg:x="12839" fg:w="4"/><text x="77.1348%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (103 samples, 0.62%)</title><rect x="76.2980%" y="549" width="0.6168%" height="15" fill="rgb(215,126,34)" fg:x="12741" fg:w="103"/><text x="76.5480%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (80 samples, 0.48%)</title><rect x="76.4357%" y="533" width="0.4791%" height="15" fill="rgb(241,132,45)" fg:x="12764" fg:w="80"/><text x="76.6857%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.03%)</title><rect x="76.8848%" y="517" width="0.0299%" height="15" fill="rgb(252,69,32)" fg:x="12839" fg:w="5"/><text x="77.1348%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.03%)</title><rect x="76.8848%" y="501" width="0.0299%" height="15" fill="rgb(232,204,19)" fg:x="12839" fg:w="5"/><text x="77.1348%" y="511.50"></text></g><g><title>[veilid-server] (2 samples, 0.01%)</title><rect x="76.9328%" y="533" width="0.0120%" height="15" fill="rgb(249,15,47)" fg:x="12847" fg:w="2"/><text x="77.1828%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.14%)</title><rect x="76.9148%" y="549" width="0.1377%" height="15" fill="rgb(209,227,23)" fg:x="12844" fg:w="23"/><text x="77.1648%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (18 samples, 0.11%)</title><rect x="76.9447%" y="533" width="0.1078%" height="15" fill="rgb(248,92,24)" fg:x="12849" fg:w="18"/><text x="77.1947%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (176 samples, 1.05%)</title><rect x="76.0225%" y="565" width="1.0540%" height="15" fill="rgb(247,59,2)" fg:x="12695" fg:w="176"/><text x="76.2725%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.02%)</title><rect x="77.0525%" y="549" width="0.0240%" height="15" fill="rgb(221,30,5)" fg:x="12867" fg:w="4"/><text x="77.3025%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.02%)</title><rect x="77.0525%" y="533" width="0.0240%" height="15" fill="rgb(208,108,53)" fg:x="12867" fg:w="4"/><text x="77.3025%" y="543.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (9 samples, 0.05%)</title><rect x="77.0884%" y="549" width="0.0539%" height="15" fill="rgb(211,183,26)" fg:x="12873" fg:w="9"/><text x="77.3384%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (17 samples, 0.10%)</title><rect x="77.3519%" y="533" width="0.1018%" height="15" fill="rgb(232,132,4)" fg:x="12917" fg:w="17"/><text x="77.6019%" y="543.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (2 samples, 0.01%)</title><rect x="77.4537%" y="533" width="0.0120%" height="15" fill="rgb(253,128,37)" fg:x="12934" fg:w="2"/><text x="77.7037%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (2 samples, 0.01%)</title><rect x="77.4657%" y="501" width="0.0120%" height="15" fill="rgb(221,58,24)" fg:x="12936" fg:w="2"/><text x="77.7157%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (286 samples, 1.71%)</title><rect x="75.9327%" y="581" width="1.7127%" height="15" fill="rgb(230,54,45)" fg:x="12680" fg:w="286"/><text x="76.1827%" y="591.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (95 samples, 0.57%)</title><rect x="77.0765%" y="565" width="0.5689%" height="15" fill="rgb(254,21,18)" fg:x="12871" fg:w="95"/><text x="77.3265%" y="575.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (84 samples, 0.50%)</title><rect x="77.1423%" y="549" width="0.5030%" height="15" fill="rgb(221,108,0)" fg:x="12882" fg:w="84"/><text x="77.3923%" y="559.50"></text></g><g><title>core::slice::raw::from_raw_parts (30 samples, 0.18%)</title><rect x="77.4657%" y="533" width="0.1797%" height="15" fill="rgb(206,95,1)" fg:x="12936" fg:w="30"/><text x="77.7157%" y="543.50"></text></g><g><title>core::ptr::slice_from_raw_parts (30 samples, 0.18%)</title><rect x="77.4657%" y="517" width="0.1797%" height="15" fill="rgb(237,52,5)" fg:x="12936" fg:w="30"/><text x="77.7157%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (28 samples, 0.17%)</title><rect x="77.4777%" y="501" width="0.1677%" height="15" fill="rgb(218,150,34)" fg:x="12938" fg:w="28"/><text x="77.7277%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.04%)</title><rect x="77.8011%" y="549" width="0.0359%" height="15" fill="rgb(235,194,28)" fg:x="12992" fg:w="6"/><text x="78.0511%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (4 samples, 0.02%)</title><rect x="77.8130%" y="533" width="0.0240%" height="15" fill="rgb(245,92,18)" fg:x="12994" fg:w="4"/><text x="78.0630%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (11 samples, 0.07%)</title><rect x="77.8370%" y="549" width="0.0659%" height="15" fill="rgb(253,203,53)" fg:x="12998" fg:w="11"/><text x="78.0870%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null::runtime_impl (7 samples, 0.04%)</title><rect x="77.8609%" y="533" width="0.0419%" height="15" fill="rgb(249,185,47)" fg:x="13002" fg:w="7"/><text x="78.1109%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::addr (7 samples, 0.04%)</title><rect x="77.8609%" y="517" width="0.0419%" height="15" fill="rgb(252,194,52)" fg:x="13002" fg:w="7"/><text x="78.1109%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (4 samples, 0.02%)</title><rect x="77.9029%" y="549" width="0.0240%" height="15" fill="rgb(210,53,36)" fg:x="13009" fg:w="4"/><text x="78.1529%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (352 samples, 2.11%)</title><rect x="75.8429%" y="597" width="2.1079%" height="15" fill="rgb(237,37,25)" fg:x="12665" fg:w="352"/><text x="76.0929%" y="607.50">a..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (51 samples, 0.31%)</title><rect x="77.6454%" y="581" width="0.3054%" height="15" fill="rgb(242,116,27)" fg:x="12966" fg:w="51"/><text x="77.8954%" y="591.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (49 samples, 0.29%)</title><rect x="77.6573%" y="565" width="0.2934%" height="15" fill="rgb(213,185,26)" fg:x="12968" fg:w="49"/><text x="77.9073%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (4 samples, 0.02%)</title><rect x="77.9268%" y="549" width="0.0240%" height="15" fill="rgb(225,204,8)" fg:x="13013" fg:w="4"/><text x="78.1768%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (386 samples, 2.31%)</title><rect x="75.6872%" y="645" width="2.3115%" height="15" fill="rgb(254,111,37)" fg:x="12639" fg:w="386"/><text x="75.9372%" y="655.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (374 samples, 2.24%)</title><rect x="75.7590%" y="629" width="2.2397%" height="15" fill="rgb(242,35,9)" fg:x="12651" fg:w="374"/><text x="76.0090%" y="639.50">&lt;..</text></g><g><title>alloc::string::String::push_str (360 samples, 2.16%)</title><rect x="75.8429%" y="613" width="2.1558%" height="15" fill="rgb(232,138,49)" fg:x="12665" fg:w="360"/><text x="76.0929%" y="623.50">a..</text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (8 samples, 0.05%)</title><rect x="77.9508%" y="597" width="0.0479%" height="15" fill="rgb(247,56,4)" fg:x="13017" fg:w="8"/><text x="78.2008%" y="607.50"></text></g><g><title>core::fmt::Formatter::alternate (2 samples, 0.01%)</title><rect x="78.2382%" y="629" width="0.0120%" height="15" fill="rgb(226,179,17)" fg:x="13065" fg:w="2"/><text x="78.4882%" y="639.50"></text></g><g><title>core::fmt::Formatter::pad_integral (57 samples, 0.34%)</title><rect x="77.9987%" y="645" width="0.3413%" height="15" fill="rgb(216,163,45)" fg:x="13025" fg:w="57"/><text x="78.2487%" y="655.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (15 samples, 0.09%)</title><rect x="78.2502%" y="629" width="0.0898%" height="15" fill="rgb(211,157,3)" fg:x="13067" fg:w="15"/><text x="78.5002%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.12%)</title><rect x="78.3400%" y="645" width="0.1198%" height="15" fill="rgb(234,44,20)" fg:x="13082" fg:w="20"/><text x="78.5900%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (8 samples, 0.05%)</title><rect x="78.4598%" y="645" width="0.0479%" height="15" fill="rgb(254,138,23)" fg:x="13102" fg:w="8"/><text x="78.7098%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (8 samples, 0.05%)</title><rect x="78.4598%" y="629" width="0.0479%" height="15" fill="rgb(206,119,39)" fg:x="13102" fg:w="8"/><text x="78.7098%" y="639.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (573 samples, 3.43%)</title><rect x="75.1003%" y="709" width="3.4313%" height="15" fill="rgb(231,105,52)" fg:x="12541" fg:w="573"/><text x="75.3503%" y="719.50">&lt;&amp;T..</text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u8&gt;::fmt (561 samples, 3.36%)</title><rect x="75.1722%" y="693" width="3.3595%" height="15" fill="rgb(250,20,5)" fg:x="12553" fg:w="561"/><text x="75.4222%" y="703.50">cor..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (524 samples, 3.14%)</title><rect x="75.3937%" y="677" width="3.1379%" height="15" fill="rgb(215,198,30)" fg:x="12590" fg:w="524"/><text x="75.6437%" y="687.50">cor..</text></g><g><title>core::fmt::num::imp::fmt_u64 (508 samples, 3.04%)</title><rect x="75.4896%" y="661" width="3.0421%" height="15" fill="rgb(246,142,8)" fg:x="12606" fg:w="508"/><text x="75.7396%" y="671.50">cor..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.02%)</title><rect x="78.5077%" y="645" width="0.0240%" height="15" fill="rgb(243,26,38)" fg:x="13110" fg:w="4"/><text x="78.7577%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.02%)</title><rect x="78.5077%" y="629" width="0.0240%" height="15" fill="rgb(205,133,28)" fg:x="13110" fg:w="4"/><text x="78.7577%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.03%)</title><rect x="79.0287%" y="581" width="0.0299%" height="15" fill="rgb(212,34,0)" fg:x="13197" fg:w="5"/><text x="79.2787%" y="591.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (5 samples, 0.03%)</title><rect x="79.0287%" y="565" width="0.0299%" height="15" fill="rgb(251,226,22)" fg:x="13197" fg:w="5"/><text x="79.2787%" y="575.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.03%)</title><rect x="79.0287%" y="549" width="0.0299%" height="15" fill="rgb(252,119,9)" fg:x="13197" fg:w="5"/><text x="79.2787%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (14 samples, 0.08%)</title><rect x="79.0167%" y="597" width="0.0838%" height="15" fill="rgb(213,150,50)" fg:x="13195" fg:w="14"/><text x="79.2667%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (7 samples, 0.04%)</title><rect x="79.0586%" y="581" width="0.0419%" height="15" fill="rgb(212,24,39)" fg:x="13202" fg:w="7"/><text x="79.3086%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (5 samples, 0.03%)</title><rect x="79.0706%" y="565" width="0.0299%" height="15" fill="rgb(213,46,39)" fg:x="13204" fg:w="5"/><text x="79.3206%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (5 samples, 0.03%)</title><rect x="79.0706%" y="549" width="0.0299%" height="15" fill="rgb(239,106,12)" fg:x="13204" fg:w="5"/><text x="79.3206%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (11 samples, 0.07%)</title><rect x="79.1005%" y="597" width="0.0659%" height="15" fill="rgb(249,229,21)" fg:x="13209" fg:w="11"/><text x="79.3505%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (11 samples, 0.07%)</title><rect x="79.5497%" y="549" width="0.0659%" height="15" fill="rgb(212,158,3)" fg:x="13284" fg:w="11"/><text x="79.7997%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (83 samples, 0.50%)</title><rect x="79.1664%" y="597" width="0.4970%" height="15" fill="rgb(253,26,48)" fg:x="13220" fg:w="83"/><text x="79.4164%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (66 samples, 0.40%)</title><rect x="79.2682%" y="581" width="0.3952%" height="15" fill="rgb(238,178,20)" fg:x="13237" fg:w="66"/><text x="79.5182%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (66 samples, 0.40%)</title><rect x="79.2682%" y="565" width="0.3952%" height="15" fill="rgb(208,86,15)" fg:x="13237" fg:w="66"/><text x="79.5182%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (8 samples, 0.05%)</title><rect x="79.6155%" y="549" width="0.0479%" height="15" fill="rgb(239,42,53)" fg:x="13295" fg:w="8"/><text x="79.8655%" y="559.50"></text></g><g><title>[veilid-server] (6 samples, 0.04%)</title><rect x="79.6874%" y="581" width="0.0359%" height="15" fill="rgb(245,226,8)" fg:x="13307" fg:w="6"/><text x="79.9374%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.17%)</title><rect x="79.6635%" y="597" width="0.1737%" height="15" fill="rgb(216,176,32)" fg:x="13303" fg:w="29"/><text x="79.9135%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (19 samples, 0.11%)</title><rect x="79.7233%" y="581" width="0.1138%" height="15" fill="rgb(231,186,21)" fg:x="13313" fg:w="19"/><text x="79.9733%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (174 samples, 1.04%)</title><rect x="78.8251%" y="613" width="1.0420%" height="15" fill="rgb(205,95,49)" fg:x="13163" fg:w="174"/><text x="79.0751%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.03%)</title><rect x="79.8371%" y="597" width="0.0299%" height="15" fill="rgb(217,145,8)" fg:x="13332" fg:w="5"/><text x="80.0871%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.03%)</title><rect x="79.8371%" y="581" width="0.0299%" height="15" fill="rgb(239,144,48)" fg:x="13332" fg:w="5"/><text x="80.0871%" y="591.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (5 samples, 0.03%)</title><rect x="79.8910%" y="597" width="0.0299%" height="15" fill="rgb(214,189,23)" fg:x="13341" fg:w="5"/><text x="80.1410%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (22 samples, 0.13%)</title><rect x="80.1545%" y="581" width="0.1317%" height="15" fill="rgb(229,157,17)" fg:x="13385" fg:w="22"/><text x="80.4045%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (296 samples, 1.77%)</title><rect x="78.7353%" y="629" width="1.7726%" height="15" fill="rgb(230,5,48)" fg:x="13148" fg:w="296"/><text x="78.9853%" y="639.50">&lt;..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (107 samples, 0.64%)</title><rect x="79.8671%" y="613" width="0.6408%" height="15" fill="rgb(224,156,48)" fg:x="13337" fg:w="107"/><text x="80.1171%" y="623.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (98 samples, 0.59%)</title><rect x="79.9210%" y="597" width="0.5869%" height="15" fill="rgb(223,14,29)" fg:x="13346" fg:w="98"/><text x="80.1710%" y="607.50"></text></g><g><title>core::slice::raw::from_raw_parts (36 samples, 0.22%)</title><rect x="80.2922%" y="581" width="0.2156%" height="15" fill="rgb(229,96,36)" fg:x="13408" fg:w="36"/><text x="80.5422%" y="591.50"></text></g><g><title>core::ptr::slice_from_raw_parts (36 samples, 0.22%)</title><rect x="80.2922%" y="565" width="0.2156%" height="15" fill="rgb(231,102,53)" fg:x="13408" fg:w="36"/><text x="80.5422%" y="575.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (35 samples, 0.21%)</title><rect x="80.2982%" y="549" width="0.2096%" height="15" fill="rgb(210,77,38)" fg:x="13409" fg:w="35"/><text x="80.5482%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (9 samples, 0.05%)</title><rect x="80.7953%" y="597" width="0.0539%" height="15" fill="rgb(235,131,6)" fg:x="13492" fg:w="9"/><text x="81.0453%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (6 samples, 0.04%)</title><rect x="80.8132%" y="581" width="0.0359%" height="15" fill="rgb(252,55,38)" fg:x="13495" fg:w="6"/><text x="81.0632%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (19 samples, 0.11%)</title><rect x="80.8492%" y="597" width="0.1138%" height="15" fill="rgb(246,38,14)" fg:x="13501" fg:w="19"/><text x="81.0992%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null::runtime_impl (4 samples, 0.02%)</title><rect x="80.9390%" y="581" width="0.0240%" height="15" fill="rgb(242,27,5)" fg:x="13516" fg:w="4"/><text x="81.1890%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::addr (4 samples, 0.02%)</title><rect x="80.9390%" y="565" width="0.0240%" height="15" fill="rgb(228,65,35)" fg:x="13516" fg:w="4"/><text x="81.1890%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (387 samples, 2.32%)</title><rect x="78.6814%" y="645" width="2.3175%" height="15" fill="rgb(245,93,11)" fg:x="13139" fg:w="387"/><text x="78.9314%" y="655.50">a..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (82 samples, 0.49%)</title><rect x="80.5078%" y="629" width="0.4910%" height="15" fill="rgb(213,1,31)" fg:x="13444" fg:w="82"/><text x="80.7578%" y="639.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (79 samples, 0.47%)</title><rect x="80.5258%" y="613" width="0.4731%" height="15" fill="rgb(237,205,14)" fg:x="13447" fg:w="79"/><text x="80.7758%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (6 samples, 0.04%)</title><rect x="80.9629%" y="597" width="0.0359%" height="15" fill="rgb(232,118,45)" fg:x="13520" fg:w="6"/><text x="81.2129%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (416 samples, 2.49%)</title><rect x="78.5316%" y="709" width="2.4912%" height="15" fill="rgb(218,5,6)" fg:x="13114" fg:w="416"/><text x="78.7816%" y="719.50">co..</text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (411 samples, 2.46%)</title><rect x="78.5616%" y="693" width="2.4612%" height="15" fill="rgb(251,87,51)" fg:x="13119" fg:w="411"/><text x="78.8116%" y="703.50">&lt;&amp;..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (403 samples, 2.41%)</title><rect x="78.6095%" y="677" width="2.4133%" height="15" fill="rgb(207,225,20)" fg:x="13127" fg:w="403"/><text x="78.8595%" y="687.50">&lt;a..</text></g><g><title>alloc::string::String::push_str (391 samples, 2.34%)</title><rect x="78.6814%" y="661" width="2.3415%" height="15" fill="rgb(222,78,54)" fg:x="13139" fg:w="391"/><text x="78.9314%" y="671.50">a..</text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (4 samples, 0.02%)</title><rect x="80.9989%" y="645" width="0.0240%" height="15" fill="rgb(232,85,16)" fg:x="13526" fg:w="4"/><text x="81.2489%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (1,141 samples, 6.83%)</title><rect x="74.2020%" y="821" width="6.8327%" height="15" fill="rgb(244,25,33)" fg:x="12391" fg:w="1141"/><text x="74.4520%" y="831.50">&lt;alloc::v..</text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (1,141 samples, 6.83%)</title><rect x="74.2020%" y="805" width="6.8327%" height="15" fill="rgb(233,24,36)" fg:x="12391" fg:w="1141"/><text x="74.4520%" y="815.50">&lt;[T] as c..</text></g><g><title>core::fmt::builders::DebugList::entries (1,141 samples, 6.83%)</title><rect x="74.2020%" y="789" width="6.8327%" height="15" fill="rgb(253,49,54)" fg:x="12391" fg:w="1141"/><text x="74.4520%" y="799.50">core::fmt..</text></g><g><title>core::fmt::builders::DebugSet::entry (1,011 samples, 6.05%)</title><rect x="74.9805%" y="773" width="6.0543%" height="15" fill="rgb(245,12,22)" fg:x="12521" fg:w="1011"/><text x="75.2305%" y="783.50">core::fm..</text></g><g><title>core::fmt::builders::DebugInner::entry (1,011 samples, 6.05%)</title><rect x="74.9805%" y="757" width="6.0543%" height="15" fill="rgb(253,141,28)" fg:x="12521" fg:w="1011"/><text x="75.2305%" y="767.50">core::fm..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,002 samples, 6.00%)</title><rect x="75.0344%" y="741" width="6.0004%" height="15" fill="rgb(225,207,27)" fg:x="12530" fg:w="1002"/><text x="75.2844%" y="751.50">core::re..</text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (997 samples, 5.97%)</title><rect x="75.0644%" y="725" width="5.9704%" height="15" fill="rgb(220,84,2)" fg:x="12535" fg:w="997"/><text x="75.3144%" y="735.50">core::fm..</text></g><g><title>core::fmt::builders::DebugInner::is_pretty (2 samples, 0.01%)</title><rect x="81.0228%" y="709" width="0.0120%" height="15" fill="rgb(224,37,37)" fg:x="13530" fg:w="2"/><text x="81.2728%" y="719.50"></text></g><g><title>core::fmt::Formatter::alternate (2 samples, 0.01%)</title><rect x="81.0228%" y="693" width="0.0120%" height="15" fill="rgb(220,143,18)" fg:x="13530" fg:w="2"/><text x="81.2728%" y="703.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1,146 samples, 6.86%)</title><rect x="74.2020%" y="853" width="6.8627%" height="15" fill="rgb(210,88,33)" fg:x="12391" fg:w="1146"/><text x="74.4520%" y="863.50">&lt;&amp;T as co..</text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1,146 samples, 6.86%)</title><rect x="74.2020%" y="837" width="6.8627%" height="15" fill="rgb(219,87,51)" fg:x="12391" fg:w="1146"/><text x="74.4520%" y="847.50">&lt;&amp;T as co..</text></g><g><title>&lt;veilid_core::veilid_api::routing_context::Target as core::fmt::Debug&gt;::fmt (5 samples, 0.03%)</title><rect x="81.0348%" y="821" width="0.0299%" height="15" fill="rgb(211,7,35)" fg:x="13532" fg:w="5"/><text x="81.2848%" y="831.50"></text></g><g><title>core::fmt::Formatter::debug_tuple_field1_finish (5 samples, 0.03%)</title><rect x="81.0348%" y="805" width="0.0299%" height="15" fill="rgb(232,77,2)" fg:x="13532" fg:w="5"/><text x="81.2848%" y="815.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (5 samples, 0.03%)</title><rect x="81.0348%" y="789" width="0.0299%" height="15" fill="rgb(249,94,25)" fg:x="13532" fg:w="5"/><text x="81.2848%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (5 samples, 0.03%)</title><rect x="81.0348%" y="773" width="0.0299%" height="15" fill="rgb(215,112,2)" fg:x="13532" fg:w="5"/><text x="81.2848%" y="783.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (5 samples, 0.03%)</title><rect x="81.0348%" y="757" width="0.0299%" height="15" fill="rgb(226,115,48)" fg:x="13532" fg:w="5"/><text x="81.2848%" y="767.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (5 samples, 0.03%)</title><rect x="81.0348%" y="741" width="0.0299%" height="15" fill="rgb(249,196,10)" fg:x="13532" fg:w="5"/><text x="81.2848%" y="751.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as core::fmt::Debug&gt;::fmt (5 samples, 0.03%)</title><rect x="81.0348%" y="725" width="0.0299%" height="15" fill="rgb(237,109,14)" fg:x="13532" fg:w="5"/><text x="81.2848%" y="735.50"></text></g><g><title>&lt;veilid_core::crypto::byte_array_types::CryptoKey as veilid_core::crypto::byte_array_types::Encodable&gt;::encode (5 samples, 0.03%)</title><rect x="81.0348%" y="709" width="0.0299%" height="15" fill="rgb(217,103,53)" fg:x="13532" fg:w="5"/><text x="81.2848%" y="719.50"></text></g><g><title>data_encoding::Encoding::encode (5 samples, 0.03%)</title><rect x="81.0348%" y="693" width="0.0299%" height="15" fill="rgb(244,137,9)" fg:x="13532" fg:w="5"/><text x="81.2848%" y="703.50"></text></g><g><title>data_encoding::Encoding::encode_mut (4 samples, 0.02%)</title><rect x="81.0408%" y="677" width="0.0240%" height="15" fill="rgb(227,201,3)" fg:x="13533" fg:w="4"/><text x="81.2908%" y="687.50"></text></g><g><title>data_encoding::encode_wrap_mut (4 samples, 0.02%)</title><rect x="81.0408%" y="661" width="0.0240%" height="15" fill="rgb(243,94,6)" fg:x="13533" fg:w="4"/><text x="81.2908%" y="671.50"></text></g><g><title>data_encoding::encode_pad (4 samples, 0.02%)</title><rect x="81.0408%" y="645" width="0.0240%" height="15" fill="rgb(235,118,5)" fg:x="13533" fg:w="4"/><text x="81.2908%" y="655.50"></text></g><g><title>data_encoding::encode_base (4 samples, 0.02%)</title><rect x="81.0408%" y="629" width="0.0240%" height="15" fill="rgb(247,10,30)" fg:x="13533" fg:w="4"/><text x="81.2908%" y="639.50"></text></g><g><title>data_encoding::encode_mut (4 samples, 0.02%)</title><rect x="81.0408%" y="613" width="0.0240%" height="15" fill="rgb(205,26,28)" fg:x="13533" fg:w="4"/><text x="81.2908%" y="623.50"></text></g><g><title>data_encoding::vectorize (4 samples, 0.02%)</title><rect x="81.0408%" y="597" width="0.0240%" height="15" fill="rgb(206,99,35)" fg:x="13533" fg:w="4"/><text x="81.2908%" y="607.50"></text></g><g><title>data_encoding::encode_mut::{{closure}} (4 samples, 0.02%)</title><rect x="81.0408%" y="581" width="0.0240%" height="15" fill="rgb(238,130,40)" fg:x="13533" fg:w="4"/><text x="81.2908%" y="591.50"></text></g><g><title>data_encoding::encode_block (3 samples, 0.02%)</title><rect x="81.0468%" y="565" width="0.0180%" height="15" fill="rgb(224,126,31)" fg:x="13534" fg:w="3"/><text x="81.2968%" y="575.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (1,148 samples, 6.87%)</title><rect x="74.1961%" y="949" width="6.8747%" height="15" fill="rgb(254,105,17)" fg:x="12390" fg:w="1148"/><text x="74.4461%" y="959.50">&lt;&amp;T as tr..</text></g><g><title>&lt;tracing_core::field::DebugValue&lt;T&gt; as tracing_core::field::Value&gt;::record (1,148 samples, 6.87%)</title><rect x="74.1961%" y="933" width="6.8747%" height="15" fill="rgb(216,87,36)" fg:x="12390" fg:w="1148"/><text x="74.4461%" y="943.50">&lt;tracing_..</text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1,148 samples, 6.87%)</title><rect x="74.1961%" y="917" width="6.8747%" height="15" fill="rgb(240,21,12)" fg:x="12390" fg:w="1148"/><text x="74.4461%" y="927.50">&lt;tracing_..</text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (1,147 samples, 6.87%)</title><rect x="74.2020%" y="901" width="6.8687%" height="15" fill="rgb(245,192,34)" fg:x="12391" fg:w="1147"/><text x="74.4520%" y="911.50">tracing_s..</text></g><g><title>core::fmt::Write::write_fmt (1,147 samples, 6.87%)</title><rect x="74.2020%" y="885" width="6.8687%" height="15" fill="rgb(226,100,49)" fg:x="12391" fg:w="1147"/><text x="74.4520%" y="895.50">core::fmt..</text></g><g><title>core::fmt::write (1,147 samples, 6.87%)</title><rect x="74.2020%" y="869" width="6.8687%" height="15" fill="rgb(245,188,27)" fg:x="12391" fg:w="1147"/><text x="74.4520%" y="879.50">core::fmt..</text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (1,149 samples, 6.88%)</title><rect x="74.1961%" y="1029" width="6.8807%" height="15" fill="rgb(212,170,8)" fg:x="12390" fg:w="1149"/><text x="74.4461%" y="1039.50">&lt;M as tra..</text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (1,149 samples, 6.88%)</title><rect x="74.1961%" y="1013" width="6.8807%" height="15" fill="rgb(217,113,29)" fg:x="12390" fg:w="1149"/><text x="74.4461%" y="1023.50">&lt;&amp;F as tr..</text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (1,149 samples, 6.88%)</title><rect x="74.1961%" y="997" width="6.8807%" height="15" fill="rgb(237,30,3)" fg:x="12390" fg:w="1149"/><text x="74.4461%" y="1007.50">&lt;tracing_..</text></g><g><title>tracing_core::span::Attributes::record (1,149 samples, 6.88%)</title><rect x="74.1961%" y="981" width="6.8807%" height="15" fill="rgb(227,19,28)" fg:x="12390" fg:w="1149"/><text x="74.4461%" y="991.50">tracing_c..</text></g><g><title>tracing_core::field::ValueSet::record (1,149 samples, 6.88%)</title><rect x="74.1961%" y="965" width="6.8807%" height="15" fill="rgb(239,172,45)" fg:x="12390" fg:w="1149"/><text x="74.4461%" y="975.50">tracing_c..</text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::registry::sharded::Registry&gt;&gt; (2 samples, 0.01%)</title><rect x="81.0767%" y="1029" width="0.0120%" height="15" fill="rgb(254,55,39)" fg:x="13539" fg:w="2"/><text x="81.3267%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (2 samples, 0.01%)</title><rect x="81.0767%" y="1013" width="0.0120%" height="15" fill="rgb(249,208,12)" fg:x="13539" fg:w="2"/><text x="81.3267%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (2 samples, 0.01%)</title><rect x="81.0767%" y="997" width="0.0120%" height="15" fill="rgb(240,52,13)" fg:x="13539" fg:w="2"/><text x="81.3267%" y="1007.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="81.0767%" y="981" width="0.0120%" height="15" fill="rgb(252,149,13)" fg:x="13539" fg:w="2"/><text x="81.3267%" y="991.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (2 samples, 0.01%)</title><rect x="81.0767%" y="965" width="0.0120%" height="15" fill="rgb(232,81,48)" fg:x="13539" fg:w="2"/><text x="81.3267%" y="975.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (2 samples, 0.01%)</title><rect x="81.0767%" y="949" width="0.0120%" height="15" fill="rgb(222,144,2)" fg:x="13539" fg:w="2"/><text x="81.3267%" y="959.50"></text></g><g><title>tracing_subscriber::fmt::fmt_layer::FormattedFields&lt;E&gt;::as_writer (2 samples, 0.01%)</title><rect x="81.0887%" y="1029" width="0.0120%" height="15" fill="rgb(216,81,32)" fg:x="13541" fg:w="2"/><text x="81.3387%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;L&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (1,156 samples, 6.92%)</title><rect x="74.1901%" y="1189" width="6.9226%" height="15" fill="rgb(244,78,51)" fg:x="12389" fg:w="1156"/><text x="74.4401%" y="1199.50">&lt;alloc::v..</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn tracing_subscriber::layer::Layer&lt;S&gt;+core::marker::Send+core::marker::Sync&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (1,156 samples, 6.92%)</title><rect x="74.1901%" y="1173" width="6.9226%" height="15" fill="rgb(217,66,21)" fg:x="12389" fg:w="1156"/><text x="74.4401%" y="1183.50">&lt;alloc::b..</text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (1,156 samples, 6.92%)</title><rect x="74.1901%" y="1157" width="6.9226%" height="15" fill="rgb(247,101,42)" fg:x="12389" fg:w="1156"/><text x="74.4401%" y="1167.50">&lt;tracing_..</text></g><g><title>tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt;::did_enable (1,156 samples, 6.92%)</title><rect x="74.1901%" y="1141" width="6.9226%" height="15" fill="rgb(227,81,39)" fg:x="12389" fg:w="1156"/><text x="74.4401%" y="1151.50">tracing_s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,156 samples, 6.92%)</title><rect x="74.1901%" y="1125" width="6.9226%" height="15" fill="rgb(220,223,44)" fg:x="12389" fg:w="1156"/><text x="74.4401%" y="1135.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,156 samples, 6.92%)</title><rect x="74.1901%" y="1109" width="6.9226%" height="15" fill="rgb(205,218,2)" fg:x="12389" fg:w="1156"/><text x="74.4401%" y="1119.50">std::thre..</text></g><g><title>tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt;::did_enable::{{closure}} (1,156 samples, 6.92%)</title><rect x="74.1901%" y="1093" width="6.9226%" height="15" fill="rgb(212,207,28)" fg:x="12389" fg:w="1156"/><text x="74.4401%" y="1103.50">tracing_s..</text></g><g><title>tracing_subscriber::filter::layer_filters::FilterState::did_enable (1,156 samples, 6.92%)</title><rect x="74.1901%" y="1077" width="6.9226%" height="15" fill="rgb(224,12,41)" fg:x="12389" fg:w="1156"/><text x="74.4401%" y="1087.50">tracing_s..</text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span::{{closure}} (1,155 samples, 6.92%)</title><rect x="74.1961%" y="1061" width="6.9166%" height="15" fill="rgb(216,118,12)" fg:x="12390" fg:w="1155"/><text x="74.4461%" y="1071.50">&lt;tracing_..</text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (1,155 samples, 6.92%)</title><rect x="74.1961%" y="1045" width="6.9166%" height="15" fill="rgb(252,97,46)" fg:x="12390" fg:w="1155"/><text x="74.4461%" y="1055.50">&lt;tracing_..</text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (1,159 samples, 6.94%)</title><rect x="74.1901%" y="1221" width="6.9405%" height="15" fill="rgb(244,206,19)" fg:x="12389" fg:w="1159"/><text x="74.4401%" y="1231.50">tracing_c..</text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1,159 samples, 6.94%)</title><rect x="74.1901%" y="1205" width="6.9405%" height="15" fill="rgb(231,84,31)" fg:x="12389" fg:w="1159"/><text x="74.4401%" y="1215.50">&lt;tracing_..</text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (3 samples, 0.02%)</title><rect x="81.1126%" y="1189" width="0.0180%" height="15" fill="rgb(244,133,0)" fg:x="13545" fg:w="3"/><text x="81.3626%" y="1199.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create_with (2 samples, 0.01%)</title><rect x="81.1186%" y="1173" width="0.0120%" height="15" fill="rgb(223,15,50)" fg:x="13546" fg:w="2"/><text x="81.3686%" y="1183.50"></text></g><g><title>veilid_core::veilid_api::routing_context::RoutingContext::app_message::{{closure}} (1,171 samples, 7.01%)</title><rect x="74.1242%" y="1317" width="7.0124%" height="15" fill="rgb(250,118,49)" fg:x="12378" fg:w="1171"/><text x="74.3742%" y="1327.50">veilid_co..</text></g><g><title>tracing::span::Span::new (1,161 samples, 6.95%)</title><rect x="74.1841%" y="1301" width="6.9525%" height="15" fill="rgb(248,25,38)" fg:x="12388" fg:w="1161"/><text x="74.4341%" y="1311.50">tracing::..</text></g><g><title>tracing_core::dispatcher::get_default (1,160 samples, 6.95%)</title><rect x="74.1901%" y="1285" width="6.9465%" height="15" fill="rgb(215,70,14)" fg:x="12389" fg:w="1160"/><text x="74.4401%" y="1295.50">tracing_c..</text></g><g><title>tracing::span::Span::new::{{closure}} (1,160 samples, 6.95%)</title><rect x="74.1901%" y="1269" width="6.9465%" height="15" fill="rgb(215,28,15)" fg:x="12389" fg:w="1160"/><text x="74.4401%" y="1279.50">tracing::..</text></g><g><title>tracing::span::Span::new_with (1,160 samples, 6.95%)</title><rect x="74.1901%" y="1253" width="6.9465%" height="15" fill="rgb(243,6,28)" fg:x="12389" fg:w="1160"/><text x="74.4401%" y="1263.50">tracing::..</text></g><g><title>tracing::span::Span::make_with (1,160 samples, 6.95%)</title><rect x="74.1901%" y="1237" width="6.9465%" height="15" fill="rgb(222,130,1)" fg:x="12389" fg:w="1160"/><text x="74.4401%" y="1247.50">tracing::..</text></g><g><title>veilid_server::client_api::ClientApi::next_request_line::{{closure}} (2 samples, 0.01%)</title><rect x="81.1665%" y="1221" width="0.0120%" height="15" fill="rgb(236,166,44)" fg:x="13554" fg:w="2"/><text x="81.4165%" y="1231.50"></text></g><g><title>&lt;flume::async::SendFut&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="81.1785%" y="1205" width="0.0120%" height="15" fill="rgb(221,108,14)" fg:x="13556" fg:w="2"/><text x="81.4285%" y="1215.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.01%)</title><rect x="81.2264%" y="645" width="0.0120%" height="15" fill="rgb(252,3,45)" fg:x="13564" fg:w="2"/><text x="81.4764%" y="655.50"></text></g><g><title>do_softirq.part.0 (2 samples, 0.01%)</title><rect x="81.2264%" y="629" width="0.0120%" height="15" fill="rgb(237,68,30)" fg:x="13564" fg:w="2"/><text x="81.4764%" y="639.50"></text></g><g><title>__do_softirq (2 samples, 0.01%)</title><rect x="81.2264%" y="613" width="0.0120%" height="15" fill="rgb(211,79,22)" fg:x="13564" fg:w="2"/><text x="81.4764%" y="623.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="81.2264%" y="597" width="0.0120%" height="15" fill="rgb(252,185,21)" fg:x="13564" fg:w="2"/><text x="81.4764%" y="607.50"></text></g><g><title>__napi_poll (2 samples, 0.01%)</title><rect x="81.2264%" y="581" width="0.0120%" height="15" fill="rgb(225,189,26)" fg:x="13564" fg:w="2"/><text x="81.4764%" y="591.50"></text></g><g><title>process_backlog (2 samples, 0.01%)</title><rect x="81.2264%" y="565" width="0.0120%" height="15" fill="rgb(241,30,40)" fg:x="13564" fg:w="2"/><text x="81.4764%" y="575.50"></text></g><g><title>__netif_receive_skb (2 samples, 0.01%)</title><rect x="81.2264%" y="549" width="0.0120%" height="15" fill="rgb(235,215,44)" fg:x="13564" fg:w="2"/><text x="81.4764%" y="559.50"></text></g><g><title>__netif_receive_skb_one_core (2 samples, 0.01%)</title><rect x="81.2264%" y="533" width="0.0120%" height="15" fill="rgb(205,8,29)" fg:x="13564" fg:w="2"/><text x="81.4764%" y="543.50"></text></g><g><title>ipv6_rcv (2 samples, 0.01%)</title><rect x="81.2264%" y="517" width="0.0120%" height="15" fill="rgb(241,137,42)" fg:x="13564" fg:w="2"/><text x="81.4764%" y="527.50"></text></g><g><title>ip6_input (2 samples, 0.01%)</title><rect x="81.2264%" y="501" width="0.0120%" height="15" fill="rgb(237,155,2)" fg:x="13564" fg:w="2"/><text x="81.4764%" y="511.50"></text></g><g><title>ip6_input_finish (2 samples, 0.01%)</title><rect x="81.2264%" y="485" width="0.0120%" height="15" fill="rgb(245,29,42)" fg:x="13564" fg:w="2"/><text x="81.4764%" y="495.50"></text></g><g><title>ip6_protocol_deliver_rcu (2 samples, 0.01%)</title><rect x="81.2264%" y="469" width="0.0120%" height="15" fill="rgb(234,101,35)" fg:x="13564" fg:w="2"/><text x="81.4764%" y="479.50"></text></g><g><title>tcp_v6_rcv (2 samples, 0.01%)</title><rect x="81.2264%" y="453" width="0.0120%" height="15" fill="rgb(228,64,37)" fg:x="13564" fg:w="2"/><text x="81.4764%" y="463.50"></text></g><g><title>tcp_v6_do_rcv (2 samples, 0.01%)</title><rect x="81.2264%" y="437" width="0.0120%" height="15" fill="rgb(217,214,36)" fg:x="13564" fg:w="2"/><text x="81.4764%" y="447.50"></text></g><g><title>ip6_output (3 samples, 0.02%)</title><rect x="81.2264%" y="693" width="0.0180%" height="15" fill="rgb(243,70,3)" fg:x="13564" fg:w="3"/><text x="81.4764%" y="703.50"></text></g><g><title>ip6_finish_output (3 samples, 0.02%)</title><rect x="81.2264%" y="677" width="0.0180%" height="15" fill="rgb(253,158,52)" fg:x="13564" fg:w="3"/><text x="81.4764%" y="687.50"></text></g><g><title>ip6_finish_output2 (3 samples, 0.02%)</title><rect x="81.2264%" y="661" width="0.0180%" height="15" fill="rgb(234,111,54)" fg:x="13564" fg:w="3"/><text x="81.4764%" y="671.50"></text></g><g><title>inet6_recvmsg (6 samples, 0.04%)</title><rect x="81.2144%" y="853" width="0.0359%" height="15" fill="rgb(217,70,32)" fg:x="13562" fg:w="6"/><text x="81.4644%" y="863.50"></text></g><g><title>tcp_recvmsg (6 samples, 0.04%)</title><rect x="81.2144%" y="837" width="0.0359%" height="15" fill="rgb(234,18,33)" fg:x="13562" fg:w="6"/><text x="81.4644%" y="847.50"></text></g><g><title>tcp_recvmsg_locked (6 samples, 0.04%)</title><rect x="81.2144%" y="821" width="0.0359%" height="15" fill="rgb(234,12,49)" fg:x="13562" fg:w="6"/><text x="81.4644%" y="831.50"></text></g><g><title>tcp_cleanup_rbuf (5 samples, 0.03%)</title><rect x="81.2204%" y="805" width="0.0299%" height="15" fill="rgb(236,10,21)" fg:x="13563" fg:w="5"/><text x="81.4704%" y="815.50"></text></g><g><title>__tcp_cleanup_rbuf (5 samples, 0.03%)</title><rect x="81.2204%" y="789" width="0.0299%" height="15" fill="rgb(248,182,45)" fg:x="13563" fg:w="5"/><text x="81.4704%" y="799.50"></text></g><g><title>tcp_send_ack (5 samples, 0.03%)</title><rect x="81.2204%" y="773" width="0.0299%" height="15" fill="rgb(217,95,36)" fg:x="13563" fg:w="5"/><text x="81.4704%" y="783.50"></text></g><g><title>__tcp_send_ack.part.0 (5 samples, 0.03%)</title><rect x="81.2204%" y="757" width="0.0299%" height="15" fill="rgb(212,110,31)" fg:x="13563" fg:w="5"/><text x="81.4704%" y="767.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.03%)</title><rect x="81.2204%" y="741" width="0.0299%" height="15" fill="rgb(206,32,53)" fg:x="13563" fg:w="5"/><text x="81.4704%" y="751.50"></text></g><g><title>inet6_csk_xmit (4 samples, 0.02%)</title><rect x="81.2264%" y="725" width="0.0240%" height="15" fill="rgb(246,141,37)" fg:x="13564" fg:w="4"/><text x="81.4764%" y="735.50"></text></g><g><title>ip6_xmit (4 samples, 0.02%)</title><rect x="81.2264%" y="709" width="0.0240%" height="15" fill="rgb(219,16,7)" fg:x="13564" fg:w="4"/><text x="81.4764%" y="719.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (8 samples, 0.05%)</title><rect x="81.2085%" y="1093" width="0.0479%" height="15" fill="rgb(230,205,45)" fg:x="13561" fg:w="8"/><text x="81.4585%" y="1103.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (8 samples, 0.05%)</title><rect x="81.2085%" y="1077" width="0.0479%" height="15" fill="rgb(231,43,49)" fg:x="13561" fg:w="8"/><text x="81.4585%" y="1087.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (8 samples, 0.05%)</title><rect x="81.2085%" y="1061" width="0.0479%" height="15" fill="rgb(212,106,34)" fg:x="13561" fg:w="8"/><text x="81.4585%" y="1071.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (8 samples, 0.05%)</title><rect x="81.2085%" y="1045" width="0.0479%" height="15" fill="rgb(206,83,17)" fg:x="13561" fg:w="8"/><text x="81.4585%" y="1055.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (8 samples, 0.05%)</title><rect x="81.2085%" y="1029" width="0.0479%" height="15" fill="rgb(244,154,49)" fg:x="13561" fg:w="8"/><text x="81.4585%" y="1039.50"></text></g><g><title>std::sys_common::net::TcpStream::read (8 samples, 0.05%)</title><rect x="81.2085%" y="1013" width="0.0479%" height="15" fill="rgb(244,149,49)" fg:x="13561" fg:w="8"/><text x="81.4585%" y="1023.50"></text></g><g><title>std::sys::unix::net::Socket::read (8 samples, 0.05%)</title><rect x="81.2085%" y="997" width="0.0479%" height="15" fill="rgb(227,134,18)" fg:x="13561" fg:w="8"/><text x="81.4585%" y="1007.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (8 samples, 0.05%)</title><rect x="81.2085%" y="981" width="0.0479%" height="15" fill="rgb(237,116,36)" fg:x="13561" fg:w="8"/><text x="81.4585%" y="991.50"></text></g><g><title>__libc_recv (8 samples, 0.05%)</title><rect x="81.2085%" y="965" width="0.0479%" height="15" fill="rgb(205,129,40)" fg:x="13561" fg:w="8"/><text x="81.4585%" y="975.50"></text></g><g><title>__libc_recv (8 samples, 0.05%)</title><rect x="81.2085%" y="949" width="0.0479%" height="15" fill="rgb(236,178,4)" fg:x="13561" fg:w="8"/><text x="81.4585%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.05%)</title><rect x="81.2085%" y="933" width="0.0479%" height="15" fill="rgb(251,76,53)" fg:x="13561" fg:w="8"/><text x="81.4585%" y="943.50"></text></g><g><title>do_syscall_64 (7 samples, 0.04%)</title><rect x="81.2144%" y="917" width="0.0419%" height="15" fill="rgb(242,92,40)" fg:x="13562" fg:w="7"/><text x="81.4644%" y="927.50"></text></g><g><title>__x64_sys_recvfrom (7 samples, 0.04%)</title><rect x="81.2144%" y="901" width="0.0419%" height="15" fill="rgb(209,45,30)" fg:x="13562" fg:w="7"/><text x="81.4644%" y="911.50"></text></g><g><title>__sys_recvfrom (7 samples, 0.04%)</title><rect x="81.2144%" y="885" width="0.0419%" height="15" fill="rgb(218,157,36)" fg:x="13562" fg:w="7"/><text x="81.4644%" y="895.50"></text></g><g><title>sock_recvmsg (7 samples, 0.04%)</title><rect x="81.2144%" y="869" width="0.0419%" height="15" fill="rgb(222,186,16)" fg:x="13562" fg:w="7"/><text x="81.4644%" y="879.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (13 samples, 0.08%)</title><rect x="81.2025%" y="1157" width="0.0778%" height="15" fill="rgb(254,72,35)" fg:x="13560" fg:w="13"/><text x="81.4525%" y="1167.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedReadHalf as tokio::io::async_read::AsyncRead&gt;::poll_read (12 samples, 0.07%)</title><rect x="81.2085%" y="1141" width="0.0719%" height="15" fill="rgb(224,25,35)" fg:x="13561" fg:w="12"/><text x="81.4585%" y="1151.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (12 samples, 0.07%)</title><rect x="81.2085%" y="1125" width="0.0719%" height="15" fill="rgb(206,135,52)" fg:x="13561" fg:w="12"/><text x="81.4585%" y="1135.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (12 samples, 0.07%)</title><rect x="81.2085%" y="1109" width="0.0719%" height="15" fill="rgb(229,174,47)" fg:x="13561" fg:w="12"/><text x="81.4585%" y="1119.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (2 samples, 0.01%)</title><rect x="81.2683%" y="1093" width="0.0120%" height="15" fill="rgb(242,184,21)" fg:x="13571" fg:w="2"/><text x="81.5183%" y="1103.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (2 samples, 0.01%)</title><rect x="81.2683%" y="1077" width="0.0120%" height="15" fill="rgb(213,22,45)" fg:x="13571" fg:w="2"/><text x="81.5183%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="81.2803%" y="1157" width="0.0120%" height="15" fill="rgb(237,81,54)" fg:x="13573" fg:w="2"/><text x="81.5303%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="81.2803%" y="1141" width="0.0120%" height="15" fill="rgb(248,177,18)" fg:x="13573" fg:w="2"/><text x="81.5303%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="81.2803%" y="1125" width="0.0120%" height="15" fill="rgb(254,31,16)" fg:x="13573" fg:w="2"/><text x="81.5303%" y="1135.50"></text></g><g><title>&lt;tokio::io::util::read_line::ReadLine&lt;R&gt; as core::future::future::Future&gt;::poll (18 samples, 0.11%)</title><rect x="81.1905%" y="1205" width="0.1078%" height="15" fill="rgb(235,20,31)" fg:x="13558" fg:w="18"/><text x="81.4405%" y="1215.50"></text></g><g><title>tokio::io::util::read_line::read_line_internal (18 samples, 0.11%)</title><rect x="81.1905%" y="1189" width="0.1078%" height="15" fill="rgb(240,56,43)" fg:x="13558" fg:w="18"/><text x="81.4405%" y="1199.50"></text></g><g><title>tokio::io::util::read_until::read_until_internal (17 samples, 0.10%)</title><rect x="81.1965%" y="1173" width="0.1018%" height="15" fill="rgb(237,197,51)" fg:x="13559" fg:w="17"/><text x="81.4465%" y="1183.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.02%)</title><rect x="81.2983%" y="1205" width="0.0180%" height="15" fill="rgb(241,162,44)" fg:x="13576" fg:w="3"/><text x="81.5483%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.02%)</title><rect x="81.2983%" y="1189" width="0.0180%" height="15" fill="rgb(224,23,20)" fg:x="13576" fg:w="3"/><text x="81.5483%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.02%)</title><rect x="81.2983%" y="1173" width="0.0180%" height="15" fill="rgb(250,109,34)" fg:x="13576" fg:w="3"/><text x="81.5483%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.02%)</title><rect x="81.2983%" y="1157" width="0.0180%" height="15" fill="rgb(214,175,50)" fg:x="13576" fg:w="3"/><text x="81.5483%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.02%)</title><rect x="81.2983%" y="1141" width="0.0180%" height="15" fill="rgb(213,182,5)" fg:x="13576" fg:w="3"/><text x="81.5483%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.02%)</title><rect x="81.2983%" y="1125" width="0.0180%" height="15" fill="rgb(209,199,19)" fg:x="13576" fg:w="3"/><text x="81.5483%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="81.2983%" y="1109" width="0.0180%" height="15" fill="rgb(236,224,42)" fg:x="13576" fg:w="3"/><text x="81.5483%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="81.2983%" y="1093" width="0.0180%" height="15" fill="rgb(246,226,29)" fg:x="13576" fg:w="3"/><text x="81.5483%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="81.2983%" y="1077" width="0.0180%" height="15" fill="rgb(227,223,11)" fg:x="13576" fg:w="3"/><text x="81.5483%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="81.2983%" y="1061" width="0.0180%" height="15" fill="rgb(219,7,51)" fg:x="13576" fg:w="3"/><text x="81.5483%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="81.2983%" y="1045" width="0.0180%" height="15" fill="rgb(245,167,10)" fg:x="13576" fg:w="3"/><text x="81.5483%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="81.2983%" y="1029" width="0.0180%" height="15" fill="rgb(237,224,16)" fg:x="13576" fg:w="3"/><text x="81.5483%" y="1039.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="81.2983%" y="1013" width="0.0180%" height="15" fill="rgb(226,132,13)" fg:x="13576" fg:w="3"/><text x="81.5483%" y="1023.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="81.2983%" y="997" width="0.0180%" height="15" fill="rgb(214,140,3)" fg:x="13576" fg:w="3"/><text x="81.5483%" y="1007.50"></text></g><g><title>malloc_consolidate (2 samples, 0.01%)</title><rect x="81.3043%" y="981" width="0.0120%" height="15" fill="rgb(221,177,4)" fg:x="13577" fg:w="2"/><text x="81.5543%" y="991.50"></text></g><g><title>veilid_server::client_api::ClientApi::receive_requests::{{closure}} (25 samples, 0.15%)</title><rect x="81.1785%" y="1221" width="0.1497%" height="15" fill="rgb(238,139,3)" fg:x="13556" fg:w="25"/><text x="81.4285%" y="1231.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="81.3282%" y="1205" width="0.0240%" height="15" fill="rgb(216,17,39)" fg:x="13581" fg:w="4"/><text x="81.5782%" y="1215.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (4 samples, 0.02%)</title><rect x="81.3282%" y="1189" width="0.0240%" height="15" fill="rgb(238,120,9)" fg:x="13581" fg:w="4"/><text x="81.5782%" y="1199.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (4 samples, 0.02%)</title><rect x="81.3282%" y="1173" width="0.0240%" height="15" fill="rgb(244,92,53)" fg:x="13581" fg:w="4"/><text x="81.5782%" y="1183.50"></text></g><g><title>core::mem::drop (2 samples, 0.01%)</title><rect x="81.3402%" y="1157" width="0.0120%" height="15" fill="rgb(224,148,33)" fg:x="13583" fg:w="2"/><text x="81.5902%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;alloc::string::String&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="81.3402%" y="1141" width="0.0120%" height="15" fill="rgb(243,6,36)" fg:x="13583" fg:w="2"/><text x="81.5902%" y="1151.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="81.3402%" y="1125" width="0.0120%" height="15" fill="rgb(230,102,11)" fg:x="13583" fg:w="2"/><text x="81.5902%" y="1135.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (2 samples, 0.01%)</title><rect x="81.4300%" y="597" width="0.0120%" height="15" fill="rgb(234,148,36)" fg:x="13598" fg:w="2"/><text x="81.6800%" y="607.50"></text></g><g><title>__tcp_ack_snd_check (2 samples, 0.01%)</title><rect x="81.4660%" y="485" width="0.0120%" height="15" fill="rgb(251,153,25)" fg:x="13604" fg:w="2"/><text x="81.7160%" y="495.50"></text></g><g><title>tcp_send_ack (2 samples, 0.01%)</title><rect x="81.4660%" y="469" width="0.0120%" height="15" fill="rgb(215,129,8)" fg:x="13604" fg:w="2"/><text x="81.7160%" y="479.50"></text></g><g><title>__tcp_send_ack.part.0 (2 samples, 0.01%)</title><rect x="81.4660%" y="453" width="0.0120%" height="15" fill="rgb(224,128,35)" fg:x="13604" fg:w="2"/><text x="81.7160%" y="463.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="81.4660%" y="437" width="0.0120%" height="15" fill="rgb(237,56,52)" fg:x="13604" fg:w="2"/><text x="81.7160%" y="447.50"></text></g><g><title>inet6_csk_xmit (2 samples, 0.01%)</title><rect x="81.4660%" y="421" width="0.0120%" height="15" fill="rgb(234,213,19)" fg:x="13604" fg:w="2"/><text x="81.7160%" y="431.50"></text></g><g><title>ip6_xmit (2 samples, 0.01%)</title><rect x="81.4660%" y="405" width="0.0120%" height="15" fill="rgb(252,82,23)" fg:x="13604" fg:w="2"/><text x="81.7160%" y="415.50"></text></g><g><title>nf_hook_slow (2 samples, 0.01%)</title><rect x="81.4660%" y="389" width="0.0120%" height="15" fill="rgb(254,201,21)" fg:x="13604" fg:w="2"/><text x="81.7160%" y="399.50"></text></g><g><title>ipv6_conntrack_local (2 samples, 0.01%)</title><rect x="81.4660%" y="373" width="0.0120%" height="15" fill="rgb(250,186,11)" fg:x="13604" fg:w="2"/><text x="81.7160%" y="383.50"></text></g><g><title>nf_conntrack_in (2 samples, 0.01%)</title><rect x="81.4660%" y="357" width="0.0120%" height="15" fill="rgb(211,174,5)" fg:x="13604" fg:w="2"/><text x="81.7160%" y="367.50"></text></g><g><title>resolve_normal_ct (2 samples, 0.01%)</title><rect x="81.4660%" y="341" width="0.0120%" height="15" fill="rgb(214,121,10)" fg:x="13604" fg:w="2"/><text x="81.7160%" y="351.50"></text></g><g><title>ip6_protocol_deliver_rcu (8 samples, 0.05%)</title><rect x="81.4420%" y="549" width="0.0479%" height="15" fill="rgb(241,66,2)" fg:x="13600" fg:w="8"/><text x="81.6920%" y="559.50"></text></g><g><title>tcp_v6_rcv (7 samples, 0.04%)</title><rect x="81.4480%" y="533" width="0.0419%" height="15" fill="rgb(220,167,19)" fg:x="13601" fg:w="7"/><text x="81.6980%" y="543.50"></text></g><g><title>tcp_v6_do_rcv (4 samples, 0.02%)</title><rect x="81.4660%" y="517" width="0.0240%" height="15" fill="rgb(231,54,50)" fg:x="13604" fg:w="4"/><text x="81.7160%" y="527.50"></text></g><g><title>tcp_rcv_established (4 samples, 0.02%)</title><rect x="81.4660%" y="501" width="0.0240%" height="15" fill="rgb(239,217,53)" fg:x="13604" fg:w="4"/><text x="81.7160%" y="511.50"></text></g><g><title>ip6_input (9 samples, 0.05%)</title><rect x="81.4420%" y="581" width="0.0539%" height="15" fill="rgb(248,8,0)" fg:x="13600" fg:w="9"/><text x="81.6920%" y="591.50"></text></g><g><title>ip6_input_finish (9 samples, 0.05%)</title><rect x="81.4420%" y="565" width="0.0539%" height="15" fill="rgb(229,118,37)" fg:x="13600" fg:w="9"/><text x="81.6920%" y="575.50"></text></g><g><title>expr_call_ops_eval (4 samples, 0.02%)</title><rect x="81.5498%" y="533" width="0.0240%" height="15" fill="rgb(253,223,43)" fg:x="13618" fg:w="4"/><text x="81.7998%" y="543.50"></text></g><g><title>strncpy (3 samples, 0.02%)</title><rect x="81.5558%" y="517" width="0.0180%" height="15" fill="rgb(211,77,36)" fg:x="13619" fg:w="3"/><text x="81.8058%" y="527.50"></text></g><g><title>__napi_poll (26 samples, 0.16%)</title><rect x="81.4240%" y="661" width="0.1557%" height="15" fill="rgb(219,3,53)" fg:x="13597" fg:w="26"/><text x="81.6740%" y="671.50"></text></g><g><title>process_backlog (25 samples, 0.15%)</title><rect x="81.4300%" y="645" width="0.1497%" height="15" fill="rgb(244,45,42)" fg:x="13598" fg:w="25"/><text x="81.6800%" y="655.50"></text></g><g><title>__netif_receive_skb (25 samples, 0.15%)</title><rect x="81.4300%" y="629" width="0.1497%" height="15" fill="rgb(225,95,27)" fg:x="13598" fg:w="25"/><text x="81.6800%" y="639.50"></text></g><g><title>__netif_receive_skb_one_core (25 samples, 0.15%)</title><rect x="81.4300%" y="613" width="0.1497%" height="15" fill="rgb(207,74,8)" fg:x="13598" fg:w="25"/><text x="81.6800%" y="623.50"></text></g><g><title>ipv6_rcv (23 samples, 0.14%)</title><rect x="81.4420%" y="597" width="0.1377%" height="15" fill="rgb(243,63,36)" fg:x="13600" fg:w="23"/><text x="81.6920%" y="607.50"></text></g><g><title>nf_hook_slow (14 samples, 0.08%)</title><rect x="81.4959%" y="581" width="0.0838%" height="15" fill="rgb(211,180,12)" fg:x="13609" fg:w="14"/><text x="81.7459%" y="591.50"></text></g><g><title>nft_do_chain_ipv6 (13 samples, 0.08%)</title><rect x="81.5019%" y="565" width="0.0778%" height="15" fill="rgb(254,166,49)" fg:x="13610" fg:w="13"/><text x="81.7519%" y="575.50"></text></g><g><title>nft_do_chain (13 samples, 0.08%)</title><rect x="81.5019%" y="549" width="0.0778%" height="15" fill="rgb(205,19,0)" fg:x="13610" fg:w="13"/><text x="81.7519%" y="559.50"></text></g><g><title>__local_bh_enable_ip (30 samples, 0.18%)</title><rect x="81.4061%" y="725" width="0.1797%" height="15" fill="rgb(224,172,32)" fg:x="13594" fg:w="30"/><text x="81.6561%" y="735.50"></text></g><g><title>do_softirq.part.0 (29 samples, 0.17%)</title><rect x="81.4121%" y="709" width="0.1737%" height="15" fill="rgb(254,136,30)" fg:x="13595" fg:w="29"/><text x="81.6621%" y="719.50"></text></g><g><title>__do_softirq (29 samples, 0.17%)</title><rect x="81.4121%" y="693" width="0.1737%" height="15" fill="rgb(246,19,35)" fg:x="13595" fg:w="29"/><text x="81.6621%" y="703.50"></text></g><g><title>net_rx_action (29 samples, 0.17%)</title><rect x="81.4121%" y="677" width="0.1737%" height="15" fill="rgb(219,24,36)" fg:x="13595" fg:w="29"/><text x="81.6621%" y="687.50"></text></g><g><title>ip6_finish_output (32 samples, 0.19%)</title><rect x="81.4001%" y="757" width="0.1916%" height="15" fill="rgb(251,55,1)" fg:x="13593" fg:w="32"/><text x="81.6501%" y="767.50"></text></g><g><title>ip6_finish_output2 (31 samples, 0.19%)</title><rect x="81.4061%" y="741" width="0.1856%" height="15" fill="rgb(218,117,39)" fg:x="13594" fg:w="31"/><text x="81.6561%" y="751.50"></text></g><g><title>ip6_output (33 samples, 0.20%)</title><rect x="81.4001%" y="773" width="0.1976%" height="15" fill="rgb(248,169,11)" fg:x="13593" fg:w="33"/><text x="81.6501%" y="783.50"></text></g><g><title>ipv6_conntrack_local (4 samples, 0.02%)</title><rect x="81.5977%" y="757" width="0.0240%" height="15" fill="rgb(244,40,44)" fg:x="13626" fg:w="4"/><text x="81.8477%" y="767.50"></text></g><g><title>nf_conntrack_in (4 samples, 0.02%)</title><rect x="81.5977%" y="741" width="0.0240%" height="15" fill="rgb(234,62,37)" fg:x="13626" fg:w="4"/><text x="81.8477%" y="751.50"></text></g><g><title>resolve_normal_ct (2 samples, 0.01%)</title><rect x="81.6097%" y="725" width="0.0120%" height="15" fill="rgb(207,117,42)" fg:x="13628" fg:w="2"/><text x="81.8597%" y="735.50"></text></g><g><title>siphash_4u64 (2 samples, 0.01%)</title><rect x="81.6097%" y="709" width="0.0120%" height="15" fill="rgb(213,43,2)" fg:x="13628" fg:w="2"/><text x="81.8597%" y="719.50"></text></g><g><title>tcp_push (44 samples, 0.26%)</title><rect x="81.3941%" y="869" width="0.2635%" height="15" fill="rgb(244,202,51)" fg:x="13592" fg:w="44"/><text x="81.6441%" y="879.50"></text></g><g><title>__tcp_push_pending_frames (44 samples, 0.26%)</title><rect x="81.3941%" y="853" width="0.2635%" height="15" fill="rgb(253,174,46)" fg:x="13592" fg:w="44"/><text x="81.6441%" y="863.50"></text></g><g><title>tcp_write_xmit (43 samples, 0.26%)</title><rect x="81.4001%" y="837" width="0.2575%" height="15" fill="rgb(251,23,1)" fg:x="13593" fg:w="43"/><text x="81.6501%" y="847.50"></text></g><g><title>__tcp_transmit_skb (43 samples, 0.26%)</title><rect x="81.4001%" y="821" width="0.2575%" height="15" fill="rgb(253,26,1)" fg:x="13593" fg:w="43"/><text x="81.6501%" y="831.50"></text></g><g><title>inet6_csk_xmit (43 samples, 0.26%)</title><rect x="81.4001%" y="805" width="0.2575%" height="15" fill="rgb(216,89,31)" fg:x="13593" fg:w="43"/><text x="81.6501%" y="815.50"></text></g><g><title>ip6_xmit (43 samples, 0.26%)</title><rect x="81.4001%" y="789" width="0.2575%" height="15" fill="rgb(209,109,5)" fg:x="13593" fg:w="43"/><text x="81.6501%" y="799.50"></text></g><g><title>nf_hook_slow (10 samples, 0.06%)</title><rect x="81.5977%" y="773" width="0.0599%" height="15" fill="rgb(229,63,13)" fg:x="13626" fg:w="10"/><text x="81.8477%" y="783.50"></text></g><g><title>nft_do_chain_ipv6 (5 samples, 0.03%)</title><rect x="81.6276%" y="757" width="0.0299%" height="15" fill="rgb(238,137,54)" fg:x="13631" fg:w="5"/><text x="81.8776%" y="767.50"></text></g><g><title>nft_do_chain (5 samples, 0.03%)</title><rect x="81.6276%" y="741" width="0.0299%" height="15" fill="rgb(228,1,9)" fg:x="13631" fg:w="5"/><text x="81.8776%" y="751.50"></text></g><g><title>nft_update_chain_stats (3 samples, 0.02%)</title><rect x="81.6396%" y="725" width="0.0180%" height="15" fill="rgb(249,120,48)" fg:x="13633" fg:w="3"/><text x="81.8896%" y="735.50"></text></g><g><title>inet6_sendmsg (49 samples, 0.29%)</title><rect x="81.3761%" y="917" width="0.2934%" height="15" fill="rgb(209,72,36)" fg:x="13589" fg:w="49"/><text x="81.6261%" y="927.50"></text></g><g><title>tcp_sendmsg (49 samples, 0.29%)</title><rect x="81.3761%" y="901" width="0.2934%" height="15" fill="rgb(247,98,49)" fg:x="13589" fg:w="49"/><text x="81.6261%" y="911.50"></text></g><g><title>tcp_sendmsg_locked (48 samples, 0.29%)</title><rect x="81.3821%" y="885" width="0.2874%" height="15" fill="rgb(233,75,36)" fg:x="13590" fg:w="48"/><text x="81.6321%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (53 samples, 0.32%)</title><rect x="81.3582%" y="997" width="0.3174%" height="15" fill="rgb(225,14,24)" fg:x="13586" fg:w="53"/><text x="81.6082%" y="1007.50"></text></g><g><title>do_syscall_64 (53 samples, 0.32%)</title><rect x="81.3582%" y="981" width="0.3174%" height="15" fill="rgb(237,193,20)" fg:x="13586" fg:w="53"/><text x="81.6082%" y="991.50"></text></g><g><title>__x64_sys_sendto (53 samples, 0.32%)</title><rect x="81.3582%" y="965" width="0.3174%" height="15" fill="rgb(239,122,19)" fg:x="13586" fg:w="53"/><text x="81.6082%" y="975.50"></text></g><g><title>__sys_sendto (53 samples, 0.32%)</title><rect x="81.3582%" y="949" width="0.3174%" height="15" fill="rgb(231,220,10)" fg:x="13586" fg:w="53"/><text x="81.6082%" y="959.50"></text></g><g><title>sock_sendmsg (51 samples, 0.31%)</title><rect x="81.3701%" y="933" width="0.3054%" height="15" fill="rgb(220,66,15)" fg:x="13588" fg:w="51"/><text x="81.6201%" y="943.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (55 samples, 0.33%)</title><rect x="81.3522%" y="1125" width="0.3294%" height="15" fill="rgb(215,171,52)" fg:x="13585" fg:w="55"/><text x="81.6022%" y="1135.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (54 samples, 0.32%)</title><rect x="81.3582%" y="1109" width="0.3234%" height="15" fill="rgb(241,169,50)" fg:x="13586" fg:w="54"/><text x="81.6082%" y="1119.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (54 samples, 0.32%)</title><rect x="81.3582%" y="1093" width="0.3234%" height="15" fill="rgb(236,189,0)" fg:x="13586" fg:w="54"/><text x="81.6082%" y="1103.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (54 samples, 0.32%)</title><rect x="81.3582%" y="1077" width="0.3234%" height="15" fill="rgb(217,147,20)" fg:x="13586" fg:w="54"/><text x="81.6082%" y="1087.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (54 samples, 0.32%)</title><rect x="81.3582%" y="1061" width="0.3234%" height="15" fill="rgb(206,188,39)" fg:x="13586" fg:w="54"/><text x="81.6082%" y="1071.50"></text></g><g><title>std::sys_common::net::TcpStream::write (54 samples, 0.32%)</title><rect x="81.3582%" y="1045" width="0.3234%" height="15" fill="rgb(227,118,25)" fg:x="13586" fg:w="54"/><text x="81.6082%" y="1055.50"></text></g><g><title>__libc_send (54 samples, 0.32%)</title><rect x="81.3582%" y="1029" width="0.3234%" height="15" fill="rgb(248,171,40)" fg:x="13586" fg:w="54"/><text x="81.6082%" y="1039.50"></text></g><g><title>__libc_send (54 samples, 0.32%)</title><rect x="81.3582%" y="1013" width="0.3234%" height="15" fill="rgb(251,90,54)" fg:x="13586" fg:w="54"/><text x="81.6082%" y="1023.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (58 samples, 0.35%)</title><rect x="81.3522%" y="1205" width="0.3473%" height="15" fill="rgb(234,11,46)" fg:x="13585" fg:w="58"/><text x="81.6022%" y="1215.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (58 samples, 0.35%)</title><rect x="81.3522%" y="1189" width="0.3473%" height="15" fill="rgb(229,134,13)" fg:x="13585" fg:w="58"/><text x="81.6022%" y="1199.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (58 samples, 0.35%)</title><rect x="81.3522%" y="1173" width="0.3473%" height="15" fill="rgb(223,129,3)" fg:x="13585" fg:w="58"/><text x="81.6022%" y="1183.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (58 samples, 0.35%)</title><rect x="81.3522%" y="1157" width="0.3473%" height="15" fill="rgb(221,124,13)" fg:x="13585" fg:w="58"/><text x="81.6022%" y="1167.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (58 samples, 0.35%)</title><rect x="81.3522%" y="1141" width="0.3473%" height="15" fill="rgb(234,3,18)" fg:x="13585" fg:w="58"/><text x="81.6022%" y="1151.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (2 samples, 0.01%)</title><rect x="81.6875%" y="1125" width="0.0120%" height="15" fill="rgb(249,199,20)" fg:x="13641" fg:w="2"/><text x="81.9375%" y="1135.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (2 samples, 0.01%)</title><rect x="81.6875%" y="1109" width="0.0120%" height="15" fill="rgb(224,134,6)" fg:x="13641" fg:w="2"/><text x="81.9375%" y="1119.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (91 samples, 0.54%)</title><rect x="81.1665%" y="1237" width="0.5449%" height="15" fill="rgb(254,83,26)" fg:x="13554" fg:w="91"/><text x="81.4165%" y="1247.50"></text></g><g><title>veilid_server::client_api::ClientApi::send_responses::{{closure}} (64 samples, 0.38%)</title><rect x="81.3282%" y="1221" width="0.3833%" height="15" fill="rgb(217,88,9)" fg:x="13581" fg:w="64"/><text x="81.5782%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;alloc::string::String&gt;&gt; (2 samples, 0.01%)</title><rect x="81.6995%" y="1205" width="0.0120%" height="15" fill="rgb(225,73,2)" fg:x="13643" fg:w="2"/><text x="81.9495%" y="1215.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (2 samples, 0.01%)</title><rect x="81.7115%" y="1237" width="0.0120%" height="15" fill="rgb(226,44,39)" fg:x="13645" fg:w="2"/><text x="81.9615%" y="1247.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (97 samples, 0.58%)</title><rect x="81.1546%" y="1285" width="0.5809%" height="15" fill="rgb(228,53,17)" fg:x="13552" fg:w="97"/><text x="81.4046%" y="1295.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (97 samples, 0.58%)</title><rect x="81.1546%" y="1269" width="0.5809%" height="15" fill="rgb(212,27,27)" fg:x="13552" fg:w="97"/><text x="81.4046%" y="1279.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (97 samples, 0.58%)</title><rect x="81.1546%" y="1253" width="0.5809%" height="15" fill="rgb(241,50,6)" fg:x="13552" fg:w="97"/><text x="81.4046%" y="1263.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (98 samples, 0.59%)</title><rect x="81.1546%" y="1301" width="0.5869%" height="15" fill="rgb(225,28,51)" fg:x="13552" fg:w="98"/><text x="81.4046%" y="1311.50"></text></g><g><title>veilid_server::client_api::ClientApi::handle_connection::{{closure}} (100 samples, 0.60%)</title><rect x="81.1546%" y="1317" width="0.5988%" height="15" fill="rgb(215,33,16)" fg:x="13552" fg:w="100"/><text x="81.4046%" y="1327.50"></text></g><g><title>veilid_server::client_api::ClientApi::process_request_line (2 samples, 0.01%)</title><rect x="81.7414%" y="1301" width="0.0120%" height="15" fill="rgb(243,40,39)" fg:x="13650" fg:w="2"/><text x="81.9914%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="81.7714%" y="1269" width="0.0120%" height="15" fill="rgb(225,11,42)" fg:x="13655" fg:w="2"/><text x="82.0214%" y="1279.50"></text></g><g><title>flume::Shared&lt;T&gt;::send::{{closure}} (2 samples, 0.01%)</title><rect x="81.7714%" y="1253" width="0.0120%" height="15" fill="rgb(241,220,38)" fg:x="13655" fg:w="2"/><text x="82.0214%" y="1263.50"></text></g><g><title>&lt;flume::async::SendFut&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="81.7594%" y="1301" width="0.0299%" height="15" fill="rgb(244,52,35)" fg:x="13653" fg:w="5"/><text x="82.0094%" y="1311.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (4 samples, 0.02%)</title><rect x="81.7654%" y="1285" width="0.0240%" height="15" fill="rgb(246,42,46)" fg:x="13654" fg:w="4"/><text x="82.0154%" y="1295.50"></text></g><g><title>serde::de::MapAccess::next_value (114 samples, 0.68%)</title><rect x="81.8193%" y="1205" width="0.6827%" height="15" fill="rgb(205,184,13)" fg:x="13663" fg:w="114"/><text x="82.0693%" y="1215.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (114 samples, 0.68%)</title><rect x="81.8193%" y="1189" width="0.6827%" height="15" fill="rgb(209,48,36)" fg:x="13663" fg:w="114"/><text x="82.0693%" y="1199.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (114 samples, 0.68%)</title><rect x="81.8193%" y="1173" width="0.6827%" height="15" fill="rgb(244,34,51)" fg:x="13663" fg:w="114"/><text x="82.0693%" y="1183.50"></text></g><g><title>&lt;serde::__private::de::content::Content as serde::de::Deserialize&gt;::deserialize (114 samples, 0.68%)</title><rect x="81.8193%" y="1157" width="0.6827%" height="15" fill="rgb(221,107,33)" fg:x="13663" fg:w="114"/><text x="82.0693%" y="1167.50"></text></g><g><title>serde::de::Deserializer::__deserialize_content (114 samples, 0.68%)</title><rect x="81.8193%" y="1141" width="0.6827%" height="15" fill="rgb(224,203,12)" fg:x="13663" fg:w="114"/><text x="82.0693%" y="1151.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (114 samples, 0.68%)</title><rect x="81.8193%" y="1125" width="0.6827%" height="15" fill="rgb(230,215,18)" fg:x="13663" fg:w="114"/><text x="82.0693%" y="1135.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (113 samples, 0.68%)</title><rect x="81.8253%" y="1109" width="0.6767%" height="15" fill="rgb(206,185,35)" fg:x="13664" fg:w="113"/><text x="82.0753%" y="1119.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (113 samples, 0.68%)</title><rect x="81.8253%" y="1093" width="0.6767%" height="15" fill="rgb(228,140,34)" fg:x="13664" fg:w="113"/><text x="82.0753%" y="1103.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (8 samples, 0.05%)</title><rect x="82.4540%" y="1077" width="0.0479%" height="15" fill="rgb(208,93,13)" fg:x="13769" fg:w="8"/><text x="82.7040%" y="1087.50"></text></g><g><title>core::ptr::metadata::metadata (2 samples, 0.01%)</title><rect x="82.4900%" y="1061" width="0.0120%" height="15" fill="rgb(221,193,39)" fg:x="13775" fg:w="2"/><text x="82.7400%" y="1071.50"></text></g><g><title>&lt;&amp;mut A as serde::de::MapAccess&gt;::next_key (2 samples, 0.01%)</title><rect x="82.5139%" y="1125" width="0.0120%" height="15" fill="rgb(241,132,34)" fg:x="13779" fg:w="2"/><text x="82.7639%" y="1135.50"></text></g><g><title>serde::de::MapAccess::next_key (2 samples, 0.01%)</title><rect x="82.5139%" y="1109" width="0.0120%" height="15" fill="rgb(221,141,10)" fg:x="13779" fg:w="2"/><text x="82.7639%" y="1119.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.01%)</title><rect x="82.5139%" y="1093" width="0.0120%" height="15" fill="rgb(226,90,31)" fg:x="13779" fg:w="2"/><text x="82.7639%" y="1103.50"></text></g><g><title>veilid_core::veilid_api::serialize_helpers::serialize_json::deserialize_json (127 samples, 0.76%)</title><rect x="81.8013%" y="1301" width="0.7605%" height="15" fill="rgb(243,75,5)" fg:x="13660" fg:w="127"/><text x="82.0513%" y="1311.50"></text></g><g><title>serde_json::de::from_str (126 samples, 0.75%)</title><rect x="81.8073%" y="1285" width="0.7545%" height="15" fill="rgb(227,156,21)" fg:x="13661" fg:w="126"/><text x="82.0573%" y="1295.50"></text></g><g><title>serde_json::de::from_trait (126 samples, 0.75%)</title><rect x="81.8073%" y="1269" width="0.7545%" height="15" fill="rgb(250,195,8)" fg:x="13661" fg:w="126"/><text x="82.0573%" y="1279.50"></text></g><g><title>veilid_core::veilid_api::json_api::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::Request&gt;::deserialize (126 samples, 0.75%)</title><rect x="81.8073%" y="1253" width="0.7545%" height="15" fill="rgb(220,134,5)" fg:x="13661" fg:w="126"/><text x="82.0573%" y="1263.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (126 samples, 0.75%)</title><rect x="81.8073%" y="1237" width="0.7545%" height="15" fill="rgb(246,106,34)" fg:x="13661" fg:w="126"/><text x="82.0573%" y="1247.50"></text></g><g><title>&lt;veilid_core::veilid_api::json_api::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::Request&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (126 samples, 0.75%)</title><rect x="81.8073%" y="1221" width="0.7545%" height="15" fill="rgb(205,1,4)" fg:x="13661" fg:w="126"/><text x="82.0573%" y="1231.50"></text></g><g><title>veilid_core::veilid_api::json_api::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::RequestOp&gt;::deserialize (10 samples, 0.06%)</title><rect x="82.5019%" y="1205" width="0.0599%" height="15" fill="rgb(224,151,29)" fg:x="13777" fg:w="10"/><text x="82.7519%" y="1215.50"></text></g><g><title>veilid_core::veilid_api::json_api::routing_context::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::routing_context::RoutingContextRequest&gt;::deserialize (9 samples, 0.05%)</title><rect x="82.5079%" y="1189" width="0.0539%" height="15" fill="rgb(251,196,0)" fg:x="13778" fg:w="9"/><text x="82.7579%" y="1199.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_map (9 samples, 0.05%)</title><rect x="82.5079%" y="1173" width="0.0539%" height="15" fill="rgb(212,127,0)" fg:x="13778" fg:w="9"/><text x="82.7579%" y="1183.50"></text></g><g><title>serde::__private::de::content::visit_content_map (8 samples, 0.05%)</title><rect x="82.5139%" y="1157" width="0.0479%" height="15" fill="rgb(236,71,53)" fg:x="13779" fg:w="8"/><text x="82.7639%" y="1167.50"></text></g><g><title>&lt;veilid_core::veilid_api::json_api::routing_context::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::routing_context::RoutingContextRequest&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.05%)</title><rect x="82.5139%" y="1141" width="0.0479%" height="15" fill="rgb(227,99,0)" fg:x="13779" fg:w="8"/><text x="82.7639%" y="1151.50"></text></g><g><title>veilid_core::veilid_api::json_api::routing_context::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::routing_context::RoutingContextRequestOp&gt;::deserialize (5 samples, 0.03%)</title><rect x="82.5319%" y="1125" width="0.0299%" height="15" fill="rgb(239,89,21)" fg:x="13782" fg:w="5"/><text x="82.7819%" y="1135.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.02%)</title><rect x="82.5379%" y="1109" width="0.0240%" height="15" fill="rgb(243,122,19)" fg:x="13783" fg:w="4"/><text x="82.7879%" y="1119.50"></text></g><g><title>serde::__private::de::content::visit_content_map (4 samples, 0.02%)</title><rect x="82.5379%" y="1093" width="0.0240%" height="15" fill="rgb(229,192,45)" fg:x="13783" fg:w="4"/><text x="82.7879%" y="1103.50"></text></g><g><title>&lt;veilid_core::veilid_api::json_api::routing_context::_::&lt;impl serde::de::Deserialize for veilid_core::veilid_api::json_api::routing_context::RoutingContextRequestOp&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.02%)</title><rect x="82.5379%" y="1077" width="0.0240%" height="15" fill="rgb(235,165,35)" fg:x="13783" fg:w="4"/><text x="82.7879%" y="1087.50"></text></g><g><title>&lt;&amp;mut A as serde::de::MapAccess&gt;::next_value (3 samples, 0.02%)</title><rect x="82.5439%" y="1061" width="0.0180%" height="15" fill="rgb(253,202,0)" fg:x="13784" fg:w="3"/><text x="82.7939%" y="1071.50"></text></g><g><title>serde::de::MapAccess::next_value (3 samples, 0.02%)</title><rect x="82.5439%" y="1045" width="0.0180%" height="15" fill="rgb(235,51,20)" fg:x="13784" fg:w="3"/><text x="82.7939%" y="1055.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.02%)</title><rect x="82.5439%" y="1029" width="0.0180%" height="15" fill="rgb(218,95,46)" fg:x="13784" fg:w="3"/><text x="82.7939%" y="1039.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.02%)</title><rect x="82.5439%" y="1013" width="0.0180%" height="15" fill="rgb(212,81,10)" fg:x="13784" fg:w="3"/><text x="82.7939%" y="1023.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2 samples, 0.01%)</title><rect x="82.5499%" y="997" width="0.0120%" height="15" fill="rgb(240,59,0)" fg:x="13785" fg:w="2"/><text x="82.7999%" y="1007.50"></text></g><g><title>&lt;serde::__private::de::content::ContentDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.01%)</title><rect x="82.5499%" y="981" width="0.0120%" height="15" fill="rgb(212,191,42)" fg:x="13785" fg:w="2"/><text x="82.7999%" y="991.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (2 samples, 0.01%)</title><rect x="82.5499%" y="965" width="0.0120%" height="15" fill="rgb(233,140,3)" fg:x="13785" fg:w="2"/><text x="82.7999%" y="975.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.01%)</title><rect x="82.5499%" y="949" width="0.0120%" height="15" fill="rgb(215,69,23)" fg:x="13785" fg:w="2"/><text x="82.7999%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.01%)</title><rect x="82.5499%" y="933" width="0.0120%" height="15" fill="rgb(240,202,20)" fg:x="13785" fg:w="2"/><text x="82.7999%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.01%)</title><rect x="82.5499%" y="917" width="0.0120%" height="15" fill="rgb(209,146,50)" fg:x="13785" fg:w="2"/><text x="82.7999%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="82.5499%" y="901" width="0.0120%" height="15" fill="rgb(253,102,54)" fg:x="13785" fg:w="2"/><text x="82.7999%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="82.5499%" y="885" width="0.0120%" height="15" fill="rgb(250,173,47)" fg:x="13785" fg:w="2"/><text x="82.7999%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="82.5499%" y="869" width="0.0120%" height="15" fill="rgb(232,142,7)" fg:x="13785" fg:w="2"/><text x="82.7999%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="82.5499%" y="853" width="0.0120%" height="15" fill="rgb(230,157,47)" fg:x="13785" fg:w="2"/><text x="82.7999%" y="863.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map (2 samples, 0.01%)</title><rect x="82.5738%" y="1173" width="0.0120%" height="15" fill="rgb(214,177,35)" fg:x="13789" fg:w="2"/><text x="82.8238%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="82.5738%" y="1157" width="0.0120%" height="15" fill="rgb(234,119,46)" fg:x="13789" fg:w="2"/><text x="82.8238%" y="1167.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="82.5738%" y="1141" width="0.0120%" height="15" fill="rgb(241,180,50)" fg:x="13789" fg:w="2"/><text x="82.8238%" y="1151.50"></text></g><g><title>&lt;serde::__private::ser::TaggedSerializer&lt;S&gt; as serde::ser::Serializer&gt;::serialize_map (3 samples, 0.02%)</title><rect x="82.5738%" y="1189" width="0.0180%" height="15" fill="rgb(221,54,25)" fg:x="13789" fg:w="3"/><text x="82.8238%" y="1199.50"></text></g><g><title>veilid_server::client_api::ClientApi::process_request_line::{{closure}} (143 samples, 0.86%)</title><rect x="81.7534%" y="1317" width="0.8563%" height="15" fill="rgb(209,157,44)" fg:x="13652" fg:w="143"/><text x="82.0034%" y="1327.50"></text></g><g><title>veilid_core::veilid_api::serialize_helpers::serialize_json::serialize_json (8 samples, 0.05%)</title><rect x="82.5618%" y="1301" width="0.0479%" height="15" fill="rgb(246,115,41)" fg:x="13787" fg:w="8"/><text x="82.8118%" y="1311.50"></text></g><g><title>serde_json::ser::to_string (8 samples, 0.05%)</title><rect x="82.5618%" y="1285" width="0.0479%" height="15" fill="rgb(229,86,1)" fg:x="13787" fg:w="8"/><text x="82.8118%" y="1295.50"></text></g><g><title>serde_json::ser::to_vec (7 samples, 0.04%)</title><rect x="82.5678%" y="1269" width="0.0419%" height="15" fill="rgb(240,108,53)" fg:x="13788" fg:w="7"/><text x="82.8178%" y="1279.50"></text></g><g><title>serde_json::ser::to_writer (7 samples, 0.04%)</title><rect x="82.5678%" y="1253" width="0.0419%" height="15" fill="rgb(227,134,2)" fg:x="13788" fg:w="7"/><text x="82.8178%" y="1263.50"></text></g><g><title>veilid_core::veilid_api::json_api::_::&lt;impl serde::ser::Serialize for veilid_core::veilid_api::json_api::RecvMessage&gt;::serialize (7 samples, 0.04%)</title><rect x="82.5678%" y="1237" width="0.0419%" height="15" fill="rgb(213,129,25)" fg:x="13788" fg:w="7"/><text x="82.8178%" y="1247.50"></text></g><g><title>serde::__private::ser::serialize_tagged_newtype (7 samples, 0.04%)</title><rect x="82.5678%" y="1221" width="0.0419%" height="15" fill="rgb(226,35,21)" fg:x="13788" fg:w="7"/><text x="82.8178%" y="1231.50"></text></g><g><title>veilid_core::veilid_api::json_api::_::&lt;impl serde::ser::Serialize for veilid_core::veilid_api::json_api::Response&gt;::serialize (7 samples, 0.04%)</title><rect x="82.5678%" y="1205" width="0.0419%" height="15" fill="rgb(208,129,26)" fg:x="13788" fg:w="7"/><text x="82.8178%" y="1215.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.02%)</title><rect x="82.5918%" y="1189" width="0.0180%" height="15" fill="rgb(224,83,6)" fg:x="13792" fg:w="3"/><text x="82.8418%" y="1199.50"></text></g><g><title>veilid_core::veilid_api::json_api::_::&lt;impl serde::ser::Serialize for veilid_core::veilid_api::json_api::ResponseOp&gt;::serialize (3 samples, 0.02%)</title><rect x="82.5918%" y="1173" width="0.0180%" height="15" fill="rgb(227,52,39)" fg:x="13792" fg:w="3"/><text x="82.8418%" y="1183.50"></text></g><g><title>serde::__private::ser::serialize_tagged_newtype (2 samples, 0.01%)</title><rect x="82.5978%" y="1157" width="0.0120%" height="15" fill="rgb(241,30,17)" fg:x="13793" fg:w="2"/><text x="82.8478%" y="1167.50"></text></g><g><title>veilid_core::veilid_api::json_api::routing_context::_::&lt;impl serde::ser::Serialize for veilid_core::veilid_api::json_api::routing_context::RoutingContextResponse&gt;::serialize (2 samples, 0.01%)</title><rect x="82.5978%" y="1141" width="0.0120%" height="15" fill="rgb(246,186,42)" fg:x="13793" fg:w="2"/><text x="82.8478%" y="1151.50"></text></g><g><title>[unknown] (12,344 samples, 73.92%)</title><rect x="8.7011%" y="1333" width="73.9206%" height="15" fill="rgb(221,169,15)" fg:x="1453" fg:w="12344"/><text x="8.9511%" y="1343.50">[unknown]</text></g><g><title>&lt;capnp::serialize_packed::PackedWrite&lt;W&gt; as capnp::io::Write&gt;::write_all (14 samples, 0.08%)</title><rect x="82.6337%" y="1317" width="0.0838%" height="15" fill="rgb(235,108,21)" fg:x="13799" fg:w="14"/><text x="82.8837%" y="1327.50"></text></g><g><title>&lt;u64 as subtle::ConditionallySelectable&gt;::conditional_assign (3 samples, 0.02%)</title><rect x="82.7355%" y="1317" width="0.0180%" height="15" fill="rgb(219,148,30)" fg:x="13816" fg:w="3"/><text x="82.9855%" y="1327.50"></text></g><g><title>core::fmt::Formatter::pad_integral (10 samples, 0.06%)</title><rect x="82.7774%" y="1317" width="0.0599%" height="15" fill="rgb(220,109,5)" fg:x="13823" fg:w="10"/><text x="83.0274%" y="1327.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (3 samples, 0.02%)</title><rect x="82.8373%" y="1317" width="0.0180%" height="15" fill="rgb(213,203,48)" fg:x="13833" fg:w="3"/><text x="83.0873%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (2 samples, 0.01%)</title><rect x="82.8612%" y="1317" width="0.0120%" height="15" fill="rgb(244,71,33)" fg:x="13837" fg:w="2"/><text x="83.1112%" y="1327.50"></text></g><g><title>[veilid-server] (54 samples, 0.32%)</title><rect x="82.6217%" y="1333" width="0.3234%" height="15" fill="rgb(209,23,2)" fg:x="13797" fg:w="54"/><text x="82.8717%" y="1343.50"></text></g><g><title>veilid_tools::assembly_buffer::PeerMessages::merge_in_data (2 samples, 0.01%)</title><rect x="82.9331%" y="1317" width="0.0120%" height="15" fill="rgb(219,97,7)" fg:x="13849" fg:w="2"/><text x="83.1831%" y="1327.50"></text></g><g><title>ret_from_fork (10 samples, 0.06%)</title><rect x="82.9451%" y="1317" width="0.0599%" height="15" fill="rgb(216,161,23)" fg:x="13851" fg:w="10"/><text x="83.1951%" y="1327.50"></text></g><g><title>schedule_tail (10 samples, 0.06%)</title><rect x="82.9451%" y="1301" width="0.0599%" height="15" fill="rgb(207,45,42)" fg:x="13851" fg:w="10"/><text x="83.1951%" y="1311.50"></text></g><g><title>finish_task_switch.isra.0 (10 samples, 0.06%)</title><rect x="82.9451%" y="1285" width="0.0599%" height="15" fill="rgb(241,61,4)" fg:x="13851" fg:w="10"/><text x="83.1951%" y="1295.50"></text></g><g><title>__perf_event_task_sched_in (10 samples, 0.06%)</title><rect x="82.9451%" y="1269" width="0.0599%" height="15" fill="rgb(236,170,1)" fg:x="13851" fg:w="10"/><text x="83.1951%" y="1279.50"></text></g><g><title>perf_ctx_enable (10 samples, 0.06%)</title><rect x="82.9451%" y="1253" width="0.0599%" height="15" fill="rgb(239,72,5)" fg:x="13851" fg:w="10"/><text x="83.1951%" y="1263.50"></text></g><g><title>x86_pmu_enable (10 samples, 0.06%)</title><rect x="82.9451%" y="1237" width="0.0599%" height="15" fill="rgb(214,13,50)" fg:x="13851" fg:w="10"/><text x="83.1951%" y="1247.50"></text></g><g><title>intel_pmu_enable_all (10 samples, 0.06%)</title><rect x="82.9451%" y="1221" width="0.0599%" height="15" fill="rgb(224,88,9)" fg:x="13851" fg:w="10"/><text x="83.1951%" y="1231.50"></text></g><g><title>native_write_msr (10 samples, 0.06%)</title><rect x="82.9451%" y="1205" width="0.0599%" height="15" fill="rgb(238,192,34)" fg:x="13851" fg:w="10"/><text x="83.1951%" y="1215.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="83.0050%" y="1301" width="0.0120%" height="15" fill="rgb(217,203,50)" fg:x="13861" fg:w="2"/><text x="83.2550%" y="1311.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait_timeout (6 samples, 0.04%)</title><rect x="83.0229%" y="1077" width="0.0359%" height="15" fill="rgb(241,123,32)" fg:x="13864" fg:w="6"/><text x="83.2729%" y="1087.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_for (6 samples, 0.04%)</title><rect x="83.0229%" y="1061" width="0.0359%" height="15" fill="rgb(248,151,39)" fg:x="13864" fg:w="6"/><text x="83.2729%" y="1071.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (6 samples, 0.04%)</title><rect x="83.0229%" y="1045" width="0.0359%" height="15" fill="rgb(208,89,6)" fg:x="13864" fg:w="6"/><text x="83.2729%" y="1055.50"></text></g><g><title>parking_lot_core::parking_lot::park (6 samples, 0.04%)</title><rect x="83.0229%" y="1029" width="0.0359%" height="15" fill="rgb(254,43,26)" fg:x="13864" fg:w="6"/><text x="83.2729%" y="1039.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (6 samples, 0.04%)</title><rect x="83.0229%" y="1013" width="0.0359%" height="15" fill="rgb(216,158,13)" fg:x="13864" fg:w="6"/><text x="83.2729%" y="1023.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (6 samples, 0.04%)</title><rect x="83.0229%" y="997" width="0.0359%" height="15" fill="rgb(212,47,37)" fg:x="13864" fg:w="6"/><text x="83.2729%" y="1007.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (6 samples, 0.04%)</title><rect x="83.0229%" y="981" width="0.0359%" height="15" fill="rgb(254,16,10)" fg:x="13864" fg:w="6"/><text x="83.2729%" y="991.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (6 samples, 0.04%)</title><rect x="83.0229%" y="965" width="0.0359%" height="15" fill="rgb(223,228,16)" fg:x="13864" fg:w="6"/><text x="83.2729%" y="975.50"></text></g><g><title>syscall (6 samples, 0.04%)</title><rect x="83.0229%" y="949" width="0.0359%" height="15" fill="rgb(249,108,50)" fg:x="13864" fg:w="6"/><text x="83.2729%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="83.0229%" y="933" width="0.0359%" height="15" fill="rgb(208,220,5)" fg:x="13864" fg:w="6"/><text x="83.2729%" y="943.50"></text></g><g><title>do_syscall_64 (6 samples, 0.04%)</title><rect x="83.0229%" y="917" width="0.0359%" height="15" fill="rgb(217,89,48)" fg:x="13864" fg:w="6"/><text x="83.2729%" y="927.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.04%)</title><rect x="83.0229%" y="901" width="0.0359%" height="15" fill="rgb(212,113,41)" fg:x="13864" fg:w="6"/><text x="83.2729%" y="911.50"></text></g><g><title>do_futex (6 samples, 0.04%)</title><rect x="83.0229%" y="885" width="0.0359%" height="15" fill="rgb(231,127,5)" fg:x="13864" fg:w="6"/><text x="83.2729%" y="895.50"></text></g><g><title>futex_wait (6 samples, 0.04%)</title><rect x="83.0229%" y="869" width="0.0359%" height="15" fill="rgb(217,141,17)" fg:x="13864" fg:w="6"/><text x="83.2729%" y="879.50"></text></g><g><title>futex_wait_queue (5 samples, 0.03%)</title><rect x="83.0289%" y="853" width="0.0299%" height="15" fill="rgb(245,125,54)" fg:x="13865" fg:w="5"/><text x="83.2789%" y="863.50"></text></g><g><title>schedule (5 samples, 0.03%)</title><rect x="83.0289%" y="837" width="0.0299%" height="15" fill="rgb(248,125,3)" fg:x="13865" fg:w="5"/><text x="83.2789%" y="847.50"></text></g><g><title>__schedule (5 samples, 0.03%)</title><rect x="83.0289%" y="821" width="0.0299%" height="15" fill="rgb(236,119,51)" fg:x="13865" fg:w="5"/><text x="83.2789%" y="831.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.03%)</title><rect x="83.0289%" y="805" width="0.0299%" height="15" fill="rgb(239,99,8)" fg:x="13865" fg:w="5"/><text x="83.2789%" y="815.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.03%)</title><rect x="83.0289%" y="789" width="0.0299%" height="15" fill="rgb(224,228,4)" fg:x="13865" fg:w="5"/><text x="83.2789%" y="799.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.03%)</title><rect x="83.0289%" y="773" width="0.0299%" height="15" fill="rgb(220,131,45)" fg:x="13865" fg:w="5"/><text x="83.2789%" y="783.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.03%)</title><rect x="83.0289%" y="757" width="0.0299%" height="15" fill="rgb(215,62,5)" fg:x="13865" fg:w="5"/><text x="83.2789%" y="767.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.03%)</title><rect x="83.0289%" y="741" width="0.0299%" height="15" fill="rgb(253,12,24)" fg:x="13865" fg:w="5"/><text x="83.2789%" y="751.50"></text></g><g><title>native_write_msr (5 samples, 0.03%)</title><rect x="83.0289%" y="725" width="0.0299%" height="15" fill="rgb(248,120,50)" fg:x="13865" fg:w="5"/><text x="83.2789%" y="735.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (27 samples, 0.16%)</title><rect x="83.0589%" y="981" width="0.1617%" height="15" fill="rgb(245,194,10)" fg:x="13870" fg:w="27"/><text x="83.3089%" y="991.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (27 samples, 0.16%)</title><rect x="83.0589%" y="965" width="0.1617%" height="15" fill="rgb(241,149,38)" fg:x="13870" fg:w="27"/><text x="83.3089%" y="975.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (27 samples, 0.16%)</title><rect x="83.0589%" y="949" width="0.1617%" height="15" fill="rgb(219,215,7)" fg:x="13870" fg:w="27"/><text x="83.3089%" y="959.50"></text></g><g><title>syscall (26 samples, 0.16%)</title><rect x="83.0649%" y="933" width="0.1557%" height="15" fill="rgb(208,120,31)" fg:x="13871" fg:w="26"/><text x="83.3149%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.15%)</title><rect x="83.0708%" y="917" width="0.1497%" height="15" fill="rgb(244,30,8)" fg:x="13872" fg:w="25"/><text x="83.3208%" y="927.50"></text></g><g><title>do_syscall_64 (25 samples, 0.15%)</title><rect x="83.0708%" y="901" width="0.1497%" height="15" fill="rgb(238,35,44)" fg:x="13872" fg:w="25"/><text x="83.3208%" y="911.50"></text></g><g><title>__x64_sys_futex (25 samples, 0.15%)</title><rect x="83.0708%" y="885" width="0.1497%" height="15" fill="rgb(243,218,37)" fg:x="13872" fg:w="25"/><text x="83.3208%" y="895.50"></text></g><g><title>do_futex (25 samples, 0.15%)</title><rect x="83.0708%" y="869" width="0.1497%" height="15" fill="rgb(218,169,10)" fg:x="13872" fg:w="25"/><text x="83.3208%" y="879.50"></text></g><g><title>futex_wait (25 samples, 0.15%)</title><rect x="83.0708%" y="853" width="0.1497%" height="15" fill="rgb(221,144,10)" fg:x="13872" fg:w="25"/><text x="83.3208%" y="863.50"></text></g><g><title>futex_wait_queue (25 samples, 0.15%)</title><rect x="83.0708%" y="837" width="0.1497%" height="15" fill="rgb(226,41,38)" fg:x="13872" fg:w="25"/><text x="83.3208%" y="847.50"></text></g><g><title>schedule (25 samples, 0.15%)</title><rect x="83.0708%" y="821" width="0.1497%" height="15" fill="rgb(228,3,1)" fg:x="13872" fg:w="25"/><text x="83.3208%" y="831.50"></text></g><g><title>__schedule (25 samples, 0.15%)</title><rect x="83.0708%" y="805" width="0.1497%" height="15" fill="rgb(209,129,12)" fg:x="13872" fg:w="25"/><text x="83.3208%" y="815.50"></text></g><g><title>finish_task_switch.isra.0 (25 samples, 0.15%)</title><rect x="83.0708%" y="789" width="0.1497%" height="15" fill="rgb(213,136,33)" fg:x="13872" fg:w="25"/><text x="83.3208%" y="799.50"></text></g><g><title>__perf_event_task_sched_in (25 samples, 0.15%)</title><rect x="83.0708%" y="773" width="0.1497%" height="15" fill="rgb(209,181,29)" fg:x="13872" fg:w="25"/><text x="83.3208%" y="783.50"></text></g><g><title>perf_ctx_enable (25 samples, 0.15%)</title><rect x="83.0708%" y="757" width="0.1497%" height="15" fill="rgb(234,173,18)" fg:x="13872" fg:w="25"/><text x="83.3208%" y="767.50"></text></g><g><title>x86_pmu_enable (25 samples, 0.15%)</title><rect x="83.0708%" y="741" width="0.1497%" height="15" fill="rgb(227,73,47)" fg:x="13872" fg:w="25"/><text x="83.3208%" y="751.50"></text></g><g><title>intel_pmu_enable_all (25 samples, 0.15%)</title><rect x="83.0708%" y="725" width="0.1497%" height="15" fill="rgb(234,9,34)" fg:x="13872" fg:w="25"/><text x="83.3208%" y="735.50"></text></g><g><title>native_write_msr (25 samples, 0.15%)</title><rect x="83.0708%" y="709" width="0.1497%" height="15" fill="rgb(235,172,15)" fg:x="13872" fg:w="25"/><text x="83.3208%" y="719.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (28 samples, 0.17%)</title><rect x="83.0589%" y="1077" width="0.1677%" height="15" fill="rgb(245,61,2)" fg:x="13870" fg:w="28"/><text x="83.3089%" y="1087.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (28 samples, 0.17%)</title><rect x="83.0589%" y="1061" width="0.1677%" height="15" fill="rgb(238,39,47)" fg:x="13870" fg:w="28"/><text x="83.3089%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (28 samples, 0.17%)</title><rect x="83.0589%" y="1045" width="0.1677%" height="15" fill="rgb(234,37,24)" fg:x="13870" fg:w="28"/><text x="83.3089%" y="1055.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (28 samples, 0.17%)</title><rect x="83.0589%" y="1029" width="0.1677%" height="15" fill="rgb(248,223,24)" fg:x="13870" fg:w="28"/><text x="83.3089%" y="1039.50"></text></g><g><title>parking_lot_core::parking_lot::park (28 samples, 0.17%)</title><rect x="83.0589%" y="1013" width="0.1677%" height="15" fill="rgb(223,12,15)" fg:x="13870" fg:w="28"/><text x="83.3089%" y="1023.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (28 samples, 0.17%)</title><rect x="83.0589%" y="997" width="0.1677%" height="15" fill="rgb(249,6,3)" fg:x="13870" fg:w="28"/><text x="83.3089%" y="1007.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::about_to_park (2 samples, 0.01%)</title><rect x="83.2445%" y="693" width="0.0120%" height="15" fill="rgb(237,105,33)" fg:x="13901" fg:w="2"/><text x="83.4945%" y="703.50"></text></g><g><title>std::time::Instant::elapsed (2 samples, 0.01%)</title><rect x="83.2445%" y="677" width="0.0120%" height="15" fill="rgb(252,208,35)" fg:x="13901" fg:w="2"/><text x="83.4945%" y="687.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.01%)</title><rect x="83.2445%" y="661" width="0.0120%" height="15" fill="rgb(215,181,35)" fg:x="13901" fg:w="2"/><text x="83.4945%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.01%)</title><rect x="83.2445%" y="645" width="0.0120%" height="15" fill="rgb(246,212,3)" fg:x="13901" fg:w="2"/><text x="83.4945%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.01%)</title><rect x="83.2445%" y="629" width="0.0120%" height="15" fill="rgb(247,156,24)" fg:x="13901" fg:w="2"/><text x="83.4945%" y="639.50"></text></g><g><title>__GI___clock_gettime (2 samples, 0.01%)</title><rect x="83.2445%" y="613" width="0.0120%" height="15" fill="rgb(248,9,31)" fg:x="13901" fg:w="2"/><text x="83.4945%" y="623.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::returned_from_park (2 samples, 0.01%)</title><rect x="83.2565%" y="693" width="0.0120%" height="15" fill="rgb(234,26,45)" fg:x="13903" fg:w="2"/><text x="83.5065%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.01%)</title><rect x="83.2565%" y="677" width="0.0120%" height="15" fill="rgb(249,11,32)" fg:x="13903" fg:w="2"/><text x="83.5065%" y="687.50"></text></g><g><title>__GI___clock_gettime (2 samples, 0.01%)</title><rect x="83.2565%" y="661" width="0.0120%" height="15" fill="rgb(249,162,33)" fg:x="13903" fg:w="2"/><text x="83.5065%" y="671.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="83.2565%" y="645" width="0.0120%" height="15" fill="rgb(232,4,32)" fg:x="13903" fg:w="2"/><text x="83.5065%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.01%)</title><rect x="83.3583%" y="581" width="0.0120%" height="15" fill="rgb(212,5,45)" fg:x="13920" fg:w="2"/><text x="83.6083%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.01%)</title><rect x="83.3583%" y="565" width="0.0120%" height="15" fill="rgb(227,95,13)" fg:x="13920" fg:w="2"/><text x="83.6083%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.01%)</title><rect x="83.3583%" y="549" width="0.0120%" height="15" fill="rgb(223,205,10)" fg:x="13920" fg:w="2"/><text x="83.6083%" y="559.50"></text></g><g><title>asm_sysvec_irq_work (3 samples, 0.02%)</title><rect x="83.4601%" y="357" width="0.0180%" height="15" fill="rgb(222,178,8)" fg:x="13937" fg:w="3"/><text x="83.7101%" y="367.50"></text></g><g><title>update_curr (3 samples, 0.02%)</title><rect x="83.4900%" y="309" width="0.0180%" height="15" fill="rgb(216,13,22)" fg:x="13942" fg:w="3"/><text x="83.7400%" y="319.50"></text></g><g><title>cpuacct_charge (2 samples, 0.01%)</title><rect x="83.4960%" y="293" width="0.0120%" height="15" fill="rgb(240,167,12)" fg:x="13943" fg:w="2"/><text x="83.7460%" y="303.50"></text></g><g><title>dequeue_entity (7 samples, 0.04%)</title><rect x="83.4781%" y="325" width="0.0419%" height="15" fill="rgb(235,68,35)" fg:x="13940" fg:w="7"/><text x="83.7281%" y="335.50"></text></g><g><title>update_load_avg (2 samples, 0.01%)</title><rect x="83.5080%" y="309" width="0.0120%" height="15" fill="rgb(253,40,27)" fg:x="13945" fg:w="2"/><text x="83.7580%" y="319.50"></text></g><g><title>dequeue_task (9 samples, 0.05%)</title><rect x="83.4781%" y="357" width="0.0539%" height="15" fill="rgb(214,19,28)" fg:x="13940" fg:w="9"/><text x="83.7281%" y="367.50"></text></g><g><title>dequeue_task_fair (9 samples, 0.05%)</title><rect x="83.4781%" y="341" width="0.0539%" height="15" fill="rgb(210,167,45)" fg:x="13940" fg:w="9"/><text x="83.7281%" y="351.50"></text></g><g><title>__perf_event_task_sched_in (243 samples, 1.46%)</title><rect x="83.5379%" y="341" width="1.4552%" height="15" fill="rgb(232,97,40)" fg:x="13950" fg:w="243"/><text x="83.7879%" y="351.50"></text></g><g><title>perf_ctx_enable (243 samples, 1.46%)</title><rect x="83.5379%" y="325" width="1.4552%" height="15" fill="rgb(250,35,23)" fg:x="13950" fg:w="243"/><text x="83.7879%" y="335.50"></text></g><g><title>x86_pmu_enable (243 samples, 1.46%)</title><rect x="83.5379%" y="309" width="1.4552%" height="15" fill="rgb(248,47,53)" fg:x="13950" fg:w="243"/><text x="83.7879%" y="319.50"></text></g><g><title>intel_pmu_enable_all (243 samples, 1.46%)</title><rect x="83.5379%" y="293" width="1.4552%" height="15" fill="rgb(226,58,50)" fg:x="13950" fg:w="243"/><text x="83.7879%" y="303.50"></text></g><g><title>native_write_msr (243 samples, 1.46%)</title><rect x="83.5379%" y="277" width="1.4552%" height="15" fill="rgb(217,105,26)" fg:x="13950" fg:w="243"/><text x="83.7879%" y="287.50"></text></g><g><title>finish_task_switch.isra.0 (251 samples, 1.50%)</title><rect x="83.5319%" y="357" width="1.5031%" height="15" fill="rgb(208,64,1)" fg:x="13949" fg:w="251"/><text x="83.7819%" y="367.50"></text></g><g><title>asm_sysvec_irq_work (5 samples, 0.03%)</title><rect x="85.0051%" y="341" width="0.0299%" height="15" fill="rgb(214,80,1)" fg:x="14195" fg:w="5"/><text x="85.2551%" y="351.50"></text></g><g><title>sysvec_irq_work (5 samples, 0.03%)</title><rect x="85.0051%" y="325" width="0.0299%" height="15" fill="rgb(206,175,26)" fg:x="14195" fg:w="5"/><text x="85.2551%" y="335.50"></text></g><g><title>__sysvec_irq_work (5 samples, 0.03%)</title><rect x="85.0051%" y="309" width="0.0299%" height="15" fill="rgb(235,156,37)" fg:x="14195" fg:w="5"/><text x="85.2551%" y="319.50"></text></g><g><title>irq_work_run (5 samples, 0.03%)</title><rect x="85.0051%" y="293" width="0.0299%" height="15" fill="rgb(213,100,9)" fg:x="14195" fg:w="5"/><text x="85.2551%" y="303.50"></text></g><g><title>irq_work_run_list (5 samples, 0.03%)</title><rect x="85.0051%" y="277" width="0.0299%" height="15" fill="rgb(241,15,13)" fg:x="14195" fg:w="5"/><text x="85.2551%" y="287.50"></text></g><g><title>irq_work_single (4 samples, 0.02%)</title><rect x="85.0111%" y="261" width="0.0240%" height="15" fill="rgb(205,97,43)" fg:x="14196" fg:w="4"/><text x="85.2611%" y="271.50"></text></g><g><title>perf_pending_irq (3 samples, 0.02%)</title><rect x="85.0171%" y="245" width="0.0180%" height="15" fill="rgb(216,106,32)" fg:x="14197" fg:w="3"/><text x="85.2671%" y="255.50"></text></g><g><title>perf_event_wakeup (3 samples, 0.02%)</title><rect x="85.0171%" y="229" width="0.0180%" height="15" fill="rgb(226,200,8)" fg:x="14197" fg:w="3"/><text x="85.2671%" y="239.50"></text></g><g><title>__wake_up (3 samples, 0.02%)</title><rect x="85.0171%" y="213" width="0.0180%" height="15" fill="rgb(244,54,29)" fg:x="14197" fg:w="3"/><text x="85.2671%" y="223.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.02%)</title><rect x="85.0171%" y="197" width="0.0180%" height="15" fill="rgb(252,169,12)" fg:x="14197" fg:w="3"/><text x="85.2671%" y="207.50"></text></g><g><title>__wake_up_common (3 samples, 0.02%)</title><rect x="85.0171%" y="181" width="0.0180%" height="15" fill="rgb(231,199,11)" fg:x="14197" fg:w="3"/><text x="85.2671%" y="191.50"></text></g><g><title>pollwake (3 samples, 0.02%)</title><rect x="85.0171%" y="165" width="0.0180%" height="15" fill="rgb(233,191,18)" fg:x="14197" fg:w="3"/><text x="85.2671%" y="175.50"></text></g><g><title>default_wake_function (2 samples, 0.01%)</title><rect x="85.0231%" y="149" width="0.0120%" height="15" fill="rgb(215,83,47)" fg:x="14198" fg:w="2"/><text x="85.2731%" y="159.50"></text></g><g><title>try_to_wake_up (2 samples, 0.01%)</title><rect x="85.0231%" y="133" width="0.0120%" height="15" fill="rgb(251,67,19)" fg:x="14198" fg:w="2"/><text x="85.2731%" y="143.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.01%)</title><rect x="85.0350%" y="341" width="0.0120%" height="15" fill="rgb(240,7,20)" fg:x="14200" fg:w="2"/><text x="85.2850%" y="351.50"></text></g><g><title>pick_next_task (3 samples, 0.02%)</title><rect x="85.0350%" y="357" width="0.0180%" height="15" fill="rgb(210,150,26)" fg:x="14200" fg:w="3"/><text x="85.2850%" y="367.50"></text></g><g><title>prepare_task_switch (2 samples, 0.01%)</title><rect x="85.0530%" y="357" width="0.0120%" height="15" fill="rgb(228,75,42)" fg:x="14203" fg:w="2"/><text x="85.3030%" y="367.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.01%)</title><rect x="85.0530%" y="341" width="0.0120%" height="15" fill="rgb(237,134,48)" fg:x="14203" fg:w="2"/><text x="85.3030%" y="351.50"></text></g><g><title>psi_task_switch (3 samples, 0.02%)</title><rect x="85.0650%" y="357" width="0.0180%" height="15" fill="rgb(205,80,50)" fg:x="14205" fg:w="3"/><text x="85.3150%" y="367.50"></text></g><g><title>psi_group_change (3 samples, 0.02%)</title><rect x="85.0650%" y="341" width="0.0180%" height="15" fill="rgb(217,74,48)" fg:x="14205" fg:w="3"/><text x="85.3150%" y="351.50"></text></g><g><title>futex_wait_queue (276 samples, 1.65%)</title><rect x="83.4361%" y="405" width="1.6528%" height="15" fill="rgb(205,82,50)" fg:x="13933" fg:w="276"/><text x="83.6861%" y="415.50"></text></g><g><title>schedule (274 samples, 1.64%)</title><rect x="83.4481%" y="389" width="1.6408%" height="15" fill="rgb(228,1,33)" fg:x="13935" fg:w="274"/><text x="83.6981%" y="399.50"></text></g><g><title>__schedule (273 samples, 1.63%)</title><rect x="83.4541%" y="373" width="1.6348%" height="15" fill="rgb(214,50,23)" fg:x="13936" fg:w="273"/><text x="83.7041%" y="383.50"></text></g><g><title>__x64_sys_futex (280 samples, 1.68%)</title><rect x="83.4242%" y="453" width="1.6767%" height="15" fill="rgb(210,62,9)" fg:x="13931" fg:w="280"/><text x="83.6742%" y="463.50"></text></g><g><title>do_futex (280 samples, 1.68%)</title><rect x="83.4242%" y="437" width="1.6767%" height="15" fill="rgb(210,104,37)" fg:x="13931" fg:w="280"/><text x="83.6742%" y="447.50"></text></g><g><title>futex_wait (278 samples, 1.66%)</title><rect x="83.4361%" y="421" width="1.6648%" height="15" fill="rgb(232,104,43)" fg:x="13933" fg:w="278"/><text x="83.6861%" y="431.50"></text></g><g><title>futex_wait_setup (2 samples, 0.01%)</title><rect x="85.0889%" y="405" width="0.0120%" height="15" fill="rgb(244,52,6)" fg:x="14209" fg:w="2"/><text x="85.3389%" y="415.50"></text></g><g><title>blkcg_maybe_throttle_current (2 samples, 0.01%)</title><rect x="85.1129%" y="421" width="0.0120%" height="15" fill="rgb(211,174,52)" fg:x="14213" fg:w="2"/><text x="85.3629%" y="431.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.03%)</title><rect x="85.1249%" y="421" width="0.0299%" height="15" fill="rgb(229,48,4)" fg:x="14215" fg:w="5"/><text x="85.3749%" y="431.50"></text></g><g><title>exit_to_user_mode_prepare (9 samples, 0.05%)</title><rect x="85.1129%" y="437" width="0.0539%" height="15" fill="rgb(205,155,16)" fg:x="14213" fg:w="9"/><text x="85.3629%" y="447.50"></text></g><g><title>switch_fpu_return (2 samples, 0.01%)</title><rect x="85.1548%" y="421" width="0.0120%" height="15" fill="rgb(211,141,53)" fg:x="14220" fg:w="2"/><text x="85.4048%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (293 samples, 1.75%)</title><rect x="83.4182%" y="485" width="1.7546%" height="15" fill="rgb(240,148,11)" fg:x="13930" fg:w="293"/><text x="83.6682%" y="495.50"></text></g><g><title>do_syscall_64 (293 samples, 1.75%)</title><rect x="83.4182%" y="469" width="1.7546%" height="15" fill="rgb(214,45,23)" fg:x="13930" fg:w="293"/><text x="83.6682%" y="479.50"></text></g><g><title>syscall_exit_to_user_mode (11 samples, 0.07%)</title><rect x="85.1069%" y="453" width="0.0659%" height="15" fill="rgb(248,74,26)" fg:x="14212" fg:w="11"/><text x="85.3569%" y="463.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (301 samples, 1.80%)</title><rect x="83.4062%" y="533" width="1.8025%" height="15" fill="rgb(218,121,16)" fg:x="13928" fg:w="301"/><text x="83.6562%" y="543.50">&lt;..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (300 samples, 1.80%)</title><rect x="83.4122%" y="517" width="1.7965%" height="15" fill="rgb(218,10,47)" fg:x="13929" fg:w="300"/><text x="83.6622%" y="527.50">p..</text></g><g><title>syscall (300 samples, 1.80%)</title><rect x="83.4122%" y="501" width="1.7965%" height="15" fill="rgb(227,99,14)" fg:x="13929" fg:w="300"/><text x="83.6622%" y="511.50">s..</text></g><g><title>syscall_return_via_sysret (6 samples, 0.04%)</title><rect x="85.1728%" y="485" width="0.0359%" height="15" fill="rgb(229,83,46)" fg:x="14223" fg:w="6"/><text x="85.4228%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (319 samples, 1.91%)</title><rect x="83.3164%" y="645" width="1.9103%" height="15" fill="rgb(228,25,1)" fg:x="13913" fg:w="319"/><text x="83.5664%" y="655.50">t..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (314 samples, 1.88%)</title><rect x="83.3463%" y="629" width="1.8804%" height="15" fill="rgb(252,190,15)" fg:x="13918" fg:w="314"/><text x="83.5963%" y="639.50">t..</text></g><g><title>parking_lot::condvar::Condvar::wait (312 samples, 1.87%)</title><rect x="83.3583%" y="613" width="1.8684%" height="15" fill="rgb(213,103,51)" fg:x="13920" fg:w="312"/><text x="83.6083%" y="623.50">p..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (312 samples, 1.87%)</title><rect x="83.3583%" y="597" width="1.8684%" height="15" fill="rgb(220,38,44)" fg:x="13920" fg:w="312"/><text x="83.6083%" y="607.50">p..</text></g><g><title>parking_lot_core::parking_lot::park (310 samples, 1.86%)</title><rect x="83.3703%" y="581" width="1.8564%" height="15" fill="rgb(210,45,26)" fg:x="13922" fg:w="310"/><text x="83.6203%" y="591.50">p..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (310 samples, 1.86%)</title><rect x="83.3703%" y="565" width="1.8564%" height="15" fill="rgb(205,95,48)" fg:x="13922" fg:w="310"/><text x="83.6203%" y="575.50">p..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (309 samples, 1.85%)</title><rect x="83.3763%" y="549" width="1.8504%" height="15" fill="rgb(225,179,37)" fg:x="13923" fg:w="309"/><text x="83.6263%" y="559.50">p..</text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="85.2386%" y="533" width="0.0120%" height="15" fill="rgb(230,209,3)" fg:x="14234" fg:w="2"/><text x="85.4886%" y="543.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::{{closure}} (2 samples, 0.01%)</title><rect x="85.2386%" y="517" width="0.0120%" height="15" fill="rgb(248,12,46)" fg:x="14234" fg:w="2"/><text x="85.4886%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (2 samples, 0.01%)</title><rect x="85.2386%" y="501" width="0.0120%" height="15" fill="rgb(234,18,0)" fg:x="14234" fg:w="2"/><text x="85.4886%" y="511.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::no_expirations_before (2 samples, 0.01%)</title><rect x="85.2506%" y="501" width="0.0120%" height="15" fill="rgb(238,197,14)" fg:x="14236" fg:w="2"/><text x="85.5006%" y="511.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (3 samples, 0.02%)</title><rect x="85.2506%" y="517" width="0.0180%" height="15" fill="rgb(251,162,48)" fg:x="14236" fg:w="3"/><text x="85.5006%" y="527.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (4 samples, 0.02%)</title><rect x="85.2506%" y="533" width="0.0240%" height="15" fill="rgb(237,73,42)" fg:x="14236" fg:w="4"/><text x="85.5006%" y="543.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (7 samples, 0.04%)</title><rect x="85.2386%" y="549" width="0.0419%" height="15" fill="rgb(211,108,8)" fg:x="14234" fg:w="7"/><text x="85.4886%" y="559.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (8 samples, 0.05%)</title><rect x="85.2386%" y="565" width="0.0479%" height="15" fill="rgb(213,45,22)" fg:x="14234" fg:w="8"/><text x="85.4886%" y="575.50"></text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans (3 samples, 0.02%)</title><rect x="85.2865%" y="517" width="0.0180%" height="15" fill="rgb(252,154,5)" fg:x="14242" fg:w="3"/><text x="85.5365%" y="527.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (3 samples, 0.02%)</title><rect x="85.2865%" y="501" width="0.0180%" height="15" fill="rgb(221,79,52)" fg:x="14242" fg:w="3"/><text x="85.5365%" y="511.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (2 samples, 0.01%)</title><rect x="85.2925%" y="485" width="0.0120%" height="15" fill="rgb(229,220,36)" fg:x="14243" fg:w="2"/><text x="85.5425%" y="495.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (2 samples, 0.01%)</title><rect x="85.2925%" y="469" width="0.0120%" height="15" fill="rgb(211,17,16)" fg:x="14243" fg:w="2"/><text x="85.5425%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (2 samples, 0.01%)</title><rect x="85.2925%" y="453" width="0.0120%" height="15" fill="rgb(222,55,31)" fg:x="14243" fg:w="2"/><text x="85.5425%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (2 samples, 0.01%)</title><rect x="85.2925%" y="437" width="0.0120%" height="15" fill="rgb(221,221,31)" fg:x="14243" fg:w="2"/><text x="85.5425%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="85.2925%" y="421" width="0.0120%" height="15" fill="rgb(227,168,26)" fg:x="14243" fg:w="2"/><text x="85.5425%" y="431.50"></text></g><g><title>__put_user_nocheck_4 (2 samples, 0.01%)</title><rect x="85.3524%" y="341" width="0.0120%" height="15" fill="rgb(224,139,9)" fg:x="14253" fg:w="2"/><text x="85.6024%" y="351.50"></text></g><g><title>mutex_lock (2 samples, 0.01%)</title><rect x="85.3704%" y="341" width="0.0120%" height="15" fill="rgb(254,172,0)" fg:x="14256" fg:w="2"/><text x="85.6204%" y="351.50"></text></g><g><title>hrtimer_try_to_cancel (2 samples, 0.01%)</title><rect x="85.3943%" y="309" width="0.0120%" height="15" fill="rgb(235,203,1)" fg:x="14260" fg:w="2"/><text x="85.6443%" y="319.50"></text></g><g><title>dequeue_entity (2 samples, 0.01%)</title><rect x="85.4183%" y="245" width="0.0120%" height="15" fill="rgb(216,205,24)" fg:x="14264" fg:w="2"/><text x="85.6683%" y="255.50"></text></g><g><title>dequeue_task (4 samples, 0.02%)</title><rect x="85.4123%" y="277" width="0.0240%" height="15" fill="rgb(233,24,6)" fg:x="14263" fg:w="4"/><text x="85.6623%" y="287.50"></text></g><g><title>dequeue_task_fair (3 samples, 0.02%)</title><rect x="85.4183%" y="261" width="0.0180%" height="15" fill="rgb(244,110,9)" fg:x="14264" fg:w="3"/><text x="85.6683%" y="271.50"></text></g><g><title>__perf_event_task_sched_in (36 samples, 0.22%)</title><rect x="85.4422%" y="261" width="0.2156%" height="15" fill="rgb(239,222,42)" fg:x="14268" fg:w="36"/><text x="85.6922%" y="271.50"></text></g><g><title>perf_ctx_enable (36 samples, 0.22%)</title><rect x="85.4422%" y="245" width="0.2156%" height="15" fill="rgb(218,145,13)" fg:x="14268" fg:w="36"/><text x="85.6922%" y="255.50"></text></g><g><title>x86_pmu_enable (36 samples, 0.22%)</title><rect x="85.4422%" y="229" width="0.2156%" height="15" fill="rgb(207,69,11)" fg:x="14268" fg:w="36"/><text x="85.6922%" y="239.50"></text></g><g><title>intel_pmu_enable_all (36 samples, 0.22%)</title><rect x="85.4422%" y="213" width="0.2156%" height="15" fill="rgb(220,223,22)" fg:x="14268" fg:w="36"/><text x="85.6922%" y="223.50"></text></g><g><title>native_write_msr (36 samples, 0.22%)</title><rect x="85.4422%" y="197" width="0.2156%" height="15" fill="rgb(245,102,5)" fg:x="14268" fg:w="36"/><text x="85.6922%" y="207.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="85.6578%" y="261" width="0.0120%" height="15" fill="rgb(211,148,2)" fg:x="14304" fg:w="2"/><text x="85.9078%" y="271.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="85.6578%" y="245" width="0.0120%" height="15" fill="rgb(241,13,44)" fg:x="14304" fg:w="2"/><text x="85.9078%" y="255.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="85.6578%" y="229" width="0.0120%" height="15" fill="rgb(219,137,21)" fg:x="14304" fg:w="2"/><text x="85.9078%" y="239.50"></text></g><g><title>__irq_exit_rcu (2 samples, 0.01%)</title><rect x="85.6578%" y="213" width="0.0120%" height="15" fill="rgb(242,206,5)" fg:x="14304" fg:w="2"/><text x="85.9078%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (40 samples, 0.24%)</title><rect x="85.4363%" y="277" width="0.2395%" height="15" fill="rgb(217,114,22)" fg:x="14267" fg:w="40"/><text x="85.6863%" y="287.50"></text></g><g><title>pick_next_task (2 samples, 0.01%)</title><rect x="85.6758%" y="277" width="0.0120%" height="15" fill="rgb(253,206,42)" fg:x="14307" fg:w="2"/><text x="85.9258%" y="287.50"></text></g><g><title>do_epoll_wait (59 samples, 0.35%)</title><rect x="85.3404%" y="373" width="0.3533%" height="15" fill="rgb(236,102,18)" fg:x="14251" fg:w="59"/><text x="85.5904%" y="383.50"></text></g><g><title>ep_poll (58 samples, 0.35%)</title><rect x="85.3464%" y="357" width="0.3473%" height="15" fill="rgb(208,59,49)" fg:x="14252" fg:w="58"/><text x="85.5964%" y="367.50"></text></g><g><title>schedule_hrtimeout_range (52 samples, 0.31%)</title><rect x="85.3824%" y="341" width="0.3114%" height="15" fill="rgb(215,194,28)" fg:x="14258" fg:w="52"/><text x="85.6324%" y="351.50"></text></g><g><title>schedule_hrtimeout_range_clock (51 samples, 0.31%)</title><rect x="85.3883%" y="325" width="0.3054%" height="15" fill="rgb(243,207,11)" fg:x="14259" fg:w="51"/><text x="85.6383%" y="335.50"></text></g><g><title>schedule (48 samples, 0.29%)</title><rect x="85.4063%" y="309" width="0.2874%" height="15" fill="rgb(254,179,35)" fg:x="14262" fg:w="48"/><text x="85.6563%" y="319.50"></text></g><g><title>__schedule (48 samples, 0.29%)</title><rect x="85.4063%" y="293" width="0.2874%" height="15" fill="rgb(235,97,3)" fg:x="14262" fg:w="48"/><text x="85.6563%" y="303.50"></text></g><g><title>__x64_sys_epoll_wait (60 samples, 0.36%)</title><rect x="85.3404%" y="389" width="0.3593%" height="15" fill="rgb(215,155,33)" fg:x="14251" fg:w="60"/><text x="85.5904%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (63 samples, 0.38%)</title><rect x="85.3404%" y="421" width="0.3773%" height="15" fill="rgb(223,128,12)" fg:x="14251" fg:w="63"/><text x="85.5904%" y="431.50"></text></g><g><title>do_syscall_64 (63 samples, 0.38%)</title><rect x="85.3404%" y="405" width="0.3773%" height="15" fill="rgb(208,157,18)" fg:x="14251" fg:w="63"/><text x="85.5904%" y="415.50"></text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.02%)</title><rect x="85.6997%" y="389" width="0.0180%" height="15" fill="rgb(249,70,54)" fg:x="14311" fg:w="3"/><text x="85.9497%" y="399.50"></text></g><g><title>mio::poll::Poll::poll (67 samples, 0.40%)</title><rect x="85.3285%" y="469" width="0.4012%" height="15" fill="rgb(244,118,24)" fg:x="14249" fg:w="67"/><text x="85.5785%" y="479.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (67 samples, 0.40%)</title><rect x="85.3285%" y="453" width="0.4012%" height="15" fill="rgb(211,54,0)" fg:x="14249" fg:w="67"/><text x="85.5785%" y="463.50"></text></g><g><title>epoll_wait (65 samples, 0.39%)</title><rect x="85.3404%" y="437" width="0.3892%" height="15" fill="rgb(245,137,45)" fg:x="14251" fg:w="65"/><text x="85.5904%" y="447.50"></text></g><g><title>syscall_return_via_sysret (2 samples, 0.01%)</title><rect x="85.7177%" y="421" width="0.0120%" height="15" fill="rgb(232,154,31)" fg:x="14314" fg:w="2"/><text x="85.9677%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.01%)</title><rect x="85.7357%" y="437" width="0.0120%" height="15" fill="rgb(253,6,39)" fg:x="14317" fg:w="2"/><text x="85.9857%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.01%)</title><rect x="85.7357%" y="421" width="0.0120%" height="15" fill="rgb(234,183,24)" fg:x="14317" fg:w="2"/><text x="85.9857%" y="431.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (3 samples, 0.02%)</title><rect x="85.7357%" y="453" width="0.0180%" height="15" fill="rgb(252,84,40)" fg:x="14317" fg:w="3"/><text x="85.9857%" y="463.50"></text></g><g><title>&lt;tokio::util::linked_list::DrainFilter&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="85.7596%" y="437" width="0.0120%" height="15" fill="rgb(224,65,2)" fg:x="14321" fg:w="2"/><text x="86.0096%" y="447.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (2 samples, 0.01%)</title><rect x="85.7596%" y="421" width="0.0120%" height="15" fill="rgb(229,38,24)" fg:x="14321" fg:w="2"/><text x="86.0096%" y="431.50"></text></g><g><title>tokio::runtime::time::Driver::park_thread_timeout (87 samples, 0.52%)</title><rect x="85.2865%" y="565" width="0.5210%" height="15" fill="rgb(218,131,50)" fg:x="14242" fg:w="87"/><text x="85.5365%" y="575.50"></text></g><g><title>tokio::runtime::driver::IoStack::park_timeout (87 samples, 0.52%)</title><rect x="85.2865%" y="549" width="0.5210%" height="15" fill="rgb(233,106,18)" fg:x="14242" fg:w="87"/><text x="85.5365%" y="559.50"></text></g><g><title>tokio::runtime::process::Driver::park_timeout (87 samples, 0.52%)</title><rect x="85.2865%" y="533" width="0.5210%" height="15" fill="rgb(220,216,11)" fg:x="14242" fg:w="87"/><text x="85.5365%" y="543.50"></text></g><g><title>tokio::runtime::signal::Driver::park_timeout (84 samples, 0.50%)</title><rect x="85.3045%" y="517" width="0.5030%" height="15" fill="rgb(251,100,45)" fg:x="14245" fg:w="84"/><text x="85.5545%" y="527.50"></text></g><g><title>tokio::runtime::io::Driver::park_timeout (84 samples, 0.50%)</title><rect x="85.3045%" y="501" width="0.5030%" height="15" fill="rgb(235,143,32)" fg:x="14245" fg:w="84"/><text x="85.5545%" y="511.50"></text></g><g><title>tokio::runtime::io::Driver::turn (83 samples, 0.50%)</title><rect x="85.3105%" y="485" width="0.4970%" height="15" fill="rgb(248,124,34)" fg:x="14246" fg:w="83"/><text x="85.5605%" y="495.50"></text></g><g><title>tokio::runtime::io::Driver::dispatch (13 samples, 0.08%)</title><rect x="85.7297%" y="469" width="0.0778%" height="15" fill="rgb(225,221,4)" fg:x="14316" fg:w="13"/><text x="85.9797%" y="479.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (9 samples, 0.05%)</title><rect x="85.7536%" y="453" width="0.0539%" height="15" fill="rgb(242,27,43)" fg:x="14320" fg:w="9"/><text x="86.0036%" y="463.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (4 samples, 0.02%)</title><rect x="85.7836%" y="437" width="0.0240%" height="15" fill="rgb(227,54,8)" fg:x="14325" fg:w="4"/><text x="86.0336%" y="447.50"></text></g><g><title>core::task::wake::Waker::wake (4 samples, 0.02%)</title><rect x="85.7836%" y="421" width="0.0240%" height="15" fill="rgb(253,139,49)" fg:x="14325" fg:w="4"/><text x="86.0336%" y="431.50"></text></g><g><title>futures_task::waker::wake_arc_raw (4 samples, 0.02%)</title><rect x="85.7836%" y="405" width="0.0240%" height="15" fill="rgb(231,26,43)" fg:x="14325" fg:w="4"/><text x="86.0336%" y="415.50"></text></g><g><title>futures_task::arc_wake::ArcWake::wake (3 samples, 0.02%)</title><rect x="85.7896%" y="389" width="0.0180%" height="15" fill="rgb(207,121,39)" fg:x="14326" fg:w="3"/><text x="86.0396%" y="399.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (3 samples, 0.02%)</title><rect x="85.7896%" y="373" width="0.0180%" height="15" fill="rgb(223,101,35)" fg:x="14326" fg:w="3"/><text x="86.0396%" y="383.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (3 samples, 0.02%)</title><rect x="85.7896%" y="357" width="0.0180%" height="15" fill="rgb(232,87,23)" fg:x="14326" fg:w="3"/><text x="86.0396%" y="367.50"></text></g><g><title>core::task::wake::Waker::wake (3 samples, 0.02%)</title><rect x="85.7896%" y="341" width="0.0180%" height="15" fill="rgb(225,180,29)" fg:x="14326" fg:w="3"/><text x="86.0396%" y="351.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (3 samples, 0.02%)</title><rect x="85.7896%" y="325" width="0.0180%" height="15" fill="rgb(225,25,17)" fg:x="14326" fg:w="3"/><text x="86.0396%" y="335.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (3 samples, 0.02%)</title><rect x="85.7896%" y="309" width="0.0180%" height="15" fill="rgb(223,8,52)" fg:x="14326" fg:w="3"/><text x="86.0396%" y="319.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (2 samples, 0.01%)</title><rect x="85.7956%" y="293" width="0.0120%" height="15" fill="rgb(246,42,21)" fg:x="14327" fg:w="2"/><text x="86.0456%" y="303.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (2 samples, 0.01%)</title><rect x="85.7956%" y="277" width="0.0120%" height="15" fill="rgb(205,64,43)" fg:x="14327" fg:w="2"/><text x="86.0456%" y="287.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::no_expirations_before (2 samples, 0.01%)</title><rect x="85.8135%" y="533" width="0.0120%" height="15" fill="rgb(221,160,13)" fg:x="14330" fg:w="2"/><text x="86.0635%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (101 samples, 0.60%)</title><rect x="85.2267%" y="645" width="0.6048%" height="15" fill="rgb(239,58,35)" fg:x="14232" fg:w="101"/><text x="85.4767%" y="655.50"></text></g><g><title>tokio::runtime::driver::Driver::park (100 samples, 0.60%)</title><rect x="85.2326%" y="629" width="0.5988%" height="15" fill="rgb(251,26,40)" fg:x="14233" fg:w="100"/><text x="85.4826%" y="639.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park (100 samples, 0.60%)</title><rect x="85.2326%" y="613" width="0.5988%" height="15" fill="rgb(247,0,4)" fg:x="14233" fg:w="100"/><text x="85.4826%" y="623.50"></text></g><g><title>tokio::runtime::time::Driver::park (99 samples, 0.59%)</title><rect x="85.2386%" y="597" width="0.5928%" height="15" fill="rgb(218,130,10)" fg:x="14234" fg:w="99"/><text x="85.4886%" y="607.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (99 samples, 0.59%)</title><rect x="85.2386%" y="581" width="0.5928%" height="15" fill="rgb(239,32,7)" fg:x="14234" fg:w="99"/><text x="85.4886%" y="591.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (3 samples, 0.02%)</title><rect x="85.8135%" y="565" width="0.0180%" height="15" fill="rgb(210,192,24)" fg:x="14330" fg:w="3"/><text x="86.0635%" y="575.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (3 samples, 0.02%)</title><rect x="85.8135%" y="549" width="0.0180%" height="15" fill="rgb(226,212,17)" fg:x="14330" fg:w="3"/><text x="86.0635%" y="559.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (425 samples, 2.55%)</title><rect x="83.2924%" y="677" width="2.5451%" height="15" fill="rgb(219,201,28)" fg:x="13909" fg:w="425"/><text x="83.5424%" y="687.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (425 samples, 2.55%)</title><rect x="83.2924%" y="661" width="2.5451%" height="15" fill="rgb(235,207,41)" fg:x="13909" fg:w="425"/><text x="83.5424%" y="671.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked (3 samples, 0.02%)</title><rect x="85.8435%" y="677" width="0.0180%" height="15" fill="rgb(241,95,54)" fg:x="14335" fg:w="3"/><text x="86.0935%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (3 samples, 0.02%)</title><rect x="85.8435%" y="661" width="0.0180%" height="15" fill="rgb(248,12,23)" fg:x="14335" fg:w="3"/><text x="86.0935%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (3 samples, 0.02%)</title><rect x="85.8435%" y="645" width="0.0180%" height="15" fill="rgb(228,173,4)" fg:x="14335" fg:w="3"/><text x="86.0935%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (2 samples, 0.01%)</title><rect x="85.8495%" y="629" width="0.0120%" height="15" fill="rgb(254,99,5)" fg:x="14336" fg:w="2"/><text x="86.0995%" y="639.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (2 samples, 0.01%)</title><rect x="85.8674%" y="613" width="0.0120%" height="15" fill="rgb(212,184,17)" fg:x="14339" fg:w="2"/><text x="86.1174%" y="623.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.01%)</title><rect x="85.8794%" y="549" width="0.0120%" height="15" fill="rgb(252,174,1)" fg:x="14341" fg:w="2"/><text x="86.1294%" y="559.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (440 samples, 2.63%)</title><rect x="83.2685%" y="693" width="2.6349%" height="15" fill="rgb(241,118,51)" fg:x="13905" fg:w="440"/><text x="83.5185%" y="703.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::wake_deferred_tasks (7 samples, 0.04%)</title><rect x="85.8614%" y="677" width="0.0419%" height="15" fill="rgb(227,94,47)" fg:x="14338" fg:w="7"/><text x="86.1114%" y="687.50"></text></g><g><title>tokio::runtime::context::with_defer (7 samples, 0.04%)</title><rect x="85.8614%" y="661" width="0.0419%" height="15" fill="rgb(229,104,2)" fg:x="14338" fg:w="7"/><text x="86.1114%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.04%)</title><rect x="85.8614%" y="645" width="0.0419%" height="15" fill="rgb(219,28,31)" fg:x="14338" fg:w="7"/><text x="86.1114%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.04%)</title><rect x="85.8614%" y="629" width="0.0419%" height="15" fill="rgb(233,109,36)" fg:x="14338" fg:w="7"/><text x="86.1114%" y="639.50"></text></g><g><title>tokio::runtime::context::with_defer::{{closure}} (4 samples, 0.02%)</title><rect x="85.8794%" y="613" width="0.0240%" height="15" fill="rgb(246,88,11)" fg:x="14341" fg:w="4"/><text x="86.1294%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.02%)</title><rect x="85.8794%" y="597" width="0.0240%" height="15" fill="rgb(209,212,17)" fg:x="14341" fg:w="4"/><text x="86.1294%" y="607.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::wake_deferred_tasks::{{closure}} (4 samples, 0.02%)</title><rect x="85.8794%" y="581" width="0.0240%" height="15" fill="rgb(243,59,29)" fg:x="14341" fg:w="4"/><text x="86.1294%" y="591.50"></text></g><g><title>tokio::runtime::defer::Defer::wake (4 samples, 0.02%)</title><rect x="85.8794%" y="565" width="0.0240%" height="15" fill="rgb(244,205,48)" fg:x="14341" fg:w="4"/><text x="86.1294%" y="575.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="85.8914%" y="549" width="0.0120%" height="15" fill="rgb(227,30,6)" fg:x="14343" fg:w="2"/><text x="86.1414%" y="559.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (4 samples, 0.02%)</title><rect x="85.9093%" y="677" width="0.0240%" height="15" fill="rgb(220,205,48)" fg:x="14346" fg:w="4"/><text x="86.1593%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (4 samples, 0.02%)</title><rect x="85.9093%" y="661" width="0.0240%" height="15" fill="rgb(250,94,14)" fg:x="14346" fg:w="4"/><text x="86.1593%" y="671.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (4 samples, 0.02%)</title><rect x="85.9093%" y="645" width="0.0240%" height="15" fill="rgb(216,119,42)" fg:x="14346" fg:w="4"/><text x="86.1593%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (4 samples, 0.02%)</title><rect x="85.9093%" y="629" width="0.0240%" height="15" fill="rgb(232,155,0)" fg:x="14346" fg:w="4"/><text x="86.1593%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (5 samples, 0.03%)</title><rect x="85.9093%" y="693" width="0.0299%" height="15" fill="rgb(212,24,32)" fg:x="14346" fg:w="5"/><text x="86.1593%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (2 samples, 0.01%)</title><rect x="85.9393%" y="677" width="0.0120%" height="15" fill="rgb(216,69,20)" fg:x="14351" fg:w="2"/><text x="86.1893%" y="687.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.01%)</title><rect x="85.9393%" y="661" width="0.0120%" height="15" fill="rgb(229,73,31)" fg:x="14351" fg:w="2"/><text x="86.1893%" y="671.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.01%)</title><rect x="85.9393%" y="645" width="0.0120%" height="15" fill="rgb(224,219,20)" fg:x="14351" fg:w="2"/><text x="86.1893%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.01%)</title><rect x="85.9393%" y="629" width="0.0120%" height="15" fill="rgb(215,146,41)" fg:x="14351" fg:w="2"/><text x="86.1893%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.01%)</title><rect x="85.9393%" y="613" width="0.0120%" height="15" fill="rgb(244,71,31)" fg:x="14351" fg:w="2"/><text x="86.1893%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (457 samples, 2.74%)</title><rect x="83.2325%" y="709" width="2.7367%" height="15" fill="rgb(224,24,11)" fg:x="13899" fg:w="457"/><text x="83.4825%" y="719.50">to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (5 samples, 0.03%)</title><rect x="85.9393%" y="693" width="0.0299%" height="15" fill="rgb(229,76,15)" fg:x="14351" fg:w="5"/><text x="86.1893%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (3 samples, 0.02%)</title><rect x="85.9513%" y="677" width="0.0180%" height="15" fill="rgb(209,93,2)" fg:x="14353" fg:w="3"/><text x="86.2013%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (2 samples, 0.01%)</title><rect x="86.0111%" y="485" width="0.0120%" height="15" fill="rgb(216,200,50)" fg:x="14363" fg:w="2"/><text x="86.2611%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (5 samples, 0.03%)</title><rect x="86.0111%" y="581" width="0.0299%" height="15" fill="rgb(211,67,34)" fg:x="14363" fg:w="5"/><text x="86.2611%" y="591.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (5 samples, 0.03%)</title><rect x="86.0111%" y="565" width="0.0299%" height="15" fill="rgb(225,87,47)" fg:x="14363" fg:w="5"/><text x="86.2611%" y="575.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (5 samples, 0.03%)</title><rect x="86.0111%" y="549" width="0.0299%" height="15" fill="rgb(217,185,16)" fg:x="14363" fg:w="5"/><text x="86.2611%" y="559.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (5 samples, 0.03%)</title><rect x="86.0111%" y="533" width="0.0299%" height="15" fill="rgb(205,0,0)" fg:x="14363" fg:w="5"/><text x="86.2611%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (5 samples, 0.03%)</title><rect x="86.0111%" y="517" width="0.0299%" height="15" fill="rgb(207,116,45)" fg:x="14363" fg:w="5"/><text x="86.2611%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked (5 samples, 0.03%)</title><rect x="86.0111%" y="501" width="0.0299%" height="15" fill="rgb(221,156,26)" fg:x="14363" fg:w="5"/><text x="86.2611%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (3 samples, 0.02%)</title><rect x="86.0231%" y="485" width="0.0180%" height="15" fill="rgb(213,140,4)" fg:x="14365" fg:w="3"/><text x="86.2731%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (3 samples, 0.02%)</title><rect x="86.0231%" y="469" width="0.0180%" height="15" fill="rgb(231,224,15)" fg:x="14365" fg:w="3"/><text x="86.2731%" y="479.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (3 samples, 0.02%)</title><rect x="86.0231%" y="453" width="0.0180%" height="15" fill="rgb(244,76,20)" fg:x="14365" fg:w="3"/><text x="86.2731%" y="463.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (3 samples, 0.02%)</title><rect x="86.0231%" y="437" width="0.0180%" height="15" fill="rgb(238,117,7)" fg:x="14365" fg:w="3"/><text x="86.2731%" y="447.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (3 samples, 0.02%)</title><rect x="86.0231%" y="421" width="0.0180%" height="15" fill="rgb(235,1,10)" fg:x="14365" fg:w="3"/><text x="86.2731%" y="431.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (3 samples, 0.02%)</title><rect x="86.0231%" y="405" width="0.0180%" height="15" fill="rgb(216,165,6)" fg:x="14365" fg:w="3"/><text x="86.2731%" y="415.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (3 samples, 0.02%)</title><rect x="86.0231%" y="389" width="0.0180%" height="15" fill="rgb(246,91,35)" fg:x="14365" fg:w="3"/><text x="86.2731%" y="399.50"></text></g><g><title>veilid_core::network_manager::tasks::rolling_transfers::&lt;impl veilid_core::network_manager::NetworkManager&gt;::rolling_transfers_task_routine::{{closure}} (2 samples, 0.01%)</title><rect x="86.1129%" y="325" width="0.0120%" height="15" fill="rgb(228,96,24)" fg:x="14380" fg:w="2"/><text x="86.3629%" y="335.50"></text></g><g><title>veilid_core::network_manager::tasks::rolling_transfers::&lt;impl veilid_core::network_manager::NetworkManager&gt;::rolling_transfers_task_routine::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="86.1129%" y="309" width="0.0120%" height="15" fill="rgb(254,217,53)" fg:x="14380" fg:w="2"/><text x="86.3629%" y="319.50"></text></g><g><title>veilid_core::network_manager::tasks::rolling_transfers::&lt;impl veilid_core::network_manager::NetworkManager&gt;::rolling_transfers_task_routine::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="86.1129%" y="293" width="0.0120%" height="15" fill="rgb(209,60,0)" fg:x="14380" fg:w="2"/><text x="86.3629%" y="303.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6 samples, 0.04%)</title><rect x="86.1070%" y="389" width="0.0359%" height="15" fill="rgb(250,93,26)" fg:x="14379" fg:w="6"/><text x="86.3570%" y="399.50"></text></g><g><title>veilid_tools::tick_task::TickTask&lt;E&gt;::tick::{{closure}}::{{closure}} (6 samples, 0.04%)</title><rect x="86.1070%" y="373" width="0.0359%" height="15" fill="rgb(211,9,40)" fg:x="14379" fg:w="6"/><text x="86.3570%" y="383.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="86.1129%" y="357" width="0.0299%" height="15" fill="rgb(242,57,20)" fg:x="14380" fg:w="5"/><text x="86.3629%" y="367.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="86.1129%" y="341" width="0.0299%" height="15" fill="rgb(248,85,48)" fg:x="14380" fg:w="5"/><text x="86.3629%" y="351.50"></text></g><g><title>&lt;veilid_core::veilid_layer_filter::VeilidLayerFilter as tracing_subscriber::layer::Filter&lt;S&gt;&gt;::enabled (2 samples, 0.01%)</title><rect x="86.1489%" y="101" width="0.0120%" height="15" fill="rgb(212,117,2)" fg:x="14386" fg:w="2"/><text x="86.3989%" y="111.50"></text></g><g><title>veilid_core::veilid_layer_filter::VeilidLayerFilter::interesting (2 samples, 0.01%)</title><rect x="86.1489%" y="85" width="0.0120%" height="15" fill="rgb(243,19,3)" fg:x="14386" fg:w="2"/><text x="86.3989%" y="95.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled (3 samples, 0.02%)</title><rect x="86.1489%" y="293" width="0.0180%" height="15" fill="rgb(232,217,24)" fg:x="14386" fg:w="3"/><text x="86.3989%" y="303.50"></text></g><g><title>tracing_log::log_tracer::try_cache_interest (3 samples, 0.02%)</title><rect x="86.1489%" y="277" width="0.0180%" height="15" fill="rgb(224,175,40)" fg:x="14386" fg:w="3"/><text x="86.3989%" y="287.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}} (3 samples, 0.02%)</title><rect x="86.1489%" y="261" width="0.0180%" height="15" fill="rgb(212,162,32)" fg:x="14386" fg:w="3"/><text x="86.3989%" y="271.50"></text></g><g><title>tracing_core::dispatcher::get_default (3 samples, 0.02%)</title><rect x="86.1489%" y="245" width="0.0180%" height="15" fill="rgb(215,9,4)" fg:x="14386" fg:w="3"/><text x="86.3989%" y="255.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::enabled::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="86.1489%" y="229" width="0.0180%" height="15" fill="rgb(242,42,7)" fg:x="14386" fg:w="3"/><text x="86.3989%" y="239.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enabled (3 samples, 0.02%)</title><rect x="86.1489%" y="213" width="0.0180%" height="15" fill="rgb(242,184,45)" fg:x="14386" fg:w="3"/><text x="86.3989%" y="223.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (3 samples, 0.02%)</title><rect x="86.1489%" y="197" width="0.0180%" height="15" fill="rgb(228,111,51)" fg:x="14386" fg:w="3"/><text x="86.3989%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;L&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (3 samples, 0.02%)</title><rect x="86.1489%" y="181" width="0.0180%" height="15" fill="rgb(236,147,17)" fg:x="14386" fg:w="3"/><text x="86.3989%" y="191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (3 samples, 0.02%)</title><rect x="86.1489%" y="165" width="0.0180%" height="15" fill="rgb(210,75,22)" fg:x="14386" fg:w="3"/><text x="86.3989%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;L&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled::{{closure}} (3 samples, 0.02%)</title><rect x="86.1489%" y="149" width="0.0180%" height="15" fill="rgb(217,159,45)" fg:x="14386" fg:w="3"/><text x="86.3989%" y="159.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn tracing_subscriber::layer::Layer&lt;S&gt;+core::marker::Send+core::marker::Sync&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (3 samples, 0.02%)</title><rect x="86.1489%" y="133" width="0.0180%" height="15" fill="rgb(245,165,53)" fg:x="14386" fg:w="3"/><text x="86.3989%" y="143.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (3 samples, 0.02%)</title><rect x="86.1489%" y="117" width="0.0180%" height="15" fill="rgb(251,190,50)" fg:x="14386" fg:w="3"/><text x="86.3989%" y="127.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enabled (2 samples, 0.01%)</title><rect x="86.1668%" y="245" width="0.0120%" height="15" fill="rgb(208,203,29)" fg:x="14389" fg:w="2"/><text x="86.4168%" y="255.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (2 samples, 0.01%)</title><rect x="86.1668%" y="229" width="0.0120%" height="15" fill="rgb(207,209,35)" fg:x="14389" fg:w="2"/><text x="86.4168%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;L&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (2 samples, 0.01%)</title><rect x="86.1668%" y="213" width="0.0120%" height="15" fill="rgb(230,144,49)" fg:x="14389" fg:w="2"/><text x="86.4168%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (2 samples, 0.01%)</title><rect x="86.1668%" y="197" width="0.0120%" height="15" fill="rgb(229,31,6)" fg:x="14389" fg:w="2"/><text x="86.4168%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;L&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled::{{closure}} (2 samples, 0.01%)</title><rect x="86.1668%" y="181" width="0.0120%" height="15" fill="rgb(251,129,24)" fg:x="14389" fg:w="2"/><text x="86.4168%" y="191.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn tracing_subscriber::layer::Layer&lt;S&gt;+core::marker::Send+core::marker::Sync&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (2 samples, 0.01%)</title><rect x="86.1668%" y="165" width="0.0120%" height="15" fill="rgb(235,105,15)" fg:x="14389" fg:w="2"/><text x="86.4168%" y="175.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (2 samples, 0.01%)</title><rect x="86.1668%" y="149" width="0.0120%" height="15" fill="rgb(216,52,43)" fg:x="14389" fg:w="2"/><text x="86.4168%" y="159.50"></text></g><g><title>&lt;veilid_core::veilid_layer_filter::VeilidLayerFilter as tracing_subscriber::layer::Filter&lt;S&gt;&gt;::enabled (2 samples, 0.01%)</title><rect x="86.1668%" y="133" width="0.0120%" height="15" fill="rgb(238,144,41)" fg:x="14389" fg:w="2"/><text x="86.4168%" y="143.50"></text></g><g><title>veilid_core::veilid_layer_filter::VeilidLayerFilter::interesting (2 samples, 0.01%)</title><rect x="86.1668%" y="117" width="0.0120%" height="15" fill="rgb(243,63,9)" fg:x="14389" fg:w="2"/><text x="86.4168%" y="127.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2 samples, 0.01%)</title><rect x="86.1668%" y="101" width="0.0120%" height="15" fill="rgb(246,208,1)" fg:x="14389" fg:w="2"/><text x="86.4168%" y="111.50"></text></g><g><title>veilid_core::veilid_layer_filter::VeilidLayerFilter::interesting::{{closure}} (2 samples, 0.01%)</title><rect x="86.1668%" y="85" width="0.0120%" height="15" fill="rgb(233,182,18)" fg:x="14389" fg:w="2"/><text x="86.4168%" y="95.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (2 samples, 0.01%)</title><rect x="86.1668%" y="69" width="0.0120%" height="15" fill="rgb(242,224,8)" fg:x="14389" fg:w="2"/><text x="86.4168%" y="79.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (2 samples, 0.01%)</title><rect x="86.1668%" y="53" width="0.0120%" height="15" fill="rgb(243,54,37)" fg:x="14389" fg:w="2"/><text x="86.4168%" y="63.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (2 samples, 0.01%)</title><rect x="86.1668%" y="37" width="0.0120%" height="15" fill="rgb(233,192,12)" fg:x="14389" fg:w="2"/><text x="86.4168%" y="47.50"></text></g><g><title>&lt;netlink_proto::codecs::NetlinkCodec as netlink_proto::codecs::NetlinkMessageCodec&gt;::decode (8 samples, 0.05%)</title><rect x="86.1489%" y="341" width="0.0479%" height="15" fill="rgb(251,192,53)" fg:x="14386" fg:w="8"/><text x="86.3989%" y="351.50"></text></g><g><title>log::__private_api_log (8 samples, 0.05%)</title><rect x="86.1489%" y="325" width="0.0479%" height="15" fill="rgb(246,141,26)" fg:x="14386" fg:w="8"/><text x="86.3989%" y="335.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (8 samples, 0.05%)</title><rect x="86.1489%" y="309" width="0.0479%" height="15" fill="rgb(239,195,19)" fg:x="14386" fg:w="8"/><text x="86.3989%" y="319.50"></text></g><g><title>tracing_log::dispatch_record (5 samples, 0.03%)</title><rect x="86.1668%" y="293" width="0.0299%" height="15" fill="rgb(241,16,39)" fg:x="14389" fg:w="5"/><text x="86.4168%" y="303.50"></text></g><g><title>tracing_core::dispatcher::get_default (5 samples, 0.03%)</title><rect x="86.1668%" y="277" width="0.0299%" height="15" fill="rgb(223,13,53)" fg:x="14389" fg:w="5"/><text x="86.4168%" y="287.50"></text></g><g><title>tracing_log::dispatch_record::{{closure}} (5 samples, 0.03%)</title><rect x="86.1668%" y="261" width="0.0299%" height="15" fill="rgb(214,227,0)" fg:x="14389" fg:w="5"/><text x="86.4168%" y="271.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::event (3 samples, 0.02%)</title><rect x="86.1788%" y="245" width="0.0180%" height="15" fill="rgb(228,103,26)" fg:x="14391" fg:w="3"/><text x="86.4288%" y="255.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (3 samples, 0.02%)</title><rect x="86.1788%" y="229" width="0.0180%" height="15" fill="rgb(254,177,53)" fg:x="14391" fg:w="3"/><text x="86.4288%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;L&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (3 samples, 0.02%)</title><rect x="86.1788%" y="213" width="0.0180%" height="15" fill="rgb(208,201,34)" fg:x="14391" fg:w="3"/><text x="86.4288%" y="223.50"></text></g><g><title>&lt;netlink_proto::framed::NetlinkFramed&lt;T,S,C&gt; as futures_core::stream::Stream&gt;::poll_next (9 samples, 0.05%)</title><rect x="86.1489%" y="357" width="0.0539%" height="15" fill="rgb(212,39,5)" fg:x="14386" fg:w="9"/><text x="86.3989%" y="367.50"></text></g><g><title>&lt;netlink_proto::connection::Connection&lt;T,S,C&gt; as core::future::future::Future&gt;::poll (15 samples, 0.09%)</title><rect x="86.1429%" y="389" width="0.0898%" height="15" fill="rgb(246,117,3)" fg:x="14385" fg:w="15"/><text x="86.3929%" y="399.50"></text></g><g><title>netlink_proto::connection::Connection&lt;T,S,C&gt;::poll_read_messages (14 samples, 0.08%)</title><rect x="86.1489%" y="373" width="0.0838%" height="15" fill="rgb(244,118,39)" fg:x="14386" fg:w="14"/><text x="86.3989%" y="383.50"></text></g><g><title>netlink_proto::protocol::protocol::Protocol&lt;T,M&gt;::handle_message (5 samples, 0.03%)</title><rect x="86.2028%" y="357" width="0.0299%" height="15" fill="rgb(241,64,10)" fg:x="14395" fg:w="5"/><text x="86.4528%" y="367.50"></text></g><g><title>netlink_proto::protocol::protocol::Protocol&lt;T,M&gt;::handle_response (4 samples, 0.02%)</title><rect x="86.2088%" y="341" width="0.0240%" height="15" fill="rgb(229,39,44)" fg:x="14396" fg:w="4"/><text x="86.4588%" y="351.50"></text></g><g><title>log::__private_api_log (4 samples, 0.02%)</title><rect x="86.2088%" y="325" width="0.0240%" height="15" fill="rgb(230,226,3)" fg:x="14396" fg:w="4"/><text x="86.4588%" y="335.50"></text></g><g><title>&lt;tracing_log::log_tracer::LogTracer as log::Log&gt;::log (4 samples, 0.02%)</title><rect x="86.2088%" y="309" width="0.0240%" height="15" fill="rgb(222,13,42)" fg:x="14396" fg:w="4"/><text x="86.4588%" y="319.50"></text></g><g><title>tracing_log::dispatch_record (3 samples, 0.02%)</title><rect x="86.2147%" y="293" width="0.0180%" height="15" fill="rgb(247,180,54)" fg:x="14397" fg:w="3"/><text x="86.4647%" y="303.50"></text></g><g><title>tracing_core::dispatcher::get_default (3 samples, 0.02%)</title><rect x="86.2147%" y="277" width="0.0180%" height="15" fill="rgb(205,96,16)" fg:x="14397" fg:w="3"/><text x="86.4647%" y="287.50"></text></g><g><title>tracing_log::dispatch_record::{{closure}} (3 samples, 0.02%)</title><rect x="86.2147%" y="261" width="0.0180%" height="15" fill="rgb(205,100,21)" fg:x="14397" fg:w="3"/><text x="86.4647%" y="271.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enabled (3 samples, 0.02%)</title><rect x="86.2147%" y="245" width="0.0180%" height="15" fill="rgb(248,51,4)" fg:x="14397" fg:w="3"/><text x="86.4647%" y="255.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (3 samples, 0.02%)</title><rect x="86.2147%" y="229" width="0.0180%" height="15" fill="rgb(217,197,30)" fg:x="14397" fg:w="3"/><text x="86.4647%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;L&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (3 samples, 0.02%)</title><rect x="86.2147%" y="213" width="0.0180%" height="15" fill="rgb(240,179,40)" fg:x="14397" fg:w="3"/><text x="86.4647%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (3 samples, 0.02%)</title><rect x="86.2147%" y="197" width="0.0180%" height="15" fill="rgb(212,185,35)" fg:x="14397" fg:w="3"/><text x="86.4647%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;L&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled::{{closure}} (3 samples, 0.02%)</title><rect x="86.2147%" y="181" width="0.0180%" height="15" fill="rgb(251,222,31)" fg:x="14397" fg:w="3"/><text x="86.4647%" y="191.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn tracing_subscriber::layer::Layer&lt;S&gt;+core::marker::Send+core::marker::Sync&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (3 samples, 0.02%)</title><rect x="86.2147%" y="165" width="0.0180%" height="15" fill="rgb(208,140,36)" fg:x="14397" fg:w="3"/><text x="86.4647%" y="175.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (3 samples, 0.02%)</title><rect x="86.2147%" y="149" width="0.0180%" height="15" fill="rgb(220,148,1)" fg:x="14397" fg:w="3"/><text x="86.4647%" y="159.50"></text></g><g><title>&lt;veilid_core::veilid_layer_filter::VeilidLayerFilter as tracing_subscriber::layer::Filter&lt;S&gt;&gt;::enabled (3 samples, 0.02%)</title><rect x="86.2147%" y="133" width="0.0180%" height="15" fill="rgb(254,4,28)" fg:x="14397" fg:w="3"/><text x="86.4647%" y="143.50"></text></g><g><title>veilid_core::veilid_layer_filter::VeilidLayerFilter::interesting (3 samples, 0.02%)</title><rect x="86.2147%" y="117" width="0.0180%" height="15" fill="rgb(222,185,44)" fg:x="14397" fg:w="3"/><text x="86.4647%" y="127.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (3 samples, 0.02%)</title><rect x="86.2147%" y="101" width="0.0180%" height="15" fill="rgb(215,74,39)" fg:x="14397" fg:w="3"/><text x="86.4647%" y="111.50"></text></g><g><title>veilid_core::veilid_layer_filter::VeilidLayerFilter::interesting::{{closure}} (3 samples, 0.02%)</title><rect x="86.2147%" y="85" width="0.0180%" height="15" fill="rgb(247,86,4)" fg:x="14397" fg:w="3"/><text x="86.4647%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (2 samples, 0.01%)</title><rect x="86.2327%" y="389" width="0.0120%" height="15" fill="rgb(231,105,32)" fg:x="14400" fg:w="2"/><text x="86.4827%" y="399.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="86.2327%" y="373" width="0.0120%" height="15" fill="rgb(222,65,35)" fg:x="14400" fg:w="2"/><text x="86.4827%" y="383.50"></text></g><g><title>tracing::span::Span::do_exit (2 samples, 0.01%)</title><rect x="86.2327%" y="357" width="0.0120%" height="15" fill="rgb(218,145,35)" fg:x="14400" fg:w="2"/><text x="86.4827%" y="367.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.16%)</title><rect x="86.1070%" y="405" width="0.1557%" height="15" fill="rgb(208,7,15)" fg:x="14379" fg:w="26"/><text x="86.3570%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (2 samples, 0.01%)</title><rect x="86.2627%" y="405" width="0.0120%" height="15" fill="rgb(209,83,13)" fg:x="14405" fg:w="2"/><text x="86.5127%" y="415.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="86.2627%" y="389" width="0.0120%" height="15" fill="rgb(218,3,10)" fg:x="14405" fg:w="2"/><text x="86.5127%" y="399.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (2 samples, 0.01%)</title><rect x="86.2627%" y="373" width="0.0120%" height="15" fill="rgb(211,219,4)" fg:x="14405" fg:w="2"/><text x="86.5127%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="86.2627%" y="357" width="0.0120%" height="15" fill="rgb(228,194,12)" fg:x="14405" fg:w="2"/><text x="86.5127%" y="367.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (37 samples, 0.22%)</title><rect x="86.0650%" y="565" width="0.2216%" height="15" fill="rgb(210,175,7)" fg:x="14372" fg:w="37"/><text x="86.3150%" y="575.50"></text></g><g><title>std::panic::catch_unwind (37 samples, 0.22%)</title><rect x="86.0650%" y="549" width="0.2216%" height="15" fill="rgb(243,132,6)" fg:x="14372" fg:w="37"/><text x="86.3150%" y="559.50"></text></g><g><title>std::panicking::try (36 samples, 0.22%)</title><rect x="86.0710%" y="533" width="0.2156%" height="15" fill="rgb(207,72,18)" fg:x="14373" fg:w="36"/><text x="86.3210%" y="543.50"></text></g><g><title>__rust_try (36 samples, 0.22%)</title><rect x="86.0710%" y="517" width="0.2156%" height="15" fill="rgb(236,1,18)" fg:x="14373" fg:w="36"/><text x="86.3210%" y="527.50"></text></g><g><title>std::panicking::try::do_call (36 samples, 0.22%)</title><rect x="86.0710%" y="501" width="0.2156%" height="15" fill="rgb(227,0,18)" fg:x="14373" fg:w="36"/><text x="86.3210%" y="511.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (36 samples, 0.22%)</title><rect x="86.0710%" y="485" width="0.2156%" height="15" fill="rgb(247,37,5)" fg:x="14373" fg:w="36"/><text x="86.3210%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (33 samples, 0.20%)</title><rect x="86.0890%" y="469" width="0.1976%" height="15" fill="rgb(237,179,24)" fg:x="14376" fg:w="33"/><text x="86.3390%" y="479.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (33 samples, 0.20%)</title><rect x="86.0890%" y="453" width="0.1976%" height="15" fill="rgb(226,53,20)" fg:x="14376" fg:w="33"/><text x="86.3390%" y="463.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (31 samples, 0.19%)</title><rect x="86.1010%" y="437" width="0.1856%" height="15" fill="rgb(247,75,7)" fg:x="14378" fg:w="31"/><text x="86.3510%" y="447.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (31 samples, 0.19%)</title><rect x="86.1010%" y="421" width="0.1856%" height="15" fill="rgb(233,96,12)" fg:x="14378" fg:w="31"/><text x="86.3510%" y="431.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (2 samples, 0.01%)</title><rect x="86.2746%" y="405" width="0.0120%" height="15" fill="rgb(224,125,0)" fg:x="14407" fg:w="2"/><text x="86.5246%" y="415.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (2 samples, 0.01%)</title><rect x="86.2746%" y="389" width="0.0120%" height="15" fill="rgb(224,92,25)" fg:x="14407" fg:w="2"/><text x="86.5246%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="86.2746%" y="373" width="0.0120%" height="15" fill="rgb(224,42,24)" fg:x="14407" fg:w="2"/><text x="86.5246%" y="383.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::{{closure}} (2 samples, 0.01%)</title><rect x="86.2746%" y="357" width="0.0120%" height="15" fill="rgb(234,132,49)" fg:x="14407" fg:w="2"/><text x="86.5246%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.01%)</title><rect x="86.2746%" y="341" width="0.0120%" height="15" fill="rgb(248,100,35)" fg:x="14407" fg:w="2"/><text x="86.5246%" y="351.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (51 samples, 0.31%)</title><rect x="85.9992%" y="645" width="0.3054%" height="15" fill="rgb(239,94,40)" fg:x="14361" fg:w="51"/><text x="86.2492%" y="655.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (50 samples, 0.30%)</title><rect x="86.0052%" y="629" width="0.2994%" height="15" fill="rgb(235,139,28)" fg:x="14362" fg:w="50"/><text x="86.2552%" y="639.50"></text></g><g><title>tokio::runtime::task::raw::poll (50 samples, 0.30%)</title><rect x="86.0052%" y="613" width="0.2994%" height="15" fill="rgb(217,144,7)" fg:x="14362" fg:w="50"/><text x="86.2552%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (50 samples, 0.30%)</title><rect x="86.0052%" y="597" width="0.2994%" height="15" fill="rgb(227,55,4)" fg:x="14362" fg:w="50"/><text x="86.2552%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (44 samples, 0.26%)</title><rect x="86.0411%" y="581" width="0.2635%" height="15" fill="rgb(252,82,54)" fg:x="14368" fg:w="44"/><text x="86.2911%" y="591.50"></text></g><g><title>tokio::runtime::coop::budget (56 samples, 0.34%)</title><rect x="85.9752%" y="693" width="0.3353%" height="15" fill="rgb(245,172,4)" fg:x="14357" fg:w="56"/><text x="86.2252%" y="703.50"></text></g><g><title>tokio::runtime::coop::with_budget (56 samples, 0.34%)</title><rect x="85.9752%" y="677" width="0.3353%" height="15" fill="rgb(207,26,27)" fg:x="14357" fg:w="56"/><text x="86.2252%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (55 samples, 0.33%)</title><rect x="85.9812%" y="661" width="0.3294%" height="15" fill="rgb(252,98,18)" fg:x="14358" fg:w="55"/><text x="86.2312%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (2 samples, 0.01%)</title><rect x="86.3106%" y="645" width="0.0120%" height="15" fill="rgb(244,8,26)" fg:x="14413" fg:w="2"/><text x="86.5606%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (2 samples, 0.01%)</title><rect x="86.3106%" y="629" width="0.0120%" height="15" fill="rgb(237,173,45)" fg:x="14413" fg:w="2"/><text x="86.5606%" y="639.50"></text></g><g><title>futex_wake (5 samples, 0.03%)</title><rect x="86.3285%" y="437" width="0.0299%" height="15" fill="rgb(208,213,49)" fg:x="14416" fg:w="5"/><text x="86.5785%" y="447.50"></text></g><g><title>wake_up_q (3 samples, 0.02%)</title><rect x="86.3405%" y="421" width="0.0180%" height="15" fill="rgb(212,122,37)" fg:x="14418" fg:w="3"/><text x="86.5905%" y="431.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.04%)</title><rect x="86.3285%" y="469" width="0.0359%" height="15" fill="rgb(213,80,17)" fg:x="14416" fg:w="6"/><text x="86.5785%" y="479.50"></text></g><g><title>do_futex (6 samples, 0.04%)</title><rect x="86.3285%" y="453" width="0.0359%" height="15" fill="rgb(206,210,43)" fg:x="14416" fg:w="6"/><text x="86.5785%" y="463.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (7 samples, 0.04%)</title><rect x="86.3285%" y="533" width="0.0419%" height="15" fill="rgb(229,214,3)" fg:x="14416" fg:w="7"/><text x="86.5785%" y="543.50"></text></g><g><title>syscall (7 samples, 0.04%)</title><rect x="86.3285%" y="517" width="0.0419%" height="15" fill="rgb(235,213,29)" fg:x="14416" fg:w="7"/><text x="86.5785%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="86.3285%" y="501" width="0.0419%" height="15" fill="rgb(248,135,26)" fg:x="14416" fg:w="7"/><text x="86.5785%" y="511.50"></text></g><g><title>do_syscall_64 (7 samples, 0.04%)</title><rect x="86.3285%" y="485" width="0.0419%" height="15" fill="rgb(242,188,12)" fg:x="14416" fg:w="7"/><text x="86.5785%" y="495.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (16 samples, 0.10%)</title><rect x="86.3106%" y="693" width="0.0958%" height="15" fill="rgb(245,38,12)" fg:x="14413" fg:w="16"/><text x="86.5606%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (16 samples, 0.10%)</title><rect x="86.3106%" y="677" width="0.0958%" height="15" fill="rgb(218,42,13)" fg:x="14413" fg:w="16"/><text x="86.5606%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked (16 samples, 0.10%)</title><rect x="86.3106%" y="661" width="0.0958%" height="15" fill="rgb(238,132,49)" fg:x="14413" fg:w="16"/><text x="86.5606%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (14 samples, 0.08%)</title><rect x="86.3225%" y="645" width="0.0838%" height="15" fill="rgb(209,196,19)" fg:x="14415" fg:w="14"/><text x="86.5725%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (14 samples, 0.08%)</title><rect x="86.3225%" y="629" width="0.0838%" height="15" fill="rgb(244,131,22)" fg:x="14415" fg:w="14"/><text x="86.5725%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (13 samples, 0.08%)</title><rect x="86.3285%" y="613" width="0.0778%" height="15" fill="rgb(223,18,34)" fg:x="14416" fg:w="13"/><text x="86.5785%" y="623.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (13 samples, 0.08%)</title><rect x="86.3285%" y="597" width="0.0778%" height="15" fill="rgb(252,124,54)" fg:x="14416" fg:w="13"/><text x="86.5785%" y="607.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (13 samples, 0.08%)</title><rect x="86.3285%" y="581" width="0.0778%" height="15" fill="rgb(229,106,42)" fg:x="14416" fg:w="13"/><text x="86.5785%" y="591.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (13 samples, 0.08%)</title><rect x="86.3285%" y="565" width="0.0778%" height="15" fill="rgb(221,129,1)" fg:x="14416" fg:w="13"/><text x="86.5785%" y="575.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (13 samples, 0.08%)</title><rect x="86.3285%" y="549" width="0.0778%" height="15" fill="rgb(229,74,15)" fg:x="14416" fg:w="13"/><text x="86.5785%" y="559.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (5 samples, 0.03%)</title><rect x="86.3764%" y="533" width="0.0299%" height="15" fill="rgb(210,206,50)" fg:x="14424" fg:w="5"/><text x="86.6264%" y="543.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (2 samples, 0.01%)</title><rect x="86.3944%" y="517" width="0.0120%" height="15" fill="rgb(251,114,31)" fg:x="14427" fg:w="2"/><text x="86.6444%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.01%)</title><rect x="86.3944%" y="501" width="0.0120%" height="15" fill="rgb(215,225,28)" fg:x="14427" fg:w="2"/><text x="86.6444%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (75 samples, 0.45%)</title><rect x="85.9692%" y="709" width="0.4491%" height="15" fill="rgb(237,109,14)" fg:x="14356" fg:w="75"/><text x="86.2192%" y="719.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::assert_owner (2 samples, 0.01%)</title><rect x="86.4064%" y="693" width="0.0120%" height="15" fill="rgb(230,13,37)" fg:x="14429" fg:w="2"/><text x="86.6564%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (3 samples, 0.02%)</title><rect x="86.4183%" y="693" width="0.0180%" height="15" fill="rgb(231,40,28)" fg:x="14431" fg:w="3"/><text x="86.6683%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task::{{closure}} (3 samples, 0.02%)</title><rect x="86.4183%" y="677" width="0.0180%" height="15" fill="rgb(231,202,18)" fg:x="14431" fg:w="3"/><text x="86.6683%" y="687.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::pop (2 samples, 0.01%)</title><rect x="86.4243%" y="661" width="0.0120%" height="15" fill="rgb(225,33,18)" fg:x="14432" fg:w="2"/><text x="86.6743%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (4 samples, 0.02%)</title><rect x="86.4183%" y="709" width="0.0240%" height="15" fill="rgb(223,64,47)" fg:x="14431" fg:w="4"/><text x="86.6683%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="86.4543%" y="693" width="0.0120%" height="15" fill="rgb(234,114,13)" fg:x="14437" fg:w="2"/><text x="86.7043%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="86.4543%" y="677" width="0.0120%" height="15" fill="rgb(248,56,40)" fg:x="14437" fg:w="2"/><text x="86.7043%" y="687.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="86.4543%" y="661" width="0.0120%" height="15" fill="rgb(221,194,21)" fg:x="14437" fg:w="2"/><text x="86.7043%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2 samples, 0.01%)</title><rect x="86.4842%" y="661" width="0.0120%" height="15" fill="rgb(242,108,46)" fg:x="14442" fg:w="2"/><text x="86.7342%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="86.4842%" y="645" width="0.0120%" height="15" fill="rgb(220,106,10)" fg:x="14442" fg:w="2"/><text x="86.7342%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (3 samples, 0.02%)</title><rect x="86.4962%" y="661" width="0.0180%" height="15" fill="rgb(211,88,4)" fg:x="14444" fg:w="3"/><text x="86.7462%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="86.4962%" y="645" width="0.0180%" height="15" fill="rgb(214,95,34)" fg:x="14444" fg:w="3"/><text x="86.7462%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (9 samples, 0.05%)</title><rect x="86.4663%" y="693" width="0.0539%" height="15" fill="rgb(250,160,33)" fg:x="14439" fg:w="9"/><text x="86.7163%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (8 samples, 0.05%)</title><rect x="86.4722%" y="677" width="0.0479%" height="15" fill="rgb(225,29,10)" fg:x="14440" fg:w="8"/><text x="86.7222%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (16 samples, 0.10%)</title><rect x="86.4423%" y="709" width="0.0958%" height="15" fill="rgb(224,28,30)" fg:x="14435" fg:w="16"/><text x="86.6923%" y="719.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (592 samples, 3.55%)</title><rect x="83.0169%" y="1093" width="3.5451%" height="15" fill="rgb(231,77,4)" fg:x="13863" fg:w="592"/><text x="83.2669%" y="1103.50">toki..</text></g><g><title>tokio::runtime::blocking::pool::Task::run (557 samples, 3.34%)</title><rect x="83.2265%" y="1077" width="3.3355%" height="15" fill="rgb(209,63,21)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="1087.50">tok..</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (557 samples, 3.34%)</title><rect x="83.2265%" y="1061" width="3.3355%" height="15" fill="rgb(226,22,11)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="1071.50">tok..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (557 samples, 3.34%)</title><rect x="83.2265%" y="1045" width="3.3355%" height="15" fill="rgb(216,82,30)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="1055.50">tok..</text></g><g><title>tokio::runtime::task::raw::poll (557 samples, 3.34%)</title><rect x="83.2265%" y="1029" width="3.3355%" height="15" fill="rgb(246,227,38)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="1039.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (557 samples, 3.34%)</title><rect x="83.2265%" y="1013" width="3.3355%" height="15" fill="rgb(251,203,53)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="1023.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (557 samples, 3.34%)</title><rect x="83.2265%" y="997" width="3.3355%" height="15" fill="rgb(254,101,1)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="1007.50">tok..</text></g><g><title>tokio::runtime::task::harness::poll_future (557 samples, 3.34%)</title><rect x="83.2265%" y="981" width="3.3355%" height="15" fill="rgb(241,180,5)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="991.50">tok..</text></g><g><title>std::panic::catch_unwind (557 samples, 3.34%)</title><rect x="83.2265%" y="965" width="3.3355%" height="15" fill="rgb(218,168,4)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="975.50">std..</text></g><g><title>std::panicking::try (557 samples, 3.34%)</title><rect x="83.2265%" y="949" width="3.3355%" height="15" fill="rgb(224,223,32)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="959.50">std..</text></g><g><title>__rust_try (557 samples, 3.34%)</title><rect x="83.2265%" y="933" width="3.3355%" height="15" fill="rgb(236,106,22)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="943.50">__r..</text></g><g><title>std::panicking::try::do_call (557 samples, 3.34%)</title><rect x="83.2265%" y="917" width="3.3355%" height="15" fill="rgb(206,121,5)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="927.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (557 samples, 3.34%)</title><rect x="83.2265%" y="901" width="3.3355%" height="15" fill="rgb(233,87,28)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="911.50">&lt;co..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (557 samples, 3.34%)</title><rect x="83.2265%" y="885" width="3.3355%" height="15" fill="rgb(236,137,17)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="895.50">tok..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (557 samples, 3.34%)</title><rect x="83.2265%" y="869" width="3.3355%" height="15" fill="rgb(209,183,38)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="879.50">tok..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (557 samples, 3.34%)</title><rect x="83.2265%" y="853" width="3.3355%" height="15" fill="rgb(206,162,44)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="863.50">tok..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (557 samples, 3.34%)</title><rect x="83.2265%" y="837" width="3.3355%" height="15" fill="rgb(237,70,39)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="847.50">tok..</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (557 samples, 3.34%)</title><rect x="83.2265%" y="821" width="3.3355%" height="15" fill="rgb(212,176,5)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="831.50">&lt;tr..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (557 samples, 3.34%)</title><rect x="83.2265%" y="805" width="3.3355%" height="15" fill="rgb(232,95,16)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="815.50">&lt;to..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (557 samples, 3.34%)</title><rect x="83.2265%" y="789" width="3.3355%" height="15" fill="rgb(219,115,35)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="799.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (557 samples, 3.34%)</title><rect x="83.2265%" y="773" width="3.3355%" height="15" fill="rgb(251,67,27)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="783.50">tok..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (557 samples, 3.34%)</title><rect x="83.2265%" y="757" width="3.3355%" height="15" fill="rgb(222,95,40)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="767.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (557 samples, 3.34%)</title><rect x="83.2265%" y="741" width="3.3355%" height="15" fill="rgb(250,35,16)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="751.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (557 samples, 3.34%)</title><rect x="83.2265%" y="725" width="3.3355%" height="15" fill="rgb(224,86,44)" fg:x="13898" fg:w="557"/><text x="83.4765%" y="735.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::did_defer_tasks (4 samples, 0.02%)</title><rect x="86.5381%" y="709" width="0.0240%" height="15" fill="rgb(237,53,53)" fg:x="14451" fg:w="4"/><text x="86.7881%" y="719.50"></text></g><g><title>tokio::runtime::context::with_defer (4 samples, 0.02%)</title><rect x="86.5381%" y="693" width="0.0240%" height="15" fill="rgb(208,171,33)" fg:x="14451" fg:w="4"/><text x="86.7881%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.02%)</title><rect x="86.5381%" y="677" width="0.0240%" height="15" fill="rgb(222,64,27)" fg:x="14451" fg:w="4"/><text x="86.7881%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.02%)</title><rect x="86.5441%" y="661" width="0.0180%" height="15" fill="rgb(221,121,35)" fg:x="14452" fg:w="3"/><text x="86.7941%" y="671.50"></text></g><g><title>tokio::runtime::context::with_defer::{{closure}} (2 samples, 0.01%)</title><rect x="86.5501%" y="645" width="0.0120%" height="15" fill="rgb(228,137,42)" fg:x="14453" fg:w="2"/><text x="86.8001%" y="655.50"></text></g><g><title>__clone3 (606 samples, 3.63%)</title><rect x="82.9451%" y="1333" width="3.6290%" height="15" fill="rgb(227,54,21)" fg:x="13851" fg:w="606"/><text x="83.1951%" y="1343.50">__cl..</text></g><g><title>start_thread (596 samples, 3.57%)</title><rect x="83.0050%" y="1317" width="3.5691%" height="15" fill="rgb(240,168,33)" fg:x="13861" fg:w="596"/><text x="83.2550%" y="1327.50">star..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (594 samples, 3.56%)</title><rect x="83.0169%" y="1301" width="3.5571%" height="15" fill="rgb(243,159,6)" fg:x="13863" fg:w="594"/><text x="83.2669%" y="1311.50">std:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (594 samples, 3.56%)</title><rect x="83.0169%" y="1285" width="3.5571%" height="15" fill="rgb(205,211,41)" fg:x="13863" fg:w="594"/><text x="83.2669%" y="1295.50">&lt;all..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (594 samples, 3.56%)</title><rect x="83.0169%" y="1269" width="3.5571%" height="15" fill="rgb(253,30,1)" fg:x="13863" fg:w="594"/><text x="83.2669%" y="1279.50">&lt;all..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (594 samples, 3.56%)</title><rect x="83.0169%" y="1253" width="3.5571%" height="15" fill="rgb(226,80,18)" fg:x="13863" fg:w="594"/><text x="83.2669%" y="1263.50">core..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (594 samples, 3.56%)</title><rect x="83.0169%" y="1237" width="3.5571%" height="15" fill="rgb(253,156,46)" fg:x="13863" fg:w="594"/><text x="83.2669%" y="1247.50">std:..</text></g><g><title>std::panic::catch_unwind (594 samples, 3.56%)</title><rect x="83.0169%" y="1221" width="3.5571%" height="15" fill="rgb(248,87,27)" fg:x="13863" fg:w="594"/><text x="83.2669%" y="1231.50">std:..</text></g><g><title>std::panicking::try (594 samples, 3.56%)</title><rect x="83.0169%" y="1205" width="3.5571%" height="15" fill="rgb(227,122,2)" fg:x="13863" fg:w="594"/><text x="83.2669%" y="1215.50">std:..</text></g><g><title>__rust_try (594 samples, 3.56%)</title><rect x="83.0169%" y="1189" width="3.5571%" height="15" fill="rgb(229,94,39)" fg:x="13863" fg:w="594"/><text x="83.2669%" y="1199.50">__ru..</text></g><g><title>std::panicking::try::do_call (594 samples, 3.56%)</title><rect x="83.0169%" y="1173" width="3.5571%" height="15" fill="rgb(225,173,31)" fg:x="13863" fg:w="594"/><text x="83.2669%" y="1183.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (594 samples, 3.56%)</title><rect x="83.0169%" y="1157" width="3.5571%" height="15" fill="rgb(239,176,30)" fg:x="13863" fg:w="594"/><text x="83.2669%" y="1167.50">&lt;cor..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (594 samples, 3.56%)</title><rect x="83.0169%" y="1141" width="3.5571%" height="15" fill="rgb(212,104,21)" fg:x="13863" fg:w="594"/><text x="83.2669%" y="1151.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (594 samples, 3.56%)</title><rect x="83.0169%" y="1125" width="3.5571%" height="15" fill="rgb(240,209,40)" fg:x="13863" fg:w="594"/><text x="83.2669%" y="1135.50">std:..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (594 samples, 3.56%)</title><rect x="83.0169%" y="1109" width="3.5571%" height="15" fill="rgb(234,195,5)" fg:x="13863" fg:w="594"/><text x="83.2669%" y="1119.50">toki..</text></g><g><title>tokio::runtime::handle::Handle::enter (2 samples, 0.01%)</title><rect x="86.5621%" y="1093" width="0.0120%" height="15" fill="rgb(238,213,1)" fg:x="14455" fg:w="2"/><text x="86.8121%" y="1103.50"></text></g><g><title>tokio::runtime::context::try_set_current (2 samples, 0.01%)</title><rect x="86.5621%" y="1077" width="0.0120%" height="15" fill="rgb(235,182,54)" fg:x="14455" fg:w="2"/><text x="86.8121%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="86.5621%" y="1061" width="0.0120%" height="15" fill="rgb(229,50,46)" fg:x="14455" fg:w="2"/><text x="86.8121%" y="1071.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (2 samples, 0.01%)</title><rect x="86.5621%" y="1045" width="0.0120%" height="15" fill="rgb(219,145,13)" fg:x="14455" fg:w="2"/><text x="86.8121%" y="1055.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="86.5621%" y="1029" width="0.0120%" height="15" fill="rgb(220,226,10)" fg:x="14455" fg:w="2"/><text x="86.8121%" y="1039.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (2 samples, 0.01%)</title><rect x="86.5621%" y="1013" width="0.0120%" height="15" fill="rgb(248,47,30)" fg:x="14455" fg:w="2"/><text x="86.8121%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.01%)</title><rect x="86.5920%" y="1333" width="0.0120%" height="15" fill="rgb(231,209,44)" fg:x="14460" fg:w="2"/><text x="86.8420%" y="1343.50"></text></g><g><title>down_read (11 samples, 0.07%)</title><rect x="86.6339%" y="1285" width="0.0659%" height="15" fill="rgb(209,80,30)" fg:x="14467" fg:w="11"/><text x="86.8839%" y="1295.50"></text></g><g><title>rwsem_down_read_slowpath (11 samples, 0.07%)</title><rect x="86.6339%" y="1269" width="0.0659%" height="15" fill="rgb(232,9,14)" fg:x="14467" fg:w="11"/><text x="86.8839%" y="1279.50"></text></g><g><title>schedule_preempt_disabled (11 samples, 0.07%)</title><rect x="86.6339%" y="1253" width="0.0659%" height="15" fill="rgb(243,91,43)" fg:x="14467" fg:w="11"/><text x="86.8839%" y="1263.50"></text></g><g><title>schedule (11 samples, 0.07%)</title><rect x="86.6339%" y="1237" width="0.0659%" height="15" fill="rgb(231,90,52)" fg:x="14467" fg:w="11"/><text x="86.8839%" y="1247.50"></text></g><g><title>__schedule (11 samples, 0.07%)</title><rect x="86.6339%" y="1221" width="0.0659%" height="15" fill="rgb(253,192,44)" fg:x="14467" fg:w="11"/><text x="86.8839%" y="1231.50"></text></g><g><title>finish_task_switch.isra.0 (11 samples, 0.07%)</title><rect x="86.6339%" y="1205" width="0.0659%" height="15" fill="rgb(241,66,31)" fg:x="14467" fg:w="11"/><text x="86.8839%" y="1215.50"></text></g><g><title>__perf_event_task_sched_in (11 samples, 0.07%)</title><rect x="86.6339%" y="1189" width="0.0659%" height="15" fill="rgb(235,81,37)" fg:x="14467" fg:w="11"/><text x="86.8839%" y="1199.50"></text></g><g><title>perf_ctx_enable (11 samples, 0.07%)</title><rect x="86.6339%" y="1173" width="0.0659%" height="15" fill="rgb(223,221,9)" fg:x="14467" fg:w="11"/><text x="86.8839%" y="1183.50"></text></g><g><title>x86_pmu_enable (11 samples, 0.07%)</title><rect x="86.6339%" y="1157" width="0.0659%" height="15" fill="rgb(242,180,7)" fg:x="14467" fg:w="11"/><text x="86.8839%" y="1167.50"></text></g><g><title>intel_pmu_enable_all (11 samples, 0.07%)</title><rect x="86.6339%" y="1141" width="0.0659%" height="15" fill="rgb(243,78,19)" fg:x="14467" fg:w="11"/><text x="86.8839%" y="1151.50"></text></g><g><title>native_write_msr (11 samples, 0.07%)</title><rect x="86.6339%" y="1125" width="0.0659%" height="15" fill="rgb(233,23,17)" fg:x="14467" fg:w="11"/><text x="86.8839%" y="1135.50"></text></g><g><title>do_anonymous_page (2 samples, 0.01%)</title><rect x="86.6998%" y="1237" width="0.0120%" height="15" fill="rgb(252,122,45)" fg:x="14478" fg:w="2"/><text x="86.9498%" y="1247.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (2 samples, 0.01%)</title><rect x="86.6998%" y="1221" width="0.0120%" height="15" fill="rgb(247,108,20)" fg:x="14478" fg:w="2"/><text x="86.9498%" y="1231.50"></text></g><g><title>folio_add_lru_vma (2 samples, 0.01%)</title><rect x="86.6998%" y="1205" width="0.0120%" height="15" fill="rgb(235,84,21)" fg:x="14478" fg:w="2"/><text x="86.9498%" y="1215.50"></text></g><g><title>folio_add_lru (2 samples, 0.01%)</title><rect x="86.6998%" y="1189" width="0.0120%" height="15" fill="rgb(247,129,10)" fg:x="14478" fg:w="2"/><text x="86.9498%" y="1199.50"></text></g><g><title>folio_batch_move_lru (2 samples, 0.01%)</title><rect x="86.6998%" y="1173" width="0.0120%" height="15" fill="rgb(208,173,14)" fg:x="14478" fg:w="2"/><text x="86.9498%" y="1183.50"></text></g><g><title>asm_exc_page_fault (18 samples, 0.11%)</title><rect x="86.6160%" y="1333" width="0.1078%" height="15" fill="rgb(236,31,38)" fg:x="14464" fg:w="18"/><text x="86.8660%" y="1343.50"></text></g><g><title>exc_page_fault (15 samples, 0.09%)</title><rect x="86.6339%" y="1317" width="0.0898%" height="15" fill="rgb(232,65,17)" fg:x="14467" fg:w="15"/><text x="86.8839%" y="1327.50"></text></g><g><title>do_user_addr_fault (15 samples, 0.09%)</title><rect x="86.6339%" y="1301" width="0.0898%" height="15" fill="rgb(224,45,49)" fg:x="14467" fg:w="15"/><text x="86.8839%" y="1311.50"></text></g><g><title>handle_mm_fault (4 samples, 0.02%)</title><rect x="86.6998%" y="1285" width="0.0240%" height="15" fill="rgb(225,2,53)" fg:x="14478" fg:w="4"/><text x="86.9498%" y="1295.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="86.6998%" y="1269" width="0.0240%" height="15" fill="rgb(248,210,53)" fg:x="14478" fg:w="4"/><text x="86.9498%" y="1279.50"></text></g><g><title>handle_pte_fault (4 samples, 0.02%)</title><rect x="86.6998%" y="1253" width="0.0240%" height="15" fill="rgb(211,1,30)" fg:x="14478" fg:w="4"/><text x="86.9498%" y="1263.50"></text></g><g><title>do_wp_page (2 samples, 0.01%)</title><rect x="86.7118%" y="1237" width="0.0120%" height="15" fill="rgb(224,96,15)" fg:x="14480" fg:w="2"/><text x="86.9618%" y="1247.50"></text></g><g><title>wp_page_copy (2 samples, 0.01%)</title><rect x="86.7118%" y="1221" width="0.0120%" height="15" fill="rgb(252,45,11)" fg:x="14480" fg:w="2"/><text x="86.9618%" y="1231.50"></text></g><g><title>ptep_clear_flush (2 samples, 0.01%)</title><rect x="86.7118%" y="1205" width="0.0120%" height="15" fill="rgb(220,125,38)" fg:x="14480" fg:w="2"/><text x="86.9618%" y="1215.50"></text></g><g><title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="86.7118%" y="1189" width="0.0120%" height="15" fill="rgb(243,161,33)" fg:x="14480" fg:w="2"/><text x="86.9618%" y="1199.50"></text></g><g><title>native_flush_tlb_multi (2 samples, 0.01%)</title><rect x="86.7118%" y="1173" width="0.0120%" height="15" fill="rgb(248,197,34)" fg:x="14480" fg:w="2"/><text x="86.9618%" y="1183.50"></text></g><g><title>on_each_cpu_cond_mask (2 samples, 0.01%)</title><rect x="86.7118%" y="1157" width="0.0120%" height="15" fill="rgb(228,165,23)" fg:x="14480" fg:w="2"/><text x="86.9618%" y="1167.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="86.7238%" y="1333" width="0.0180%" height="15" fill="rgb(236,94,38)" fg:x="14482" fg:w="3"/><text x="86.9738%" y="1343.50"></text></g><g><title>chacha20::backend::avx2::StateWord::add_epi32 (2 samples, 0.01%)</title><rect x="86.7537%" y="1333" width="0.0120%" height="15" fill="rgb(220,13,23)" fg:x="14487" fg:w="2"/><text x="87.0037%" y="1343.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.01%)</title><rect x="86.7537%" y="1317" width="0.0120%" height="15" fill="rgb(234,26,39)" fg:x="14487" fg:w="2"/><text x="87.0037%" y="1327.50"></text></g><g><title>chacha20::backend::avx2::StateWord::rol (6 samples, 0.04%)</title><rect x="86.7657%" y="1333" width="0.0359%" height="15" fill="rgb(205,117,44)" fg:x="14489" fg:w="6"/><text x="87.0157%" y="1343.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (6 samples, 0.04%)</title><rect x="86.7657%" y="1317" width="0.0359%" height="15" fill="rgb(250,42,2)" fg:x="14489" fg:w="6"/><text x="87.0157%" y="1327.50"></text></g><g><title>chacha20::backend::avx2::StateWord::rol_8 (2 samples, 0.01%)</title><rect x="86.8016%" y="1333" width="0.0120%" height="15" fill="rgb(223,83,14)" fg:x="14495" fg:w="2"/><text x="87.0516%" y="1343.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.01%)</title><rect x="86.8016%" y="1317" width="0.0120%" height="15" fill="rgb(241,147,50)" fg:x="14495" fg:w="2"/><text x="87.0516%" y="1327.50"></text></g><g><title>chacha20::backend::avx2::StateWord::xor (3 samples, 0.02%)</title><rect x="86.8196%" y="1333" width="0.0180%" height="15" fill="rgb(218,90,6)" fg:x="14498" fg:w="3"/><text x="87.0696%" y="1343.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.02%)</title><rect x="86.8196%" y="1317" width="0.0180%" height="15" fill="rgb(210,191,5)" fg:x="14498" fg:w="3"/><text x="87.0696%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (5 samples, 0.03%)</title><rect x="86.8375%" y="1317" width="0.0299%" height="15" fill="rgb(225,139,19)" fg:x="14501" fg:w="5"/><text x="87.0875%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (4 samples, 0.02%)</title><rect x="86.8675%" y="1317" width="0.0240%" height="15" fill="rgb(210,1,33)" fg:x="14506" fg:w="4"/><text x="87.1175%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (7 samples, 0.04%)</title><rect x="86.8914%" y="1317" width="0.0419%" height="15" fill="rgb(213,50,3)" fg:x="14510" fg:w="7"/><text x="87.1414%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (4 samples, 0.02%)</title><rect x="86.9333%" y="1317" width="0.0240%" height="15" fill="rgb(234,227,4)" fg:x="14517" fg:w="4"/><text x="87.1833%" y="1327.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (36 samples, 0.22%)</title><rect x="86.8375%" y="1333" width="0.2156%" height="15" fill="rgb(246,63,5)" fg:x="14501" fg:w="36"/><text x="87.0875%" y="1343.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (16 samples, 0.10%)</title><rect x="86.9573%" y="1317" width="0.0958%" height="15" fill="rgb(245,136,27)" fg:x="14521" fg:w="16"/><text x="87.2073%" y="1327.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (4 samples, 0.02%)</title><rect x="87.0591%" y="1333" width="0.0240%" height="15" fill="rgb(247,199,27)" fg:x="14538" fg:w="4"/><text x="87.3091%" y="1343.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.02%)</title><rect x="87.0591%" y="1317" width="0.0240%" height="15" fill="rgb(252,158,49)" fg:x="14538" fg:w="4"/><text x="87.3091%" y="1327.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.01%)</title><rect x="87.0890%" y="1333" width="0.0120%" height="15" fill="rgb(254,73,1)" fg:x="14543" fg:w="2"/><text x="87.3390%" y="1343.50"></text></g><g><title>core::fmt::Formatter::pad_integral (3 samples, 0.02%)</title><rect x="87.1010%" y="1333" width="0.0180%" height="15" fill="rgb(248,93,19)" fg:x="14545" fg:w="3"/><text x="87.3510%" y="1343.50"></text></g><g><title>core::slice::raw::from_raw_parts (7 samples, 0.04%)</title><rect x="87.1609%" y="1333" width="0.0419%" height="15" fill="rgb(206,67,5)" fg:x="14555" fg:w="7"/><text x="87.4109%" y="1343.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.01%)</title><rect x="87.2208%" y="1301" width="0.0120%" height="15" fill="rgb(209,210,4)" fg:x="14565" fg:w="2"/><text x="87.4708%" y="1311.50"></text></g><g><title>do_futex (2 samples, 0.01%)</title><rect x="87.2208%" y="1285" width="0.0120%" height="15" fill="rgb(214,185,36)" fg:x="14565" fg:w="2"/><text x="87.4708%" y="1295.50"></text></g><g><title>__x64_sys_recvfrom (2 samples, 0.01%)</title><rect x="87.2328%" y="1301" width="0.0120%" height="15" fill="rgb(233,191,26)" fg:x="14567" fg:w="2"/><text x="87.4828%" y="1311.50"></text></g><g><title>__sys_recvfrom (2 samples, 0.01%)</title><rect x="87.2328%" y="1285" width="0.0120%" height="15" fill="rgb(248,94,17)" fg:x="14567" fg:w="2"/><text x="87.4828%" y="1295.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="87.2208%" y="1333" width="0.0359%" height="15" fill="rgb(250,64,4)" fg:x="14565" fg:w="6"/><text x="87.4708%" y="1343.50"></text></g><g><title>do_syscall_64 (6 samples, 0.04%)</title><rect x="87.2208%" y="1317" width="0.0359%" height="15" fill="rgb(218,41,53)" fg:x="14565" fg:w="6"/><text x="87.4708%" y="1327.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (4 samples, 0.02%)</title><rect x="87.2567%" y="1333" width="0.0240%" height="15" fill="rgb(251,176,28)" fg:x="14571" fg:w="4"/><text x="87.5067%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (2 samples, 0.01%)</title><rect x="87.2807%" y="1333" width="0.0120%" height="15" fill="rgb(247,22,9)" fg:x="14575" fg:w="2"/><text x="87.5307%" y="1343.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (2 samples, 0.01%)</title><rect x="87.3226%" y="1333" width="0.0120%" height="15" fill="rgb(218,201,14)" fg:x="14582" fg:w="2"/><text x="87.5726%" y="1343.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.01%)</title><rect x="87.3406%" y="1301" width="0.0120%" height="15" fill="rgb(218,94,10)" fg:x="14585" fg:w="2"/><text x="87.5906%" y="1311.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.02%)</title><rect x="87.3525%" y="1301" width="0.0180%" height="15" fill="rgb(222,183,52)" fg:x="14587" fg:w="3"/><text x="87.6025%" y="1311.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (8 samples, 0.05%)</title><rect x="87.3406%" y="1333" width="0.0479%" height="15" fill="rgb(242,140,25)" fg:x="14585" fg:w="8"/><text x="87.5906%" y="1343.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (8 samples, 0.05%)</title><rect x="87.3406%" y="1317" width="0.0479%" height="15" fill="rgb(235,197,38)" fg:x="14585" fg:w="8"/><text x="87.5906%" y="1327.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (3 samples, 0.02%)</title><rect x="87.3705%" y="1301" width="0.0180%" height="15" fill="rgb(237,136,15)" fg:x="14590" fg:w="3"/><text x="87.6205%" y="1311.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.01%)</title><rect x="87.3885%" y="1333" width="0.0120%" height="15" fill="rgb(223,44,49)" fg:x="14593" fg:w="2"/><text x="87.6385%" y="1343.50"></text></g><g><title>tokio-runtime-w (14,598 samples, 87.42%)</title><rect x="0.0359%" y="1349" width="87.4184%" height="15" fill="rgb(227,71,15)" fg:x="6" fg:w="14598"/><text x="0.2859%" y="1359.50">tokio-runtime-w</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="87.4603%" y="1333" width="0.0240%" height="15" fill="rgb(225,153,20)" fg:x="14605" fg:w="4"/><text x="87.7103%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.05%)</title><rect x="87.4903%" y="1317" width="0.0539%" height="15" fill="rgb(210,190,26)" fg:x="14610" fg:w="9"/><text x="87.7403%" y="1327.50"></text></g><g><title>[[heap]] (19 samples, 0.11%)</title><rect x="87.4843%" y="1333" width="0.1138%" height="15" fill="rgb(223,147,5)" fg:x="14609" fg:w="19"/><text x="87.7343%" y="1343.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (8 samples, 0.05%)</title><rect x="87.5981%" y="1317" width="0.0479%" height="15" fill="rgb(207,14,23)" fg:x="14628" fg:w="8"/><text x="87.8481%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (4 samples, 0.02%)</title><rect x="87.6460%" y="1317" width="0.0240%" height="15" fill="rgb(211,195,53)" fg:x="14636" fg:w="4"/><text x="87.8960%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="87.6819%" y="1317" width="0.0240%" height="15" fill="rgb(237,75,46)" fg:x="14642" fg:w="4"/><text x="87.9319%" y="1327.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.03%)</title><rect x="87.7059%" y="1317" width="0.0299%" height="15" fill="rgb(254,55,14)" fg:x="14646" fg:w="5"/><text x="87.9559%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.05%)</title><rect x="87.7418%" y="1317" width="0.0539%" height="15" fill="rgb(230,185,30)" fg:x="14652" fg:w="9"/><text x="87.9918%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2 samples, 0.01%)</title><rect x="87.7957%" y="1317" width="0.0120%" height="15" fill="rgb(220,14,11)" fg:x="14661" fg:w="2"/><text x="88.0457%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="87.8077%" y="1317" width="0.0240%" height="15" fill="rgb(215,169,44)" fg:x="14663" fg:w="4"/><text x="88.0577%" y="1327.50"></text></g><g><title>&lt;data_encoding::N6 as data_encoding::Static&lt;usize&gt;&gt;::val (2 samples, 0.01%)</title><rect x="87.8316%" y="1317" width="0.0120%" height="15" fill="rgb(253,203,20)" fg:x="14667" fg:w="2"/><text x="88.0816%" y="1327.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="87.8615%" y="1317" width="0.0120%" height="15" fill="rgb(229,225,17)" fg:x="14672" fg:w="2"/><text x="88.1115%" y="1327.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.01%)</title><rect x="87.8855%" y="1317" width="0.0120%" height="15" fill="rgb(236,76,26)" fg:x="14676" fg:w="2"/><text x="88.1355%" y="1327.50"></text></g><g><title>data_encoding::encode_mut::{{closure}} (2 samples, 0.01%)</title><rect x="87.9214%" y="1317" width="0.0120%" height="15" fill="rgb(234,15,30)" fg:x="14682" fg:w="2"/><text x="88.1714%" y="1327.50"></text></g><g><title>data_encoding::order (4 samples, 0.02%)</title><rect x="87.9334%" y="1317" width="0.0240%" height="15" fill="rgb(211,113,48)" fg:x="14684" fg:w="4"/><text x="88.1834%" y="1327.50"></text></g><g><title>[[stack]] (66 samples, 0.40%)</title><rect x="87.5981%" y="1333" width="0.3952%" height="15" fill="rgb(221,31,36)" fg:x="14628" fg:w="66"/><text x="87.8481%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (3 samples, 0.02%)</title><rect x="87.9933%" y="1317" width="0.0180%" height="15" fill="rgb(215,118,52)" fg:x="14694" fg:w="3"/><text x="88.2433%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="88.0113%" y="1317" width="0.0240%" height="15" fill="rgb(241,151,27)" fg:x="14697" fg:w="4"/><text x="88.2613%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="88.0352%" y="1317" width="0.0120%" height="15" fill="rgb(253,51,3)" fg:x="14701" fg:w="2"/><text x="88.2852%" y="1327.50"></text></g><g><title>[anon] (15 samples, 0.09%)</title><rect x="87.9933%" y="1333" width="0.0898%" height="15" fill="rgb(216,201,24)" fg:x="14694" fg:w="15"/><text x="88.2433%" y="1343.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (4 samples, 0.02%)</title><rect x="88.0831%" y="1317" width="0.0240%" height="15" fill="rgb(231,107,4)" fg:x="14709" fg:w="4"/><text x="88.3331%" y="1327.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.01%)</title><rect x="88.1071%" y="1317" width="0.0120%" height="15" fill="rgb(243,97,54)" fg:x="14713" fg:w="2"/><text x="88.3571%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="88.1430%" y="1317" width="0.0120%" height="15" fill="rgb(221,32,51)" fg:x="14719" fg:w="2"/><text x="88.3930%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="88.1550%" y="1317" width="0.0120%" height="15" fill="rgb(218,171,35)" fg:x="14721" fg:w="2"/><text x="88.4050%" y="1327.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u64&gt; as core::ops::arith::Add&gt;::add (14 samples, 0.08%)</title><rect x="88.1670%" y="1317" width="0.0838%" height="15" fill="rgb(214,20,53)" fg:x="14723" fg:w="14"/><text x="88.4170%" y="1327.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u64&gt; as core::ops::arith::Mul&gt;::mul (6 samples, 0.04%)</title><rect x="88.2508%" y="1317" width="0.0359%" height="15" fill="rgb(239,9,52)" fg:x="14737" fg:w="6"/><text x="88.5008%" y="1327.50"></text></g><g><title>&lt;data_encoding::Bt as data_encoding::Static&lt;bool&gt;&gt;::val (2 samples, 0.01%)</title><rect x="88.3047%" y="1317" width="0.0120%" height="15" fill="rgb(215,114,45)" fg:x="14746" fg:w="2"/><text x="88.5547%" y="1327.50"></text></g><g><title>argon2::Argon2::update_address_block (3 samples, 0.02%)</title><rect x="88.3346%" y="1301" width="0.0180%" height="15" fill="rgb(208,118,9)" fg:x="14751" fg:w="3"/><text x="88.5846%" y="1311.50"></text></g><g><title>argon2::block::Block::compress (3 samples, 0.02%)</title><rect x="88.3346%" y="1285" width="0.0180%" height="15" fill="rgb(235,7,39)" fg:x="14751" fg:w="3"/><text x="88.5846%" y="1295.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.02%)</title><rect x="90.3886%" y="1157" width="0.0180%" height="15" fill="rgb(243,225,15)" fg:x="15094" fg:w="3"/><text x="90.6386%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (22 samples, 0.13%)</title><rect x="90.2809%" y="1221" width="0.1317%" height="15" fill="rgb(225,216,18)" fg:x="15076" fg:w="22"/><text x="90.5309%" y="1231.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (6 samples, 0.04%)</title><rect x="90.3767%" y="1205" width="0.0359%" height="15" fill="rgb(233,36,38)" fg:x="15092" fg:w="6"/><text x="90.6267%" y="1215.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (6 samples, 0.04%)</title><rect x="90.3767%" y="1189" width="0.0359%" height="15" fill="rgb(239,88,23)" fg:x="15092" fg:w="6"/><text x="90.6267%" y="1199.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (5 samples, 0.03%)</title><rect x="90.3827%" y="1173" width="0.0299%" height="15" fill="rgb(219,181,35)" fg:x="15093" fg:w="5"/><text x="90.6327%" y="1183.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.01%)</title><rect x="90.4126%" y="1205" width="0.0120%" height="15" fill="rgb(215,18,46)" fg:x="15098" fg:w="2"/><text x="90.6626%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.37%)</title><rect x="90.0653%" y="1253" width="0.3653%" height="15" fill="rgb(241,38,11)" fg:x="15040" fg:w="61"/><text x="90.3153%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (56 samples, 0.34%)</title><rect x="90.0952%" y="1237" width="0.3353%" height="15" fill="rgb(248,169,45)" fg:x="15045" fg:w="56"/><text x="90.3452%" y="1247.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (3 samples, 0.02%)</title><rect x="90.4126%" y="1221" width="0.0180%" height="15" fill="rgb(239,50,49)" fg:x="15098" fg:w="3"/><text x="90.6626%" y="1231.50"></text></g><g><title>&lt;argon2::block::Block as core::ops::bit::BitXorAssign&lt;&amp;argon2::block::Block&gt;&gt;::bitxor_assign (73 samples, 0.44%)</title><rect x="90.0054%" y="1269" width="0.4372%" height="15" fill="rgb(231,96,31)" fg:x="15030" fg:w="73"/><text x="90.2554%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (2 samples, 0.01%)</title><rect x="90.4306%" y="1253" width="0.0120%" height="15" fill="rgb(224,193,37)" fg:x="15101" fg:w="2"/><text x="90.6806%" y="1263.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (2 samples, 0.01%)</title><rect x="90.4306%" y="1237" width="0.0120%" height="15" fill="rgb(227,153,50)" fg:x="15101" fg:w="2"/><text x="90.6806%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (2 samples, 0.01%)</title><rect x="90.4306%" y="1221" width="0.0120%" height="15" fill="rgb(249,228,3)" fg:x="15101" fg:w="2"/><text x="90.6806%" y="1231.50"></text></g><g><title>&lt;argon2::block::Block as core::ops::bit::BitXor&lt;&amp;argon2::block::Block&gt;&gt;::bitxor (75 samples, 0.45%)</title><rect x="90.0054%" y="1285" width="0.4491%" height="15" fill="rgb(219,164,43)" fg:x="15030" fg:w="75"/><text x="90.2554%" y="1295.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="90.4425%" y="1269" width="0.0120%" height="15" fill="rgb(216,45,41)" fg:x="15103" fg:w="2"/><text x="90.6925%" y="1279.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.01%)</title><rect x="90.4904%" y="1269" width="0.0120%" height="15" fill="rgb(210,226,51)" fg:x="15111" fg:w="2"/><text x="90.7404%" y="1279.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="90.4904%" y="1253" width="0.0120%" height="15" fill="rgb(209,117,49)" fg:x="15111" fg:w="2"/><text x="90.7404%" y="1263.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.02%)</title><rect x="90.6701%" y="1173" width="0.0180%" height="15" fill="rgb(206,196,24)" fg:x="15141" fg:w="3"/><text x="90.9201%" y="1183.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.02%)</title><rect x="90.6701%" y="1157" width="0.0180%" height="15" fill="rgb(253,218,3)" fg:x="15141" fg:w="3"/><text x="90.9201%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (14 samples, 0.08%)</title><rect x="90.6102%" y="1237" width="0.0838%" height="15" fill="rgb(252,166,2)" fg:x="15131" fg:w="14"/><text x="90.8602%" y="1247.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (5 samples, 0.03%)</title><rect x="90.6641%" y="1221" width="0.0299%" height="15" fill="rgb(236,218,26)" fg:x="15140" fg:w="5"/><text x="90.9141%" y="1231.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (5 samples, 0.03%)</title><rect x="90.6641%" y="1205" width="0.0299%" height="15" fill="rgb(254,84,19)" fg:x="15140" fg:w="5"/><text x="90.9141%" y="1215.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (5 samples, 0.03%)</title><rect x="90.6641%" y="1189" width="0.0299%" height="15" fill="rgb(219,137,29)" fg:x="15140" fg:w="5"/><text x="90.9141%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.22%)</title><rect x="90.5024%" y="1269" width="0.2156%" height="15" fill="rgb(227,47,52)" fg:x="15113" fg:w="36"/><text x="90.7524%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (35 samples, 0.21%)</title><rect x="90.5084%" y="1253" width="0.2096%" height="15" fill="rgb(229,167,24)" fg:x="15114" fg:w="35"/><text x="90.7584%" y="1263.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (4 samples, 0.02%)</title><rect x="90.6941%" y="1237" width="0.0240%" height="15" fill="rgb(233,164,1)" fg:x="15145" fg:w="4"/><text x="90.9441%" y="1247.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.02%)</title><rect x="90.6941%" y="1221" width="0.0240%" height="15" fill="rgb(218,88,48)" fg:x="15145" fg:w="4"/><text x="90.9441%" y="1231.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="90.7060%" y="1205" width="0.0120%" height="15" fill="rgb(226,214,24)" fg:x="15147" fg:w="2"/><text x="90.9560%" y="1215.50"></text></g><g><title>&lt;argon2::block::Block as core::ops::bit::BitXorAssign&lt;&amp;argon2::block::Block&gt;&gt;::bitxor_assign (45 samples, 0.27%)</title><rect x="90.4545%" y="1285" width="0.2695%" height="15" fill="rgb(233,29,12)" fg:x="15105" fg:w="45"/><text x="90.7045%" y="1295.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u64&gt; as core::ops::arith::Add&gt;::add (45 samples, 0.27%)</title><rect x="90.7240%" y="1285" width="0.2695%" height="15" fill="rgb(219,120,34)" fg:x="15150" fg:w="45"/><text x="90.9740%" y="1295.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u64&gt; as core::ops::arith::Mul&gt;::mul (24 samples, 0.14%)</title><rect x="90.9935%" y="1285" width="0.1437%" height="15" fill="rgb(226,78,44)" fg:x="15195" fg:w="24"/><text x="91.2435%" y="1295.50"></text></g><g><title>&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="91.1372%" y="1285" width="0.0299%" height="15" fill="rgb(240,15,48)" fg:x="15219" fg:w="5"/><text x="91.3872%" y="1295.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::split_at_mut (3 samples, 0.02%)</title><rect x="91.1492%" y="1269" width="0.0180%" height="15" fill="rgb(253,176,7)" fg:x="15221" fg:w="3"/><text x="91.3992%" y="1279.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::split_at_mut_unchecked (3 samples, 0.02%)</title><rect x="91.1492%" y="1253" width="0.0180%" height="15" fill="rgb(206,166,28)" fg:x="15221" fg:w="3"/><text x="91.3992%" y="1263.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.02%)</title><rect x="91.1492%" y="1237" width="0.0180%" height="15" fill="rgb(241,53,51)" fg:x="15221" fg:w="3"/><text x="91.3992%" y="1247.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.02%)</title><rect x="91.1492%" y="1221" width="0.0180%" height="15" fill="rgb(249,112,30)" fg:x="15221" fg:w="3"/><text x="91.3992%" y="1231.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="91.1851%" y="1285" width="0.0180%" height="15" fill="rgb(217,85,30)" fg:x="15227" fg:w="3"/><text x="91.4351%" y="1295.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="91.1851%" y="1269" width="0.0180%" height="15" fill="rgb(233,49,7)" fg:x="15227" fg:w="3"/><text x="91.4351%" y="1279.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_right (27 samples, 0.16%)</title><rect x="91.2031%" y="1285" width="0.1617%" height="15" fill="rgb(234,109,9)" fg:x="15230" fg:w="27"/><text x="91.4531%" y="1295.50"></text></g><g><title>argon2::Argon2::fill_blocks (507 samples, 3.04%)</title><rect x="88.3346%" y="1317" width="3.0361%" height="15" fill="rgb(253,95,22)" fg:x="14751" fg:w="507"/><text x="88.5846%" y="1327.50">arg..</text></g><g><title>argon2::block::Block::compress (504 samples, 3.02%)</title><rect x="88.3526%" y="1301" width="3.0181%" height="15" fill="rgb(233,176,25)" fg:x="14754" fg:w="504"/><text x="88.6026%" y="1311.50">arg..</text></g><g><title>core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (2 samples, 0.01%)</title><rect x="91.3707%" y="1317" width="0.0120%" height="15" fill="rgb(236,33,39)" fg:x="15258" fg:w="2"/><text x="91.6207%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (2 samples, 0.01%)</title><rect x="91.3827%" y="1317" width="0.0120%" height="15" fill="rgb(223,226,42)" fg:x="15260" fg:w="2"/><text x="91.6327%" y="1327.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.01%)</title><rect x="91.3947%" y="1317" width="0.0120%" height="15" fill="rgb(216,99,33)" fg:x="15262" fg:w="2"/><text x="91.6447%" y="1327.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="91.4067%" y="1317" width="0.0120%" height="15" fill="rgb(235,84,23)" fg:x="15264" fg:w="2"/><text x="91.6567%" y="1327.50"></text></g><g><title>data_encoding::chunk_unchecked (3 samples, 0.02%)</title><rect x="91.4246%" y="1317" width="0.0180%" height="15" fill="rgb(232,2,27)" fg:x="15267" fg:w="3"/><text x="91.6746%" y="1327.50"></text></g><g><title>data_encoding::dec (5 samples, 0.03%)</title><rect x="91.4426%" y="1317" width="0.0299%" height="15" fill="rgb(241,23,22)" fg:x="15270" fg:w="5"/><text x="91.6926%" y="1327.50"></text></g><g><title>data_encoding::enc (14 samples, 0.08%)</title><rect x="91.4725%" y="1317" width="0.0838%" height="15" fill="rgb(211,73,27)" fg:x="15275" fg:w="14"/><text x="91.7225%" y="1327.50"></text></g><g><title>data_encoding::encode_block (21 samples, 0.13%)</title><rect x="91.5564%" y="1317" width="0.1258%" height="15" fill="rgb(235,109,49)" fg:x="15289" fg:w="21"/><text x="91.8064%" y="1327.50"></text></g><g><title>data_encoding::encode_len (4 samples, 0.02%)</title><rect x="91.6821%" y="1317" width="0.0240%" height="15" fill="rgb(230,99,29)" fg:x="15310" fg:w="4"/><text x="91.9321%" y="1327.50"></text></g><g><title>data_encoding::encode_mut::{{closure}} (2 samples, 0.01%)</title><rect x="91.7061%" y="1317" width="0.0120%" height="15" fill="rgb(245,199,7)" fg:x="15314" fg:w="2"/><text x="91.9561%" y="1327.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (3 samples, 0.02%)</title><rect x="91.7181%" y="1317" width="0.0180%" height="15" fill="rgb(217,179,10)" fg:x="15316" fg:w="3"/><text x="91.9681%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="91.7360%" y="1317" width="0.0120%" height="15" fill="rgb(254,99,47)" fg:x="15319" fg:w="2"/><text x="91.9860%" y="1327.50"></text></g><g><title>flume::Sender&lt;T&gt;::send (2 samples, 0.01%)</title><rect x="91.7480%" y="917" width="0.0120%" height="15" fill="rgb(251,121,7)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="927.50"></text></g><g><title>flume::Shared&lt;T&gt;::send_sync (2 samples, 0.01%)</title><rect x="91.7480%" y="901" width="0.0120%" height="15" fill="rgb(250,177,26)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="911.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (2 samples, 0.01%)</title><rect x="91.7480%" y="885" width="0.0120%" height="15" fill="rgb(232,88,15)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="895.50"></text></g><g><title>&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (2 samples, 0.01%)</title><rect x="91.7480%" y="869" width="0.0120%" height="15" fill="rgb(251,54,54)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (2 samples, 0.01%)</title><rect x="91.7480%" y="853" width="0.0120%" height="15" fill="rgb(208,177,15)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="863.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (2 samples, 0.01%)</title><rect x="91.7480%" y="837" width="0.0120%" height="15" fill="rgb(205,97,32)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="847.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (2 samples, 0.01%)</title><rect x="91.7480%" y="821" width="0.0120%" height="15" fill="rgb(217,192,13)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="831.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (2 samples, 0.01%)</title><rect x="91.7480%" y="805" width="0.0120%" height="15" fill="rgb(215,163,41)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="815.50"></text></g><g><title>core::task::wake::Waker::wake (2 samples, 0.01%)</title><rect x="91.7480%" y="789" width="0.0120%" height="15" fill="rgb(246,83,29)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="799.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (2 samples, 0.01%)</title><rect x="91.7480%" y="773" width="0.0120%" height="15" fill="rgb(219,2,45)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (2 samples, 0.01%)</title><rect x="91.7480%" y="757" width="0.0120%" height="15" fill="rgb(242,215,33)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="767.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (2 samples, 0.01%)</title><rect x="91.7480%" y="741" width="0.0120%" height="15" fill="rgb(217,1,6)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="751.50"></text></g><g><title>tokio::runtime::task::raw::schedule (2 samples, 0.01%)</title><rect x="91.7480%" y="725" width="0.0120%" height="15" fill="rgb(207,85,52)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="735.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (2 samples, 0.01%)</title><rect x="91.7480%" y="709" width="0.0120%" height="15" fill="rgb(231,171,19)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (2 samples, 0.01%)</title><rect x="91.7480%" y="693" width="0.0120%" height="15" fill="rgb(207,128,4)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="703.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (2 samples, 0.01%)</title><rect x="91.7480%" y="677" width="0.0120%" height="15" fill="rgb(219,208,4)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (2 samples, 0.01%)</title><rect x="91.7480%" y="661" width="0.0120%" height="15" fill="rgb(235,161,42)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked (2 samples, 0.01%)</title><rect x="91.7480%" y="645" width="0.0120%" height="15" fill="rgb(247,218,18)" fg:x="15321" fg:w="2"/><text x="91.9980%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.02%)</title><rect x="91.7480%" y="1317" width="0.0240%" height="15" fill="rgb(232,114,51)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1327.50"></text></g><g><title>tokio::task::local::LocalSet::with::{{closure}} (4 samples, 0.02%)</title><rect x="91.7480%" y="1301" width="0.0240%" height="15" fill="rgb(222,95,3)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1311.50"></text></g><g><title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (4 samples, 0.02%)</title><rect x="91.7480%" y="1285" width="0.0240%" height="15" fill="rgb(240,65,29)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1295.50"></text></g><g><title>tokio::task::local::LocalSet::tick (4 samples, 0.02%)</title><rect x="91.7480%" y="1269" width="0.0240%" height="15" fill="rgb(249,209,20)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1279.50"></text></g><g><title>tokio::runtime::coop::budget (4 samples, 0.02%)</title><rect x="91.7480%" y="1253" width="0.0240%" height="15" fill="rgb(241,48,37)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1263.50"></text></g><g><title>tokio::runtime::coop::with_budget (4 samples, 0.02%)</title><rect x="91.7480%" y="1237" width="0.0240%" height="15" fill="rgb(230,140,42)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1247.50"></text></g><g><title>tokio::task::local::LocalSet::tick::{{closure}} (4 samples, 0.02%)</title><rect x="91.7480%" y="1221" width="0.0240%" height="15" fill="rgb(230,176,45)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1231.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (4 samples, 0.02%)</title><rect x="91.7480%" y="1205" width="0.0240%" height="15" fill="rgb(245,112,21)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1215.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (4 samples, 0.02%)</title><rect x="91.7480%" y="1189" width="0.0240%" height="15" fill="rgb(207,183,35)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1199.50"></text></g><g><title>tokio::runtime::task::raw::poll (4 samples, 0.02%)</title><rect x="91.7480%" y="1173" width="0.0240%" height="15" fill="rgb(227,44,33)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4 samples, 0.02%)</title><rect x="91.7480%" y="1157" width="0.0240%" height="15" fill="rgb(246,120,21)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (4 samples, 0.02%)</title><rect x="91.7480%" y="1141" width="0.0240%" height="15" fill="rgb(235,57,52)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (4 samples, 0.02%)</title><rect x="91.7480%" y="1125" width="0.0240%" height="15" fill="rgb(238,84,10)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.02%)</title><rect x="91.7480%" y="1109" width="0.0240%" height="15" fill="rgb(251,200,32)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1119.50"></text></g><g><title>std::panicking::try (4 samples, 0.02%)</title><rect x="91.7480%" y="1093" width="0.0240%" height="15" fill="rgb(247,159,13)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1103.50"></text></g><g><title>__rust_try (4 samples, 0.02%)</title><rect x="91.7480%" y="1077" width="0.0240%" height="15" fill="rgb(238,64,4)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.02%)</title><rect x="91.7480%" y="1061" width="0.0240%" height="15" fill="rgb(221,131,51)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1071.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.02%)</title><rect x="91.7480%" y="1045" width="0.0240%" height="15" fill="rgb(242,5,29)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1055.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (4 samples, 0.02%)</title><rect x="91.7480%" y="1029" width="0.0240%" height="15" fill="rgb(214,130,32)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1039.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (4 samples, 0.02%)</title><rect x="91.7480%" y="1013" width="0.0240%" height="15" fill="rgb(244,210,16)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1023.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4 samples, 0.02%)</title><rect x="91.7480%" y="997" width="0.0240%" height="15" fill="rgb(234,48,26)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="1007.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (4 samples, 0.02%)</title><rect x="91.7480%" y="981" width="0.0240%" height="15" fill="rgb(231,82,38)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="991.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="91.7480%" y="965" width="0.0240%" height="15" fill="rgb(254,128,41)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="975.50"></text></g><g><title>veilid_server::server::run_veilid_server_internal::{{closure}}::{{closure}} (4 samples, 0.02%)</title><rect x="91.7480%" y="949" width="0.0240%" height="15" fill="rgb(212,73,49)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="959.50"></text></g><g><title>veilid_server::client_api::ClientApi::handle_update (4 samples, 0.02%)</title><rect x="91.7480%" y="933" width="0.0240%" height="15" fill="rgb(205,62,54)" fg:x="15321" fg:w="4"/><text x="91.9980%" y="943.50"></text></g><g><title>veilid_core::veilid_api::serialize_helpers::serialize_json::serialize_json (2 samples, 0.01%)</title><rect x="91.7600%" y="917" width="0.0120%" height="15" fill="rgb(228,0,8)" fg:x="15323" fg:w="2"/><text x="92.0100%" y="927.50"></text></g><g><title>serde_json::ser::to_string (2 samples, 0.01%)</title><rect x="91.7600%" y="901" width="0.0120%" height="15" fill="rgb(251,28,17)" fg:x="15323" fg:w="2"/><text x="92.0100%" y="911.50"></text></g><g><title>serde_json::ser::to_vec (2 samples, 0.01%)</title><rect x="91.7600%" y="885" width="0.0120%" height="15" fill="rgb(238,105,27)" fg:x="15323" fg:w="2"/><text x="92.0100%" y="895.50"></text></g><g><title>serde_json::ser::to_writer (2 samples, 0.01%)</title><rect x="91.7600%" y="869" width="0.0120%" height="15" fill="rgb(237,216,33)" fg:x="15323" fg:w="2"/><text x="92.0100%" y="879.50"></text></g><g><title>veilid_core::veilid_api::json_api::_::&lt;impl serde::ser::Serialize for veilid_core::veilid_api::json_api::RecvMessage&gt;::serialize (2 samples, 0.01%)</title><rect x="91.7600%" y="853" width="0.0120%" height="15" fill="rgb(229,228,25)" fg:x="15323" fg:w="2"/><text x="92.0100%" y="863.50"></text></g><g><title>serde::__private::ser::serialize_tagged_newtype (2 samples, 0.01%)</title><rect x="91.7600%" y="837" width="0.0120%" height="15" fill="rgb(233,75,23)" fg:x="15323" fg:w="2"/><text x="92.0100%" y="847.50"></text></g><g><title>veilid_core::veilid_api::types::veilid_state::_::&lt;impl serde::ser::Serialize for veilid_core::veilid_api::types::veilid_state::VeilidUpdate&gt;::serialize (2 samples, 0.01%)</title><rect x="91.7600%" y="821" width="0.0120%" height="15" fill="rgb(231,207,16)" fg:x="15323" fg:w="2"/><text x="92.0100%" y="831.50"></text></g><g><title>serde::__private::ser::serialize_tagged_newtype (2 samples, 0.01%)</title><rect x="91.7600%" y="805" width="0.0120%" height="15" fill="rgb(231,191,45)" fg:x="15323" fg:w="2"/><text x="92.0100%" y="815.50"></text></g><g><title>tokio::runtime::coop::budget (2 samples, 0.01%)</title><rect x="91.7839%" y="1301" width="0.0120%" height="15" fill="rgb(224,133,17)" fg:x="15327" fg:w="2"/><text x="92.0339%" y="1311.50"></text></g><g><title>tokio::runtime::coop::with_budget (2 samples, 0.01%)</title><rect x="91.7839%" y="1285" width="0.0120%" height="15" fill="rgb(209,178,27)" fg:x="15327" fg:w="2"/><text x="92.0339%" y="1295.50"></text></g><g><title>futex_wait_queue (42 samples, 0.25%)</title><rect x="91.8019%" y="981" width="0.2515%" height="15" fill="rgb(218,37,11)" fg:x="15330" fg:w="42"/><text x="92.0519%" y="991.50"></text></g><g><title>schedule (42 samples, 0.25%)</title><rect x="91.8019%" y="965" width="0.2515%" height="15" fill="rgb(251,226,25)" fg:x="15330" fg:w="42"/><text x="92.0519%" y="975.50"></text></g><g><title>__schedule (42 samples, 0.25%)</title><rect x="91.8019%" y="949" width="0.2515%" height="15" fill="rgb(209,222,27)" fg:x="15330" fg:w="42"/><text x="92.0519%" y="959.50"></text></g><g><title>finish_task_switch.isra.0 (40 samples, 0.24%)</title><rect x="91.8139%" y="933" width="0.2395%" height="15" fill="rgb(238,22,21)" fg:x="15332" fg:w="40"/><text x="92.0639%" y="943.50"></text></g><g><title>__perf_event_task_sched_in (40 samples, 0.24%)</title><rect x="91.8139%" y="917" width="0.2395%" height="15" fill="rgb(233,161,25)" fg:x="15332" fg:w="40"/><text x="92.0639%" y="927.50"></text></g><g><title>perf_ctx_enable (40 samples, 0.24%)</title><rect x="91.8139%" y="901" width="0.2395%" height="15" fill="rgb(226,122,53)" fg:x="15332" fg:w="40"/><text x="92.0639%" y="911.50"></text></g><g><title>x86_pmu_enable (40 samples, 0.24%)</title><rect x="91.8139%" y="885" width="0.2395%" height="15" fill="rgb(220,123,17)" fg:x="15332" fg:w="40"/><text x="92.0639%" y="895.50"></text></g><g><title>intel_pmu_enable_all (40 samples, 0.24%)</title><rect x="91.8139%" y="869" width="0.2395%" height="15" fill="rgb(230,224,35)" fg:x="15332" fg:w="40"/><text x="92.0639%" y="879.50"></text></g><g><title>native_write_msr (40 samples, 0.24%)</title><rect x="91.8139%" y="853" width="0.2395%" height="15" fill="rgb(246,83,8)" fg:x="15332" fg:w="40"/><text x="92.0639%" y="863.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (48 samples, 0.29%)</title><rect x="91.7720%" y="1317" width="0.2874%" height="15" fill="rgb(230,214,17)" fg:x="15325" fg:w="48"/><text x="92.0220%" y="1327.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park (44 samples, 0.26%)</title><rect x="91.7959%" y="1301" width="0.2635%" height="15" fill="rgb(222,97,18)" fg:x="15329" fg:w="44"/><text x="92.0459%" y="1311.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::with_current (44 samples, 0.26%)</title><rect x="91.7959%" y="1285" width="0.2635%" height="15" fill="rgb(206,79,1)" fg:x="15329" fg:w="44"/><text x="92.0459%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (44 samples, 0.26%)</title><rect x="91.7959%" y="1269" width="0.2635%" height="15" fill="rgb(214,121,34)" fg:x="15329" fg:w="44"/><text x="92.0459%" y="1279.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::with_current::{{closure}} (43 samples, 0.26%)</title><rect x="91.8019%" y="1253" width="0.2575%" height="15" fill="rgb(249,199,46)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1263.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park::{{closure}} (43 samples, 0.26%)</title><rect x="91.8019%" y="1237" width="0.2575%" height="15" fill="rgb(214,222,46)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1247.50"></text></g><g><title>tokio::runtime::park::Inner::park (43 samples, 0.26%)</title><rect x="91.8019%" y="1221" width="0.2575%" height="15" fill="rgb(248,168,30)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1231.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (43 samples, 0.26%)</title><rect x="91.8019%" y="1205" width="0.2575%" height="15" fill="rgb(226,14,28)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1215.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (43 samples, 0.26%)</title><rect x="91.8019%" y="1189" width="0.2575%" height="15" fill="rgb(253,123,1)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1199.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (43 samples, 0.26%)</title><rect x="91.8019%" y="1173" width="0.2575%" height="15" fill="rgb(225,24,42)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1183.50"></text></g><g><title>parking_lot_core::parking_lot::park (43 samples, 0.26%)</title><rect x="91.8019%" y="1157" width="0.2575%" height="15" fill="rgb(216,161,37)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (43 samples, 0.26%)</title><rect x="91.8019%" y="1141" width="0.2575%" height="15" fill="rgb(251,164,26)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (43 samples, 0.26%)</title><rect x="91.8019%" y="1125" width="0.2575%" height="15" fill="rgb(219,177,3)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1135.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (43 samples, 0.26%)</title><rect x="91.8019%" y="1109" width="0.2575%" height="15" fill="rgb(222,65,0)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1119.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (43 samples, 0.26%)</title><rect x="91.8019%" y="1093" width="0.2575%" height="15" fill="rgb(223,69,54)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1103.50"></text></g><g><title>syscall (43 samples, 0.26%)</title><rect x="91.8019%" y="1077" width="0.2575%" height="15" fill="rgb(235,30,27)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (43 samples, 0.26%)</title><rect x="91.8019%" y="1061" width="0.2575%" height="15" fill="rgb(220,183,50)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1071.50"></text></g><g><title>do_syscall_64 (43 samples, 0.26%)</title><rect x="91.8019%" y="1045" width="0.2575%" height="15" fill="rgb(248,198,15)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1055.50"></text></g><g><title>__x64_sys_futex (43 samples, 0.26%)</title><rect x="91.8019%" y="1029" width="0.2575%" height="15" fill="rgb(222,211,4)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1039.50"></text></g><g><title>do_futex (43 samples, 0.26%)</title><rect x="91.8019%" y="1013" width="0.2575%" height="15" fill="rgb(214,102,34)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1023.50"></text></g><g><title>futex_wait (43 samples, 0.26%)</title><rect x="91.8019%" y="997" width="0.2575%" height="15" fill="rgb(245,92,5)" fg:x="15330" fg:w="43"/><text x="92.0519%" y="1007.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="92.0834%" y="869" width="0.0120%" height="15" fill="rgb(252,72,51)" fg:x="15377" fg:w="2"/><text x="92.3334%" y="879.50"></text></g><g><title>veilid_server::server::run_veilid_server_internal::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="92.0834%" y="853" width="0.0120%" height="15" fill="rgb(252,208,19)" fg:x="15377" fg:w="2"/><text x="92.3334%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="92.1013%" y="853" width="0.0120%" height="15" fill="rgb(211,69,7)" fg:x="15380" fg:w="2"/><text x="92.3513%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="92.1013%" y="837" width="0.0120%" height="15" fill="rgb(211,27,16)" fg:x="15380" fg:w="2"/><text x="92.3513%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="92.1013%" y="821" width="0.0120%" height="15" fill="rgb(219,216,14)" fg:x="15380" fg:w="2"/><text x="92.3513%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="92.1013%" y="805" width="0.0120%" height="15" fill="rgb(219,71,8)" fg:x="15380" fg:w="2"/><text x="92.3513%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="92.1013%" y="789" width="0.0120%" height="15" fill="rgb(223,170,53)" fg:x="15380" fg:w="2"/><text x="92.3513%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.01%)</title><rect x="92.1013%" y="773" width="0.0120%" height="15" fill="rgb(246,21,26)" fg:x="15380" fg:w="2"/><text x="92.3513%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="92.1013%" y="757" width="0.0120%" height="15" fill="rgb(248,20,46)" fg:x="15380" fg:w="2"/><text x="92.3513%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="92.1013%" y="741" width="0.0120%" height="15" fill="rgb(252,94,11)" fg:x="15380" fg:w="2"/><text x="92.3513%" y="751.50"></text></g><g><title>flume::Sender&lt;T&gt;::send (4 samples, 0.02%)</title><rect x="92.1133%" y="853" width="0.0240%" height="15" fill="rgb(236,163,8)" fg:x="15382" fg:w="4"/><text x="92.3633%" y="863.50"></text></g><g><title>flume::Shared&lt;T&gt;::send_sync (4 samples, 0.02%)</title><rect x="92.1133%" y="837" width="0.0240%" height="15" fill="rgb(217,221,45)" fg:x="15382" fg:w="4"/><text x="92.3633%" y="847.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (3 samples, 0.02%)</title><rect x="92.1193%" y="821" width="0.0180%" height="15" fill="rgb(238,38,17)" fg:x="15383" fg:w="3"/><text x="92.3693%" y="831.50"></text></g><g><title>&lt;serde::__private::ser::TaggedSerializer&lt;S&gt; as serde::ser::Serializer&gt;::serialize_struct (2 samples, 0.01%)</title><rect x="92.1432%" y="709" width="0.0120%" height="15" fill="rgb(242,210,23)" fg:x="15387" fg:w="2"/><text x="92.3932%" y="719.50"></text></g><g><title>&lt;serde::__private::ser::TaggedSerializer&lt;S&gt; as serde::ser::Serializer&gt;::serialize_struct (2 samples, 0.01%)</title><rect x="92.1432%" y="693" width="0.0120%" height="15" fill="rgb(250,86,53)" fg:x="15387" fg:w="2"/><text x="92.3932%" y="703.50"></text></g><g><title>__libc_calloc (2 samples, 0.01%)</title><rect x="92.1732%" y="501" width="0.0120%" height="15" fill="rgb(223,168,25)" fg:x="15392" fg:w="2"/><text x="92.4232%" y="511.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="92.1732%" y="485" width="0.0120%" height="15" fill="rgb(251,189,4)" fg:x="15392" fg:w="2"/><text x="92.4232%" y="495.50"></text></g><g><title>unlink_chunk (2 samples, 0.01%)</title><rect x="92.1732%" y="469" width="0.0120%" height="15" fill="rgb(245,19,28)" fg:x="15392" fg:w="2"/><text x="92.4232%" y="479.50"></text></g><g><title>data_encoding::Encoding::encode (5 samples, 0.03%)</title><rect x="92.1672%" y="629" width="0.0299%" height="15" fill="rgb(207,10,34)" fg:x="15391" fg:w="5"/><text x="92.4172%" y="639.50"></text></g><g><title>alloc::vec::from_elem (5 samples, 0.03%)</title><rect x="92.1672%" y="613" width="0.0299%" height="15" fill="rgb(235,153,31)" fg:x="15391" fg:w="5"/><text x="92.4172%" y="623.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (5 samples, 0.03%)</title><rect x="92.1672%" y="597" width="0.0299%" height="15" fill="rgb(228,72,37)" fg:x="15391" fg:w="5"/><text x="92.4172%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (5 samples, 0.03%)</title><rect x="92.1672%" y="581" width="0.0299%" height="15" fill="rgb(215,15,16)" fg:x="15391" fg:w="5"/><text x="92.4172%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.03%)</title><rect x="92.1672%" y="565" width="0.0299%" height="15" fill="rgb(250,119,29)" fg:x="15391" fg:w="5"/><text x="92.4172%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (4 samples, 0.02%)</title><rect x="92.1732%" y="549" width="0.0240%" height="15" fill="rgb(214,59,1)" fg:x="15392" fg:w="4"/><text x="92.4232%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="92.1732%" y="533" width="0.0240%" height="15" fill="rgb(223,109,25)" fg:x="15392" fg:w="4"/><text x="92.4232%" y="543.50"></text></g><g><title>alloc::alloc::alloc_zeroed (4 samples, 0.02%)</title><rect x="92.1732%" y="517" width="0.0240%" height="15" fill="rgb(230,198,22)" fg:x="15392" fg:w="4"/><text x="92.4232%" y="527.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="92.1852%" y="501" width="0.0120%" height="15" fill="rgb(245,184,46)" fg:x="15394" fg:w="2"/><text x="92.4352%" y="511.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.08%)</title><rect x="92.9696%" y="549" width="0.0778%" height="15" fill="rgb(253,73,16)" fg:x="15525" fg:w="13"/><text x="93.2196%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (5 samples, 0.03%)</title><rect x="93.1613%" y="533" width="0.0299%" height="15" fill="rgb(206,94,45)" fg:x="15557" fg:w="5"/><text x="93.4113%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null::runtime_impl (2 samples, 0.01%)</title><rect x="93.1792%" y="517" width="0.0120%" height="15" fill="rgb(236,83,27)" fg:x="15560" fg:w="2"/><text x="93.4292%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::addr (2 samples, 0.01%)</title><rect x="93.1792%" y="501" width="0.0120%" height="15" fill="rgb(220,196,8)" fg:x="15560" fg:w="2"/><text x="93.4292%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (4 samples, 0.02%)</title><rect x="93.1912%" y="533" width="0.0240%" height="15" fill="rgb(254,185,14)" fg:x="15562" fg:w="4"/><text x="93.4412%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.02%)</title><rect x="93.3110%" y="517" width="0.0240%" height="15" fill="rgb(226,50,22)" fg:x="15582" fg:w="4"/><text x="93.5610%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.02%)</title><rect x="93.3110%" y="501" width="0.0240%" height="15" fill="rgb(253,147,0)" fg:x="15582" fg:w="4"/><text x="93.5610%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 samples, 0.61%)</title><rect x="92.7301%" y="565" width="0.6108%" height="15" fill="rgb(252,46,33)" fg:x="15485" fg:w="102"/><text x="92.9801%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.29%)</title><rect x="93.0475%" y="549" width="0.2934%" height="15" fill="rgb(242,22,54)" fg:x="15538" fg:w="49"/><text x="93.2975%" y="559.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (20 samples, 0.12%)</title><rect x="93.2212%" y="533" width="0.1198%" height="15" fill="rgb(223,178,32)" fg:x="15567" fg:w="20"/><text x="93.4712%" y="543.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (199 samples, 1.19%)</title><rect x="92.1552%" y="709" width="1.1917%" height="15" fill="rgb(214,106,53)" fg:x="15389" fg:w="199"/><text x="92.4052%" y="719.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (199 samples, 1.19%)</title><rect x="92.1552%" y="693" width="1.1917%" height="15" fill="rgb(232,65,50)" fg:x="15389" fg:w="199"/><text x="92.4052%" y="703.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (198 samples, 1.19%)</title><rect x="92.1612%" y="677" width="1.1857%" height="15" fill="rgb(231,110,28)" fg:x="15390" fg:w="198"/><text x="92.4112%" y="687.50"></text></g><g><title>&lt;veilid_core::veilid_api::types::app_message_call::_::&lt;impl serde::ser::Serialize for veilid_core::veilid_api::types::app_message_call::VeilidAppMessage&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (198 samples, 1.19%)</title><rect x="92.1612%" y="661" width="1.1857%" height="15" fill="rgb(216,71,40)" fg:x="15390" fg:w="198"/><text x="92.4112%" y="671.50"></text></g><g><title>veilid_core::veilid_api::serialize_helpers::serialize_json::json_as_base64::serialize (198 samples, 1.19%)</title><rect x="92.1612%" y="645" width="1.1857%" height="15" fill="rgb(229,89,53)" fg:x="15390" fg:w="198"/><text x="92.4112%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (192 samples, 1.15%)</title><rect x="92.1971%" y="629" width="1.1498%" height="15" fill="rgb(210,124,14)" fg:x="15396" fg:w="192"/><text x="92.4471%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (192 samples, 1.15%)</title><rect x="92.1971%" y="613" width="1.1498%" height="15" fill="rgb(236,213,6)" fg:x="15396" fg:w="192"/><text x="92.4471%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (192 samples, 1.15%)</title><rect x="92.1971%" y="597" width="1.1498%" height="15" fill="rgb(228,41,5)" fg:x="15396" fg:w="192"/><text x="92.4471%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (192 samples, 1.15%)</title><rect x="92.1971%" y="581" width="1.1498%" height="15" fill="rgb(221,167,25)" fg:x="15396" fg:w="192"/><text x="92.4471%" y="591.50"></text></g><g><title>tokio::task::local::LocalSet::run_until::{{closure}} (213 samples, 1.28%)</title><rect x="92.0774%" y="1317" width="1.2755%" height="15" fill="rgb(228,144,37)" fg:x="15376" fg:w="213"/><text x="92.3274%" y="1327.50"></text></g><g><title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll (213 samples, 1.28%)</title><rect x="92.0774%" y="1301" width="1.2755%" height="15" fill="rgb(227,189,38)" fg:x="15376" fg:w="213"/><text x="92.3274%" y="1311.50"></text></g><g><title>tokio::task::local::LocalSet::with (213 samples, 1.28%)</title><rect x="92.0774%" y="1285" width="1.2755%" height="15" fill="rgb(218,8,2)" fg:x="15376" fg:w="213"/><text x="92.3274%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (213 samples, 1.28%)</title><rect x="92.0774%" y="1269" width="1.2755%" height="15" fill="rgb(209,61,28)" fg:x="15376" fg:w="213"/><text x="92.3274%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (213 samples, 1.28%)</title><rect x="92.0774%" y="1253" width="1.2755%" height="15" fill="rgb(233,140,39)" fg:x="15376" fg:w="213"/><text x="92.3274%" y="1263.50"></text></g><g><title>tokio::task::local::LocalSet::with::{{closure}} (213 samples, 1.28%)</title><rect x="92.0774%" y="1237" width="1.2755%" height="15" fill="rgb(251,66,48)" fg:x="15376" fg:w="213"/><text x="92.3274%" y="1247.50"></text></g><g><title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (213 samples, 1.28%)</title><rect x="92.0774%" y="1221" width="1.2755%" height="15" fill="rgb(210,44,45)" fg:x="15376" fg:w="213"/><text x="92.3274%" y="1231.50"></text></g><g><title>tokio::task::local::LocalSet::tick (212 samples, 1.27%)</title><rect x="92.0834%" y="1205" width="1.2695%" height="15" fill="rgb(214,136,46)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="1215.50"></text></g><g><title>tokio::runtime::coop::budget (212 samples, 1.27%)</title><rect x="92.0834%" y="1189" width="1.2695%" height="15" fill="rgb(207,130,50)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="1199.50"></text></g><g><title>tokio::runtime::coop::with_budget (212 samples, 1.27%)</title><rect x="92.0834%" y="1173" width="1.2695%" height="15" fill="rgb(228,102,49)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="1183.50"></text></g><g><title>tokio::task::local::LocalSet::tick::{{closure}} (212 samples, 1.27%)</title><rect x="92.0834%" y="1157" width="1.2695%" height="15" fill="rgb(253,55,1)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="1167.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (212 samples, 1.27%)</title><rect x="92.0834%" y="1141" width="1.2695%" height="15" fill="rgb(238,222,9)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="1151.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (212 samples, 1.27%)</title><rect x="92.0834%" y="1125" width="1.2695%" height="15" fill="rgb(246,99,6)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="1135.50"></text></g><g><title>tokio::runtime::task::raw::poll (212 samples, 1.27%)</title><rect x="92.0834%" y="1109" width="1.2695%" height="15" fill="rgb(219,110,26)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (212 samples, 1.27%)</title><rect x="92.0834%" y="1093" width="1.2695%" height="15" fill="rgb(239,160,33)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (212 samples, 1.27%)</title><rect x="92.0834%" y="1077" width="1.2695%" height="15" fill="rgb(220,202,23)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (212 samples, 1.27%)</title><rect x="92.0834%" y="1061" width="1.2695%" height="15" fill="rgb(208,80,26)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (212 samples, 1.27%)</title><rect x="92.0834%" y="1045" width="1.2695%" height="15" fill="rgb(243,85,7)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="1055.50"></text></g><g><title>std::panicking::try (212 samples, 1.27%)</title><rect x="92.0834%" y="1029" width="1.2695%" height="15" fill="rgb(228,77,47)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="1039.50"></text></g><g><title>__rust_try (212 samples, 1.27%)</title><rect x="92.0834%" y="1013" width="1.2695%" height="15" fill="rgb(212,226,8)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (212 samples, 1.27%)</title><rect x="92.0834%" y="997" width="1.2695%" height="15" fill="rgb(241,120,54)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (212 samples, 1.27%)</title><rect x="92.0834%" y="981" width="1.2695%" height="15" fill="rgb(226,80,16)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="991.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (212 samples, 1.27%)</title><rect x="92.0834%" y="965" width="1.2695%" height="15" fill="rgb(240,76,13)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="975.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (212 samples, 1.27%)</title><rect x="92.0834%" y="949" width="1.2695%" height="15" fill="rgb(252,74,8)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="959.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (212 samples, 1.27%)</title><rect x="92.0834%" y="933" width="1.2695%" height="15" fill="rgb(244,155,2)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="943.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (212 samples, 1.27%)</title><rect x="92.0834%" y="917" width="1.2695%" height="15" fill="rgb(215,81,35)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="927.50"></text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (212 samples, 1.27%)</title><rect x="92.0834%" y="901" width="1.2695%" height="15" fill="rgb(206,55,2)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="911.50"></text></g><g><title>veilid_server::server::run_veilid_server_internal::{{closure}}::{{closure}} (212 samples, 1.27%)</title><rect x="92.0834%" y="885" width="1.2695%" height="15" fill="rgb(231,2,34)" fg:x="15377" fg:w="212"/><text x="92.3334%" y="895.50"></text></g><g><title>veilid_server::client_api::ClientApi::handle_update (210 samples, 1.26%)</title><rect x="92.0953%" y="869" width="1.2576%" height="15" fill="rgb(242,176,48)" fg:x="15379" fg:w="210"/><text x="92.3453%" y="879.50"></text></g><g><title>veilid_core::veilid_api::serialize_helpers::serialize_json::serialize_json (203 samples, 1.22%)</title><rect x="92.1373%" y="853" width="1.2156%" height="15" fill="rgb(249,31,36)" fg:x="15386" fg:w="203"/><text x="92.3873%" y="863.50"></text></g><g><title>serde_json::ser::to_string (203 samples, 1.22%)</title><rect x="92.1373%" y="837" width="1.2156%" height="15" fill="rgb(205,18,17)" fg:x="15386" fg:w="203"/><text x="92.3873%" y="847.50"></text></g><g><title>serde_json::ser::to_vec (203 samples, 1.22%)</title><rect x="92.1373%" y="821" width="1.2156%" height="15" fill="rgb(254,130,5)" fg:x="15386" fg:w="203"/><text x="92.3873%" y="831.50"></text></g><g><title>serde_json::ser::to_writer (202 samples, 1.21%)</title><rect x="92.1432%" y="805" width="1.2097%" height="15" fill="rgb(229,42,45)" fg:x="15387" fg:w="202"/><text x="92.3932%" y="815.50"></text></g><g><title>veilid_core::veilid_api::json_api::_::&lt;impl serde::ser::Serialize for veilid_core::veilid_api::json_api::RecvMessage&gt;::serialize (202 samples, 1.21%)</title><rect x="92.1432%" y="789" width="1.2097%" height="15" fill="rgb(245,95,25)" fg:x="15387" fg:w="202"/><text x="92.3932%" y="799.50"></text></g><g><title>serde::__private::ser::serialize_tagged_newtype (202 samples, 1.21%)</title><rect x="92.1432%" y="773" width="1.2097%" height="15" fill="rgb(249,193,38)" fg:x="15387" fg:w="202"/><text x="92.3932%" y="783.50"></text></g><g><title>veilid_core::veilid_api::types::veilid_state::_::&lt;impl serde::ser::Serialize for veilid_core::veilid_api::types::veilid_state::VeilidUpdate&gt;::serialize (202 samples, 1.21%)</title><rect x="92.1432%" y="757" width="1.2097%" height="15" fill="rgb(241,140,43)" fg:x="15387" fg:w="202"/><text x="92.3932%" y="767.50"></text></g><g><title>serde::__private::ser::serialize_tagged_newtype (202 samples, 1.21%)</title><rect x="92.1432%" y="741" width="1.2097%" height="15" fill="rgb(245,78,48)" fg:x="15387" fg:w="202"/><text x="92.3932%" y="751.50"></text></g><g><title>veilid_core::veilid_api::types::app_message_call::_::&lt;impl serde::ser::Serialize for veilid_core::veilid_api::types::app_message_call::VeilidAppMessage&gt;::serialize (202 samples, 1.21%)</title><rect x="92.1432%" y="725" width="1.2097%" height="15" fill="rgb(214,92,39)" fg:x="15387" fg:w="202"/><text x="92.3932%" y="735.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.02%)</title><rect x="93.3649%" y="1109" width="0.0240%" height="15" fill="rgb(211,189,14)" fg:x="15591" fg:w="4"/><text x="93.6149%" y="1119.50"></text></g><g><title>handle_mm_fault (4 samples, 0.02%)</title><rect x="93.3649%" y="1093" width="0.0240%" height="15" fill="rgb(218,7,24)" fg:x="15591" fg:w="4"/><text x="93.6149%" y="1103.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="93.3649%" y="1077" width="0.0240%" height="15" fill="rgb(224,200,49)" fg:x="15591" fg:w="4"/><text x="93.6149%" y="1087.50"></text></g><g><title>handle_pte_fault (3 samples, 0.02%)</title><rect x="93.3709%" y="1061" width="0.0180%" height="15" fill="rgb(218,210,14)" fg:x="15592" fg:w="3"/><text x="93.6209%" y="1071.50"></text></g><g><title>do_anonymous_page (3 samples, 0.02%)</title><rect x="93.3709%" y="1045" width="0.0180%" height="15" fill="rgb(234,142,31)" fg:x="15592" fg:w="3"/><text x="93.6209%" y="1055.50"></text></g><g><title>vma_alloc_folio (2 samples, 0.01%)</title><rect x="93.3768%" y="1029" width="0.0120%" height="15" fill="rgb(227,165,2)" fg:x="15593" fg:w="2"/><text x="93.6268%" y="1039.50"></text></g><g><title>__folio_alloc (2 samples, 0.01%)</title><rect x="93.3768%" y="1013" width="0.0120%" height="15" fill="rgb(232,44,46)" fg:x="15593" fg:w="2"/><text x="93.6268%" y="1023.50"></text></g><g><title>__alloc_pages (2 samples, 0.01%)</title><rect x="93.3768%" y="997" width="0.0120%" height="15" fill="rgb(236,149,47)" fg:x="15593" fg:w="2"/><text x="93.6268%" y="1007.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="93.3768%" y="981" width="0.0120%" height="15" fill="rgb(227,45,31)" fg:x="15593" fg:w="2"/><text x="93.6268%" y="991.50"></text></g><g><title>rmqueue (2 samples, 0.01%)</title><rect x="93.3768%" y="965" width="0.0120%" height="15" fill="rgb(240,176,51)" fg:x="15593" fg:w="2"/><text x="93.6268%" y="975.50"></text></g><g><title>rmqueue_bulk (2 samples, 0.01%)</title><rect x="93.3768%" y="949" width="0.0120%" height="15" fill="rgb(249,146,41)" fg:x="15593" fg:w="2"/><text x="93.6268%" y="959.50"></text></g><g><title>alloc::vec::from_elem (6 samples, 0.04%)</title><rect x="93.3649%" y="1221" width="0.0359%" height="15" fill="rgb(213,208,4)" fg:x="15591" fg:w="6"/><text x="93.6149%" y="1231.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (6 samples, 0.04%)</title><rect x="93.3649%" y="1205" width="0.0359%" height="15" fill="rgb(245,84,36)" fg:x="15591" fg:w="6"/><text x="93.6149%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (6 samples, 0.04%)</title><rect x="93.3649%" y="1189" width="0.0359%" height="15" fill="rgb(254,84,18)" fg:x="15591" fg:w="6"/><text x="93.6149%" y="1199.50"></text></g><g><title>core::ptr::write (6 samples, 0.04%)</title><rect x="93.3649%" y="1173" width="0.0359%" height="15" fill="rgb(225,38,54)" fg:x="15591" fg:w="6"/><text x="93.6149%" y="1183.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.04%)</title><rect x="93.3649%" y="1157" width="0.0359%" height="15" fill="rgb(246,50,30)" fg:x="15591" fg:w="6"/><text x="93.6149%" y="1167.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.04%)</title><rect x="93.3649%" y="1141" width="0.0359%" height="15" fill="rgb(246,148,9)" fg:x="15591" fg:w="6"/><text x="93.6149%" y="1151.50"></text></g><g><title>exc_page_fault (6 samples, 0.04%)</title><rect x="93.3649%" y="1125" width="0.0359%" height="15" fill="rgb(223,75,4)" fg:x="15591" fg:w="6"/><text x="93.6149%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.01%)</title><rect x="93.5625%" y="1077" width="0.0120%" height="15" fill="rgb(239,148,41)" fg:x="15624" fg:w="2"/><text x="93.8125%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (10 samples, 0.06%)</title><rect x="93.5325%" y="1141" width="0.0599%" height="15" fill="rgb(205,195,3)" fg:x="15619" fg:w="10"/><text x="93.7825%" y="1151.50"></text></g><g><title>core::iter::adapters::zip::try_get_unchecked (8 samples, 0.05%)</title><rect x="93.5445%" y="1125" width="0.0479%" height="15" fill="rgb(254,161,1)" fg:x="15621" fg:w="8"/><text x="93.7945%" y="1135.50"></text></g><g><title>&lt;I as core::iter::adapters::zip::SpecTrustedRandomAccess&gt;::try_get_unchecked (8 samples, 0.05%)</title><rect x="93.5445%" y="1109" width="0.0479%" height="15" fill="rgb(211,229,8)" fg:x="15621" fg:w="8"/><text x="93.7945%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (7 samples, 0.04%)</title><rect x="93.5505%" y="1093" width="0.0419%" height="15" fill="rgb(220,97,9)" fg:x="15622" fg:w="7"/><text x="93.8005%" y="1103.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (3 samples, 0.02%)</title><rect x="93.5745%" y="1077" width="0.0180%" height="15" fill="rgb(240,218,8)" fg:x="15626" fg:w="3"/><text x="93.8245%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.17%)</title><rect x="93.4307%" y="1173" width="0.1737%" height="15" fill="rgb(250,44,0)" fg:x="15602" fg:w="29"/><text x="93.6807%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (28 samples, 0.17%)</title><rect x="93.4367%" y="1157" width="0.1677%" height="15" fill="rgb(236,41,53)" fg:x="15603" fg:w="28"/><text x="93.6867%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2 samples, 0.01%)</title><rect x="93.5924%" y="1141" width="0.0120%" height="15" fill="rgb(218,227,13)" fg:x="15629" fg:w="2"/><text x="93.8424%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.01%)</title><rect x="93.5924%" y="1125" width="0.0120%" height="15" fill="rgb(217,94,32)" fg:x="15629" fg:w="2"/><text x="93.8424%" y="1135.50"></text></g><g><title>&lt;argon2::block::Block as core::ops::bit::BitXorAssign&lt;&amp;argon2::block::Block&gt;&gt;::bitxor_assign (34 samples, 0.20%)</title><rect x="93.4068%" y="1189" width="0.2036%" height="15" fill="rgb(213,217,12)" fg:x="15598" fg:w="34"/><text x="93.6568%" y="1199.50"></text></g><g><title>argon2::Argon2::hash_password_into_with_memory (39 samples, 0.23%)</title><rect x="93.4008%" y="1221" width="0.2335%" height="15" fill="rgb(229,13,46)" fg:x="15597" fg:w="39"/><text x="93.6508%" y="1231.50"></text></g><g><title>argon2::Argon2::fill_blocks (39 samples, 0.23%)</title><rect x="93.4008%" y="1205" width="0.2335%" height="15" fill="rgb(243,139,5)" fg:x="15597" fg:w="39"/><text x="93.6508%" y="1215.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="93.6164%" y="1189" width="0.0180%" height="15" fill="rgb(249,38,45)" fg:x="15633" fg:w="3"/><text x="93.8664%" y="1199.50"></text></g><g><title>veilid_core::attachment_manager::AttachmentManager::new (47 samples, 0.28%)</title><rect x="93.3589%" y="1301" width="0.2815%" height="15" fill="rgb(216,70,11)" fg:x="15590" fg:w="47"/><text x="93.6089%" y="1311.50"></text></g><g><title>veilid_core::attachment_manager::AttachmentManager::new_unlocked_inner (47 samples, 0.28%)</title><rect x="93.3589%" y="1285" width="0.2815%" height="15" fill="rgb(253,101,25)" fg:x="15590" fg:w="47"/><text x="93.6089%" y="1295.50"></text></g><g><title>veilid_core::network_manager::NetworkManager::new (47 samples, 0.28%)</title><rect x="93.3589%" y="1269" width="0.2815%" height="15" fill="rgb(207,197,30)" fg:x="15590" fg:w="47"/><text x="93.6089%" y="1279.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::derive_shared_secret (47 samples, 0.28%)</title><rect x="93.3589%" y="1253" width="0.2815%" height="15" fill="rgb(238,87,13)" fg:x="15590" fg:w="47"/><text x="93.6089%" y="1263.50"></text></g><g><title>argon2::Argon2::hash_password_into (46 samples, 0.28%)</title><rect x="93.3649%" y="1237" width="0.2755%" height="15" fill="rgb(215,155,8)" fg:x="15591" fg:w="46"/><text x="93.6149%" y="1247.50"></text></g><g><title>veilid_core::core_context::ServicesContext::startup::{{closure}}::{{closure}}::{{closure}} (48 samples, 0.29%)</title><rect x="93.3589%" y="1317" width="0.2874%" height="15" fill="rgb(239,166,38)" fg:x="15590" fg:w="48"/><text x="93.6089%" y="1327.50"></text></g><g><title>veilid_core::table_store::table_db::TableDB::load::{{closure}} (4 samples, 0.02%)</title><rect x="93.6463%" y="1301" width="0.0240%" height="15" fill="rgb(240,194,35)" fg:x="15638" fg:w="4"/><text x="93.8963%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.02%)</title><rect x="93.6463%" y="1285" width="0.0240%" height="15" fill="rgb(219,10,44)" fg:x="15638" fg:w="4"/><text x="93.8963%" y="1295.50"></text></g><g><title>veilid_core::table_store::table_db::TableDB::load::{{closure}}::{{closure}} (4 samples, 0.02%)</title><rect x="93.6463%" y="1269" width="0.0240%" height="15" fill="rgb(251,220,35)" fg:x="15638" fg:w="4"/><text x="93.8963%" y="1279.50"></text></g><g><title>veilid_core::table_store::table_db::TableDB::maybe_decrypt (4 samples, 0.02%)</title><rect x="93.6463%" y="1253" width="0.0240%" height="15" fill="rgb(218,117,13)" fg:x="15638" fg:w="4"/><text x="93.8963%" y="1263.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_b2b_no_auth (4 samples, 0.02%)</title><rect x="93.6463%" y="1237" width="0.0240%" height="15" fill="rgb(221,213,40)" fg:x="15638" fg:w="4"/><text x="93.8963%" y="1247.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b (4 samples, 0.02%)</title><rect x="93.6463%" y="1221" width="0.0240%" height="15" fill="rgb(251,224,35)" fg:x="15638" fg:w="4"/><text x="93.8963%" y="1231.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.02%)</title><rect x="93.6463%" y="1205" width="0.0240%" height="15" fill="rgb(241,33,39)" fg:x="15638" fg:w="4"/><text x="93.8963%" y="1215.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b::{{closure}} (4 samples, 0.02%)</title><rect x="93.6463%" y="1189" width="0.0240%" height="15" fill="rgb(222,74,17)" fg:x="15638" fg:w="4"/><text x="93.8963%" y="1199.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (4 samples, 0.02%)</title><rect x="93.6463%" y="1173" width="0.0240%" height="15" fill="rgb(225,103,0)" fg:x="15638" fg:w="4"/><text x="93.8963%" y="1183.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (4 samples, 0.02%)</title><rect x="93.6463%" y="1157" width="0.0240%" height="15" fill="rgb(240,0,12)" fg:x="15638" fg:w="4"/><text x="93.8963%" y="1167.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (4 samples, 0.02%)</title><rect x="93.6463%" y="1141" width="0.0240%" height="15" fill="rgb(233,213,37)" fg:x="15638" fg:w="4"/><text x="93.8963%" y="1151.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (4 samples, 0.02%)</title><rect x="93.6463%" y="1125" width="0.0240%" height="15" fill="rgb(225,84,52)" fg:x="15638" fg:w="4"/><text x="93.8963%" y="1135.50"></text></g><g><title>chacha20::backends::avx2::inner (4 samples, 0.02%)</title><rect x="93.6463%" y="1109" width="0.0240%" height="15" fill="rgb(247,160,51)" fg:x="15638" fg:w="4"/><text x="93.8963%" y="1119.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (4 samples, 0.02%)</title><rect x="93.6463%" y="1093" width="0.0240%" height="15" fill="rgb(244,60,51)" fg:x="15638" fg:w="4"/><text x="93.8963%" y="1103.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (3 samples, 0.02%)</title><rect x="93.6523%" y="1077" width="0.0180%" height="15" fill="rgb(233,114,7)" fg:x="15639" fg:w="3"/><text x="93.9023%" y="1087.50"></text></g><g><title>veilid_core::crypto::Crypto::init::{{closure}} (5 samples, 0.03%)</title><rect x="93.6463%" y="1317" width="0.0299%" height="15" fill="rgb(246,136,16)" fg:x="15638" fg:w="5"/><text x="93.8963%" y="1327.50"></text></g><g><title>veilid_core::storage_manager::record_store::RecordStore&lt;D&gt;::init::{{closure}} (2 samples, 0.01%)</title><rect x="93.6942%" y="1317" width="0.0120%" height="15" fill="rgb(243,114,45)" fg:x="15646" fg:w="2"/><text x="93.9442%" y="1327.50"></text></g><g><title>veilid_core::table_store::table_db::TableDB::load_rkyv::{{closure}} (2 samples, 0.01%)</title><rect x="93.7182%" y="1317" width="0.0120%" height="15" fill="rgb(247,183,43)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1327.50"></text></g><g><title>veilid_core::table_store::table_db::TableDB::load::{{closure}} (2 samples, 0.01%)</title><rect x="93.7182%" y="1301" width="0.0120%" height="15" fill="rgb(251,210,42)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="93.7182%" y="1285" width="0.0120%" height="15" fill="rgb(221,88,35)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1295.50"></text></g><g><title>veilid_core::table_store::table_db::TableDB::load::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="93.7182%" y="1269" width="0.0120%" height="15" fill="rgb(242,21,20)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1279.50"></text></g><g><title>veilid_core::table_store::table_db::TableDB::maybe_decrypt (2 samples, 0.01%)</title><rect x="93.7182%" y="1253" width="0.0120%" height="15" fill="rgb(233,226,36)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1263.50"></text></g><g><title>&lt;veilid_core::crypto::vld0::CryptoSystemVLD0 as veilid_core::crypto::crypto_system::CryptoSystem&gt;::crypt_b2b_no_auth (2 samples, 0.01%)</title><rect x="93.7182%" y="1237" width="0.0120%" height="15" fill="rgb(243,189,34)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1247.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b (2 samples, 0.01%)</title><rect x="93.7182%" y="1221" width="0.0120%" height="15" fill="rgb(207,145,50)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1231.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.01%)</title><rect x="93.7182%" y="1205" width="0.0120%" height="15" fill="rgb(242,1,50)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1215.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream_b2b::{{closure}} (2 samples, 0.01%)</title><rect x="93.7182%" y="1189" width="0.0120%" height="15" fill="rgb(231,65,32)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1199.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (2 samples, 0.01%)</title><rect x="93.7182%" y="1173" width="0.0120%" height="15" fill="rgb(208,68,49)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1183.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (2 samples, 0.01%)</title><rect x="93.7182%" y="1157" width="0.0120%" height="15" fill="rgb(253,54,49)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1167.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.01%)</title><rect x="93.7182%" y="1141" width="0.0120%" height="15" fill="rgb(245,186,24)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1151.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.01%)</title><rect x="93.7182%" y="1125" width="0.0120%" height="15" fill="rgb(209,2,41)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1135.50"></text></g><g><title>chacha20::backends::avx2::inner (2 samples, 0.01%)</title><rect x="93.7182%" y="1109" width="0.0120%" height="15" fill="rgb(242,208,54)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1119.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (2 samples, 0.01%)</title><rect x="93.7182%" y="1093" width="0.0120%" height="15" fill="rgb(225,9,51)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1103.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (2 samples, 0.01%)</title><rect x="93.7182%" y="1077" width="0.0120%" height="15" fill="rgb(207,207,25)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1087.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.01%)</title><rect x="93.7182%" y="1061" width="0.0120%" height="15" fill="rgb(253,96,18)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1071.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.01%)</title><rect x="93.7182%" y="1045" width="0.0120%" height="15" fill="rgb(252,215,20)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="93.7182%" y="1029" width="0.0120%" height="15" fill="rgb(245,227,26)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="93.7182%" y="1013" width="0.0120%" height="15" fill="rgb(241,208,0)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="93.7182%" y="997" width="0.0120%" height="15" fill="rgb(224,130,10)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.01%)</title><rect x="93.7182%" y="981" width="0.0120%" height="15" fill="rgb(237,29,0)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.01%)</title><rect x="93.7182%" y="965" width="0.0120%" height="15" fill="rgb(219,27,41)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="975.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.01%)</title><rect x="93.7182%" y="949" width="0.0120%" height="15" fill="rgb(245,101,19)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="959.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (2 samples, 0.01%)</title><rect x="93.7182%" y="933" width="0.0120%" height="15" fill="rgb(243,44,37)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="943.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.01%)</title><rect x="93.7182%" y="917" width="0.0120%" height="15" fill="rgb(228,213,43)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="927.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.01%)</title><rect x="93.7182%" y="901" width="0.0120%" height="15" fill="rgb(219,163,21)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="93.7182%" y="885" width="0.0120%" height="15" fill="rgb(234,86,24)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="93.7182%" y="869" width="0.0120%" height="15" fill="rgb(225,10,24)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="93.7182%" y="853" width="0.0120%" height="15" fill="rgb(218,109,7)" fg:x="15650" fg:w="2"/><text x="93.9682%" y="863.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.02%)</title><rect x="93.9637%" y="917" width="0.0180%" height="15" fill="rgb(210,20,26)" fg:x="15691" fg:w="3"/><text x="94.2137%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3 samples, 0.02%)</title><rect x="93.9637%" y="901" width="0.0180%" height="15" fill="rgb(216,18,1)" fg:x="15691" fg:w="3"/><text x="94.2137%" y="911.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (3 samples, 0.02%)</title><rect x="93.9817%" y="917" width="0.0180%" height="15" fill="rgb(206,163,23)" fg:x="15694" fg:w="3"/><text x="94.2317%" y="927.50"></text></g><g><title>core::mem::replace (7 samples, 0.04%)</title><rect x="94.0296%" y="901" width="0.0419%" height="15" fill="rgb(229,150,31)" fg:x="15702" fg:w="7"/><text x="94.2796%" y="911.50"></text></g><g><title>core::ptr::read (9 samples, 0.05%)</title><rect x="94.0715%" y="901" width="0.0539%" height="15" fill="rgb(231,10,5)" fg:x="15709" fg:w="9"/><text x="94.3215%" y="911.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (3 samples, 0.02%)</title><rect x="94.1074%" y="885" width="0.0180%" height="15" fill="rgb(250,40,50)" fg:x="15715" fg:w="3"/><text x="94.3574%" y="895.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (44 samples, 0.26%)</title><rect x="93.8679%" y="949" width="0.2635%" height="15" fill="rgb(217,119,7)" fg:x="15675" fg:w="44"/><text x="94.1179%" y="959.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (43 samples, 0.26%)</title><rect x="93.8739%" y="933" width="0.2575%" height="15" fill="rgb(245,214,40)" fg:x="15676" fg:w="43"/><text x="94.1239%" y="943.50"></text></g><g><title>core::mem::replace (21 samples, 0.13%)</title><rect x="94.0056%" y="917" width="0.1258%" height="15" fill="rgb(216,187,1)" fg:x="15698" fg:w="21"/><text x="94.2556%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.01%)</title><rect x="94.2811%" y="917" width="0.0120%" height="15" fill="rgb(237,146,21)" fg:x="15744" fg:w="2"/><text x="94.5311%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="94.2811%" y="901" width="0.0120%" height="15" fill="rgb(210,174,47)" fg:x="15744" fg:w="2"/><text x="94.5311%" y="911.50"></text></g><g><title>data_encoding::chunk_mut_unchecked (23 samples, 0.14%)</title><rect x="94.1853%" y="933" width="0.1377%" height="15" fill="rgb(218,111,39)" fg:x="15728" fg:w="23"/><text x="94.4353%" y="943.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (5 samples, 0.03%)</title><rect x="94.2931%" y="917" width="0.0299%" height="15" fill="rgb(224,95,19)" fg:x="15746" fg:w="5"/><text x="94.5431%" y="927.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (4 samples, 0.02%)</title><rect x="94.2991%" y="901" width="0.0240%" height="15" fill="rgb(234,15,38)" fg:x="15747" fg:w="4"/><text x="94.5491%" y="911.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.02%)</title><rect x="94.2991%" y="885" width="0.0240%" height="15" fill="rgb(246,56,12)" fg:x="15747" fg:w="4"/><text x="94.5491%" y="895.50"></text></g><g><title>data_encoding::chunk_unchecked (23 samples, 0.14%)</title><rect x="94.3230%" y="933" width="0.1377%" height="15" fill="rgb(247,16,17)" fg:x="15751" fg:w="23"/><text x="94.5730%" y="943.50"></text></g><g><title>core::slice::raw::from_raw_parts (4 samples, 0.02%)</title><rect x="94.4368%" y="917" width="0.0240%" height="15" fill="rgb(215,151,11)" fg:x="15770" fg:w="4"/><text x="94.6868%" y="927.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.01%)</title><rect x="94.4488%" y="901" width="0.0120%" height="15" fill="rgb(225,16,24)" fg:x="15772" fg:w="2"/><text x="94.6988%" y="911.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.01%)</title><rect x="94.4488%" y="885" width="0.0120%" height="15" fill="rgb(217,117,5)" fg:x="15772" fg:w="2"/><text x="94.6988%" y="895.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.03%)</title><rect x="95.8381%" y="917" width="0.0299%" height="15" fill="rgb(246,187,53)" fg:x="16004" fg:w="5"/><text x="96.0881%" y="927.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (35 samples, 0.21%)</title><rect x="96.4609%" y="901" width="0.2096%" height="15" fill="rgb(241,71,40)" fg:x="16108" fg:w="35"/><text x="96.7109%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="96.7244%" y="885" width="0.0120%" height="15" fill="rgb(231,67,39)" fg:x="16152" fg:w="2"/><text x="96.9744%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (9 samples, 0.05%)</title><rect x="96.7363%" y="885" width="0.0539%" height="15" fill="rgb(222,120,24)" fg:x="16154" fg:w="9"/><text x="96.9863%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null::runtime_impl (2 samples, 0.01%)</title><rect x="96.7783%" y="869" width="0.0120%" height="15" fill="rgb(248,3,3)" fg:x="16161" fg:w="2"/><text x="97.0283%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::addr (2 samples, 0.01%)</title><rect x="96.7783%" y="853" width="0.0120%" height="15" fill="rgb(228,218,5)" fg:x="16161" fg:w="2"/><text x="97.0283%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.04%)</title><rect x="96.7902%" y="885" width="0.0359%" height="15" fill="rgb(212,202,43)" fg:x="16163" fg:w="6"/><text x="97.0402%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.04%)</title><rect x="96.9040%" y="869" width="0.0359%" height="15" fill="rgb(235,183,2)" fg:x="16182" fg:w="6"/><text x="97.1540%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.03%)</title><rect x="96.9100%" y="853" width="0.0299%" height="15" fill="rgb(230,165,10)" fg:x="16183" fg:w="5"/><text x="97.1600%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.28%)</title><rect x="96.6705%" y="901" width="0.2815%" height="15" fill="rgb(219,54,40)" fg:x="16143" fg:w="47"/><text x="96.9205%" y="911.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (21 samples, 0.13%)</title><rect x="96.8262%" y="885" width="0.1258%" height="15" fill="rgb(244,73,9)" fg:x="16169" fg:w="21"/><text x="97.0762%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.01%)</title><rect x="96.9399%" y="869" width="0.0120%" height="15" fill="rgb(212,32,45)" fg:x="16188" fg:w="2"/><text x="97.1899%" y="879.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="97.1615%" y="885" width="0.0240%" height="15" fill="rgb(205,58,31)" fg:x="16225" fg:w="4"/><text x="97.4115%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (20 samples, 0.12%)</title><rect x="97.1855%" y="885" width="0.1198%" height="15" fill="rgb(250,120,43)" fg:x="16229" fg:w="20"/><text x="97.4355%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (7 samples, 0.04%)</title><rect x="97.2633%" y="869" width="0.0419%" height="15" fill="rgb(235,13,10)" fg:x="16242" fg:w="7"/><text x="97.5133%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (7 samples, 0.04%)</title><rect x="97.2633%" y="853" width="0.0419%" height="15" fill="rgb(232,219,31)" fg:x="16242" fg:w="7"/><text x="97.5133%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11 samples, 0.07%)</title><rect x="97.3771%" y="869" width="0.0659%" height="15" fill="rgb(218,157,51)" fg:x="16261" fg:w="11"/><text x="97.6271%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.06%)</title><rect x="97.3831%" y="853" width="0.0599%" height="15" fill="rgb(211,91,52)" fg:x="16262" fg:w="10"/><text x="97.6331%" y="863.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.51%)</title><rect x="96.9519%" y="901" width="0.5090%" height="15" fill="rgb(240,173,1)" fg:x="16190" fg:w="85"/><text x="97.2019%" y="911.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (26 samples, 0.16%)</title><rect x="97.3052%" y="885" width="0.1557%" height="15" fill="rgb(248,20,47)" fg:x="16249" fg:w="26"/><text x="97.5552%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.02%)</title><rect x="97.4430%" y="869" width="0.0180%" height="15" fill="rgb(217,221,40)" fg:x="16272" fg:w="3"/><text x="97.6930%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (267 samples, 1.60%)</title><rect x="95.8680%" y="917" width="1.5989%" height="15" fill="rgb(226,149,51)" fg:x="16009" fg:w="267"/><text x="96.1180%" y="927.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for u64&gt;::from (4 samples, 0.02%)</title><rect x="97.4669%" y="917" width="0.0240%" height="15" fill="rgb(252,193,7)" fg:x="16276" fg:w="4"/><text x="97.7169%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (8 samples, 0.05%)</title><rect x="97.4909%" y="917" width="0.0479%" height="15" fill="rgb(205,123,0)" fg:x="16280" fg:w="8"/><text x="97.7409%" y="927.50"></text></g><g><title>core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (4 samples, 0.02%)</title><rect x="97.5148%" y="901" width="0.0240%" height="15" fill="rgb(233,173,25)" fg:x="16284" fg:w="4"/><text x="97.7648%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.01%)</title><rect x="97.6226%" y="885" width="0.0120%" height="15" fill="rgb(216,63,32)" fg:x="16302" fg:w="2"/><text x="97.8726%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (18 samples, 0.11%)</title><rect x="97.5388%" y="917" width="0.1078%" height="15" fill="rgb(209,56,45)" fg:x="16288" fg:w="18"/><text x="97.7888%" y="927.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (15 samples, 0.09%)</title><rect x="97.5567%" y="901" width="0.0898%" height="15" fill="rgb(226,111,49)" fg:x="16291" fg:w="15"/><text x="97.8067%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.01%)</title><rect x="97.6346%" y="885" width="0.0120%" height="15" fill="rgb(244,181,21)" fg:x="16304" fg:w="2"/><text x="97.8846%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.03%)</title><rect x="97.6825%" y="885" width="0.0299%" height="15" fill="rgb(222,126,15)" fg:x="16312" fg:w="5"/><text x="97.9325%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.03%)</title><rect x="97.6825%" y="869" width="0.0299%" height="15" fill="rgb(222,95,17)" fg:x="16312" fg:w="5"/><text x="97.9325%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (15 samples, 0.09%)</title><rect x="97.6466%" y="917" width="0.0898%" height="15" fill="rgb(254,46,5)" fg:x="16306" fg:w="15"/><text x="97.8966%" y="927.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (14 samples, 0.08%)</title><rect x="97.6526%" y="901" width="0.0838%" height="15" fill="rgb(236,216,35)" fg:x="16307" fg:w="14"/><text x="97.9026%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (4 samples, 0.02%)</title><rect x="97.7124%" y="885" width="0.0240%" height="15" fill="rgb(217,187,26)" fg:x="16317" fg:w="4"/><text x="97.9624%" y="895.50"></text></g><g><title>data_encoding::dec (133 samples, 0.80%)</title><rect x="97.7364%" y="917" width="0.7965%" height="15" fill="rgb(207,192,25)" fg:x="16321" fg:w="133"/><text x="97.9864%" y="927.50"></text></g><g><title>data_encoding::enc (26 samples, 0.16%)</title><rect x="98.3771%" y="901" width="0.1557%" height="15" fill="rgb(253,135,27)" fg:x="16428" fg:w="26"/><text x="98.6271%" y="911.50"></text></g><g><title>data_encoding::enc (26 samples, 0.16%)</title><rect x="98.5328%" y="917" width="0.1557%" height="15" fill="rgb(211,122,29)" fg:x="16454" fg:w="26"/><text x="98.7828%" y="927.50"></text></g><g><title>data_encoding::encode_len (45 samples, 0.27%)</title><rect x="98.6885%" y="917" width="0.2695%" height="15" fill="rgb(233,162,40)" fg:x="16480" fg:w="45"/><text x="98.9385%" y="927.50"></text></g><g><title>data_encoding::div_ceil (44 samples, 0.26%)</title><rect x="98.6945%" y="901" width="0.2635%" height="15" fill="rgb(222,184,47)" fg:x="16481" fg:w="44"/><text x="98.9445%" y="911.50"></text></g><g><title>veilid_core::veilid_api::types::app_message_call::_::&lt;impl serde::ser::Serialize for veilid_core::veilid_api::types::app_message_call::VeilidAppMessage&gt;::serialize (949 samples, 5.68%)</title><rect x="93.7302%" y="1157" width="5.6830%" height="15" fill="rgb(249,99,23)" fg:x="15652" fg:w="949"/><text x="93.9802%" y="1167.50">veilid_..</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (949 samples, 5.68%)</title><rect x="93.7302%" y="1141" width="5.6830%" height="15" fill="rgb(214,60,12)" fg:x="15652" fg:w="949"/><text x="93.9802%" y="1151.50">&lt;serde_..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (949 samples, 5.68%)</title><rect x="93.7302%" y="1125" width="5.6830%" height="15" fill="rgb(250,229,36)" fg:x="15652" fg:w="949"/><text x="93.9802%" y="1135.50">serde::..</text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (949 samples, 5.68%)</title><rect x="93.7302%" y="1109" width="5.6830%" height="15" fill="rgb(232,195,10)" fg:x="15652" fg:w="949"/><text x="93.9802%" y="1119.50">&lt;serde_..</text></g><g><title>&lt;veilid_core::veilid_api::types::app_message_call::_::&lt;impl serde::ser::Serialize for veilid_core::veilid_api::types::app_message_call::VeilidAppMessage&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (949 samples, 5.68%)</title><rect x="93.7302%" y="1093" width="5.6830%" height="15" fill="rgb(205,213,31)" fg:x="15652" fg:w="949"/><text x="93.9802%" y="1103.50">&lt;veilid..</text></g><g><title>veilid_core::veilid_api::serialize_helpers::serialize_json::json_as_base64::serialize (949 samples, 5.68%)</title><rect x="93.7302%" y="1077" width="5.6830%" height="15" fill="rgb(237,43,8)" fg:x="15652" fg:w="949"/><text x="93.9802%" y="1087.50">veilid_..</text></g><g><title>data_encoding::Encoding::encode (949 samples, 5.68%)</title><rect x="93.7302%" y="1061" width="5.6830%" height="15" fill="rgb(216,208,3)" fg:x="15652" fg:w="949"/><text x="93.9802%" y="1071.50">data_en..</text></g><g><title>data_encoding::Encoding::encode_mut (949 samples, 5.68%)</title><rect x="93.7302%" y="1045" width="5.6830%" height="15" fill="rgb(228,179,44)" fg:x="15652" fg:w="949"/><text x="93.9802%" y="1055.50">data_en..</text></g><g><title>data_encoding::encode_wrap_mut (949 samples, 5.68%)</title><rect x="93.7302%" y="1029" width="5.6830%" height="15" fill="rgb(230,192,27)" fg:x="15652" fg:w="949"/><text x="93.9802%" y="1039.50">data_en..</text></g><g><title>data_encoding::encode_pad (949 samples, 5.68%)</title><rect x="93.7302%" y="1013" width="5.6830%" height="15" fill="rgb(251,30,38)" fg:x="15652" fg:w="949"/><text x="93.9802%" y="1023.50">data_en..</text></g><g><title>data_encoding::encode_base (949 samples, 5.68%)</title><rect x="93.7302%" y="997" width="5.6830%" height="15" fill="rgb(246,55,52)" fg:x="15652" fg:w="949"/><text x="93.9802%" y="1007.50">data_en..</text></g><g><title>data_encoding::encode_mut (949 samples, 5.68%)</title><rect x="93.7302%" y="981" width="5.6830%" height="15" fill="rgb(249,79,26)" fg:x="15652" fg:w="949"/><text x="93.9802%" y="991.50">data_en..</text></g><g><title>data_encoding::vectorize (948 samples, 5.68%)</title><rect x="93.7362%" y="965" width="5.6770%" height="15" fill="rgb(220,202,16)" fg:x="15653" fg:w="948"/><text x="93.9862%" y="975.50">data_en..</text></g><g><title>data_encoding::encode_mut::{{closure}} (882 samples, 5.28%)</title><rect x="94.1314%" y="949" width="5.2818%" height="15" fill="rgb(250,170,23)" fg:x="15719" fg:w="882"/><text x="94.3814%" y="959.50">data_e..</text></g><g><title>data_encoding::encode_block (827 samples, 4.95%)</title><rect x="94.4607%" y="933" width="4.9524%" height="15" fill="rgb(230,7,37)" fg:x="15774" fg:w="827"/><text x="94.7107%" y="943.50">data_e..</text></g><g><title>data_encoding::order (76 samples, 0.46%)</title><rect x="98.9580%" y="917" width="0.4551%" height="15" fill="rgb(213,71,1)" fg:x="16525" fg:w="76"/><text x="99.2080%" y="927.50"></text></g><g><title>veilid_server::server::run_veilid_server_internal::{{closure}}::{{closure}} (950 samples, 5.69%)</title><rect x="93.7302%" y="1317" width="5.6890%" height="15" fill="rgb(227,87,39)" fg:x="15652" fg:w="950"/><text x="93.9802%" y="1327.50">veilid_..</text></g><g><title>veilid_server::client_api::ClientApi::handle_update (950 samples, 5.69%)</title><rect x="93.7302%" y="1301" width="5.6890%" height="15" fill="rgb(210,41,29)" fg:x="15652" fg:w="950"/><text x="93.9802%" y="1311.50">veilid_..</text></g><g><title>veilid_core::veilid_api::serialize_helpers::serialize_json::serialize_json (950 samples, 5.69%)</title><rect x="93.7302%" y="1285" width="5.6890%" height="15" fill="rgb(206,191,31)" fg:x="15652" fg:w="950"/><text x="93.9802%" y="1295.50">veilid_..</text></g><g><title>serde_json::ser::to_string (950 samples, 5.69%)</title><rect x="93.7302%" y="1269" width="5.6890%" height="15" fill="rgb(247,75,54)" fg:x="15652" fg:w="950"/><text x="93.9802%" y="1279.50">serde_j..</text></g><g><title>serde_json::ser::to_vec (950 samples, 5.69%)</title><rect x="93.7302%" y="1253" width="5.6890%" height="15" fill="rgb(208,54,50)" fg:x="15652" fg:w="950"/><text x="93.9802%" y="1263.50">serde_j..</text></g><g><title>serde_json::ser::to_writer (950 samples, 5.69%)</title><rect x="93.7302%" y="1237" width="5.6890%" height="15" fill="rgb(214,90,37)" fg:x="15652" fg:w="950"/><text x="93.9802%" y="1247.50">serde_j..</text></g><g><title>veilid_core::veilid_api::json_api::_::&lt;impl serde::ser::Serialize for veilid_core::veilid_api::json_api::RecvMessage&gt;::serialize (950 samples, 5.69%)</title><rect x="93.7302%" y="1221" width="5.6890%" height="15" fill="rgb(220,132,6)" fg:x="15652" fg:w="950"/><text x="93.9802%" y="1231.50">veilid_..</text></g><g><title>serde::__private::ser::serialize_tagged_newtype (950 samples, 5.69%)</title><rect x="93.7302%" y="1205" width="5.6890%" height="15" fill="rgb(213,167,7)" fg:x="15652" fg:w="950"/><text x="93.9802%" y="1215.50">serde::..</text></g><g><title>veilid_core::veilid_api::types::veilid_state::_::&lt;impl serde::ser::Serialize for veilid_core::veilid_api::types::veilid_state::VeilidUpdate&gt;::serialize (950 samples, 5.69%)</title><rect x="93.7302%" y="1189" width="5.6890%" height="15" fill="rgb(243,36,27)" fg:x="15652" fg:w="950"/><text x="93.9802%" y="1199.50">veilid_..</text></g><g><title>serde::__private::ser::serialize_tagged_newtype (950 samples, 5.69%)</title><rect x="93.7302%" y="1173" width="5.6890%" height="15" fill="rgb(235,147,12)" fg:x="15652" fg:w="950"/><text x="93.9802%" y="1183.50">serde::..</text></g><g><title>[unknown] (1,900 samples, 11.38%)</title><rect x="88.0831%" y="1333" width="11.3779%" height="15" fill="rgb(212,198,44)" fg:x="14709" fg:w="1900"/><text x="88.3331%" y="1343.50">[unknown]</text></g><g><title>veilid_server::tools::block_on (6 samples, 0.04%)</title><rect x="99.4251%" y="1317" width="0.0359%" height="15" fill="rgb(218,68,50)" fg:x="16603" fg:w="6"/><text x="99.6751%" y="1327.50"></text></g><g><title>tokio::runtime::runtime::Runtime::new (6 samples, 0.04%)</title><rect x="99.4251%" y="1301" width="0.0359%" height="15" fill="rgb(224,79,48)" fg:x="16603" fg:w="6"/><text x="99.6751%" y="1311.50"></text></g><g><title>tokio::runtime::builder::Builder::build (6 samples, 0.04%)</title><rect x="99.4251%" y="1285" width="0.0359%" height="15" fill="rgb(213,191,50)" fg:x="16603" fg:w="6"/><text x="99.6751%" y="1295.50"></text></g><g><title>tokio::runtime::builder::Builder::build_threaded_runtime (6 samples, 0.04%)</title><rect x="99.4251%" y="1269" width="0.0359%" height="15" fill="rgb(254,146,10)" fg:x="16603" fg:w="6"/><text x="99.6751%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch (6 samples, 0.04%)</title><rect x="99.4251%" y="1253" width="0.0359%" height="15" fill="rgb(215,175,11)" fg:x="16603" fg:w="6"/><text x="99.6751%" y="1263.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (6 samples, 0.04%)</title><rect x="99.4251%" y="1237" width="0.0359%" height="15" fill="rgb(207,49,7)" fg:x="16603" fg:w="6"/><text x="99.6751%" y="1247.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (6 samples, 0.04%)</title><rect x="99.4251%" y="1221" width="0.0359%" height="15" fill="rgb(234,144,29)" fg:x="16603" fg:w="6"/><text x="99.6751%" y="1231.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (6 samples, 0.04%)</title><rect x="99.4251%" y="1205" width="0.0359%" height="15" fill="rgb(213,222,48)" fg:x="16603" fg:w="6"/><text x="99.6751%" y="1215.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (6 samples, 0.04%)</title><rect x="99.4251%" y="1189" width="0.0359%" height="15" fill="rgb(222,8,6)" fg:x="16603" fg:w="6"/><text x="99.6751%" y="1199.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (6 samples, 0.04%)</title><rect x="99.4251%" y="1173" width="0.0359%" height="15" fill="rgb(221,114,49)" fg:x="16603" fg:w="6"/><text x="99.6751%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5 samples, 0.03%)</title><rect x="99.4311%" y="1157" width="0.0299%" height="15" fill="rgb(250,140,42)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5 samples, 0.03%)</title><rect x="99.4311%" y="1141" width="0.0299%" height="15" fill="rgb(250,150,27)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.03%)</title><rect x="99.4311%" y="1125" width="0.0299%" height="15" fill="rgb(252,159,3)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="1135.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (5 samples, 0.03%)</title><rect x="99.4311%" y="1109" width="0.0299%" height="15" fill="rgb(241,182,3)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::park (5 samples, 0.03%)</title><rect x="99.4311%" y="1093" width="0.0299%" height="15" fill="rgb(236,3,9)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (5 samples, 0.03%)</title><rect x="99.4311%" y="1077" width="0.0299%" height="15" fill="rgb(223,227,51)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (5 samples, 0.03%)</title><rect x="99.4311%" y="1061" width="0.0299%" height="15" fill="rgb(232,133,30)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="1071.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (5 samples, 0.03%)</title><rect x="99.4311%" y="1045" width="0.0299%" height="15" fill="rgb(209,93,27)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="1055.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (5 samples, 0.03%)</title><rect x="99.4311%" y="1029" width="0.0299%" height="15" fill="rgb(208,108,34)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="1039.50"></text></g><g><title>syscall (5 samples, 0.03%)</title><rect x="99.4311%" y="1013" width="0.0299%" height="15" fill="rgb(215,189,13)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="99.4311%" y="997" width="0.0299%" height="15" fill="rgb(206,88,23)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="1007.50"></text></g><g><title>do_syscall_64 (5 samples, 0.03%)</title><rect x="99.4311%" y="981" width="0.0299%" height="15" fill="rgb(240,173,0)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="991.50"></text></g><g><title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="99.4311%" y="965" width="0.0299%" height="15" fill="rgb(223,106,52)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="975.50"></text></g><g><title>do_futex (5 samples, 0.03%)</title><rect x="99.4311%" y="949" width="0.0299%" height="15" fill="rgb(206,130,16)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="959.50"></text></g><g><title>futex_wait (5 samples, 0.03%)</title><rect x="99.4311%" y="933" width="0.0299%" height="15" fill="rgb(220,54,25)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="943.50"></text></g><g><title>futex_wait_queue (5 samples, 0.03%)</title><rect x="99.4311%" y="917" width="0.0299%" height="15" fill="rgb(210,4,38)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="927.50"></text></g><g><title>schedule (5 samples, 0.03%)</title><rect x="99.4311%" y="901" width="0.0299%" height="15" fill="rgb(238,94,39)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="911.50"></text></g><g><title>__schedule (5 samples, 0.03%)</title><rect x="99.4311%" y="885" width="0.0299%" height="15" fill="rgb(234,124,34)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="895.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.03%)</title><rect x="99.4311%" y="869" width="0.0299%" height="15" fill="rgb(221,91,40)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="879.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.03%)</title><rect x="99.4311%" y="853" width="0.0299%" height="15" fill="rgb(246,53,28)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="863.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.03%)</title><rect x="99.4311%" y="837" width="0.0299%" height="15" fill="rgb(229,109,7)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="847.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.03%)</title><rect x="99.4311%" y="821" width="0.0299%" height="15" fill="rgb(249,117,8)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="831.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.03%)</title><rect x="99.4311%" y="805" width="0.0299%" height="15" fill="rgb(210,181,1)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="815.50"></text></g><g><title>native_write_msr (5 samples, 0.03%)</title><rect x="99.4311%" y="789" width="0.0299%" height="15" fill="rgb(211,66,1)" fg:x="16604" fg:w="5"/><text x="99.6811%" y="799.50"></text></g><g><title>[veilid-server] (5 samples, 0.03%)</title><rect x="99.4610%" y="1333" width="0.0299%" height="15" fill="rgb(221,90,14)" fg:x="16609" fg:w="5"/><text x="99.7110%" y="1343.50"></text></g><g><title>schedule_tail (60 samples, 0.36%)</title><rect x="99.4970%" y="1301" width="0.3593%" height="15" fill="rgb(219,222,44)" fg:x="16615" fg:w="60"/><text x="99.7470%" y="1311.50"></text></g><g><title>finish_task_switch.isra.0 (60 samples, 0.36%)</title><rect x="99.4970%" y="1285" width="0.3593%" height="15" fill="rgb(246,34,33)" fg:x="16615" fg:w="60"/><text x="99.7470%" y="1295.50"></text></g><g><title>__perf_event_task_sched_in (60 samples, 0.36%)</title><rect x="99.4970%" y="1269" width="0.3593%" height="15" fill="rgb(227,135,41)" fg:x="16615" fg:w="60"/><text x="99.7470%" y="1279.50"></text></g><g><title>perf_ctx_enable (60 samples, 0.36%)</title><rect x="99.4970%" y="1253" width="0.3593%" height="15" fill="rgb(226,15,14)" fg:x="16615" fg:w="60"/><text x="99.7470%" y="1263.50"></text></g><g><title>x86_pmu_enable (60 samples, 0.36%)</title><rect x="99.4970%" y="1237" width="0.3593%" height="15" fill="rgb(236,148,47)" fg:x="16615" fg:w="60"/><text x="99.7470%" y="1247.50"></text></g><g><title>intel_pmu_enable_all (60 samples, 0.36%)</title><rect x="99.4970%" y="1221" width="0.3593%" height="15" fill="rgb(233,162,52)" fg:x="16615" fg:w="60"/><text x="99.7470%" y="1231.50"></text></g><g><title>native_write_msr (60 samples, 0.36%)</title><rect x="99.4970%" y="1205" width="0.3593%" height="15" fill="rgb(244,35,28)" fg:x="16615" fg:w="60"/><text x="99.7470%" y="1215.50"></text></g><g><title>ret_from_fork (62 samples, 0.37%)</title><rect x="99.4970%" y="1317" width="0.3713%" height="15" fill="rgb(205,121,10)" fg:x="16615" fg:w="62"/><text x="99.7470%" y="1327.50"></text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.01%)</title><rect x="99.8563%" y="1301" width="0.0120%" height="15" fill="rgb(250,58,18)" fg:x="16675" fg:w="2"/><text x="100.1063%" y="1311.50"></text></g><g><title>do_mmap (3 samples, 0.02%)</title><rect x="99.8862%" y="1109" width="0.0180%" height="15" fill="rgb(216,37,13)" fg:x="16680" fg:w="3"/><text x="100.1362%" y="1119.50"></text></g><g><title>mmap_region (3 samples, 0.02%)</title><rect x="99.8862%" y="1093" width="0.0180%" height="15" fill="rgb(221,215,42)" fg:x="16680" fg:w="3"/><text x="100.1362%" y="1103.50"></text></g><g><title>rwsem_optimistic_spin (2 samples, 0.01%)</title><rect x="99.9042%" y="1077" width="0.0120%" height="15" fill="rgb(217,214,19)" fg:x="16683" fg:w="2"/><text x="100.1542%" y="1087.50"></text></g><g><title>down_write_killable (3 samples, 0.02%)</title><rect x="99.9042%" y="1109" width="0.0180%" height="15" fill="rgb(233,139,13)" fg:x="16683" fg:w="3"/><text x="100.1542%" y="1119.50"></text></g><g><title>rwsem_down_write_slowpath (3 samples, 0.02%)</title><rect x="99.9042%" y="1093" width="0.0180%" height="15" fill="rgb(247,168,23)" fg:x="16683" fg:w="3"/><text x="100.1542%" y="1103.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (8 samples, 0.05%)</title><rect x="99.8802%" y="1301" width="0.0479%" height="15" fill="rgb(207,202,1)" fg:x="16679" fg:w="8"/><text x="100.1302%" y="1311.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (8 samples, 0.05%)</title><rect x="99.8802%" y="1285" width="0.0479%" height="15" fill="rgb(220,155,48)" fg:x="16679" fg:w="8"/><text x="100.1302%" y="1295.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (8 samples, 0.05%)</title><rect x="99.8802%" y="1269" width="0.0479%" height="15" fill="rgb(250,43,26)" fg:x="16679" fg:w="8"/><text x="100.1302%" y="1279.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (7 samples, 0.04%)</title><rect x="99.8862%" y="1253" width="0.0419%" height="15" fill="rgb(212,190,23)" fg:x="16680" fg:w="7"/><text x="100.1362%" y="1263.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (7 samples, 0.04%)</title><rect x="99.8862%" y="1237" width="0.0419%" height="15" fill="rgb(216,39,24)" fg:x="16680" fg:w="7"/><text x="100.1362%" y="1247.50"></text></g><g><title>__GI___mmap64 (7 samples, 0.04%)</title><rect x="99.8862%" y="1221" width="0.0419%" height="15" fill="rgb(252,113,16)" fg:x="16680" fg:w="7"/><text x="100.1362%" y="1231.50"></text></g><g><title>__GI___mmap64 (7 samples, 0.04%)</title><rect x="99.8862%" y="1205" width="0.0419%" height="15" fill="rgb(208,113,19)" fg:x="16680" fg:w="7"/><text x="100.1362%" y="1215.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="99.8862%" y="1189" width="0.0419%" height="15" fill="rgb(234,107,25)" fg:x="16680" fg:w="7"/><text x="100.1362%" y="1199.50"></text></g><g><title>do_syscall_64 (7 samples, 0.04%)</title><rect x="99.8862%" y="1173" width="0.0419%" height="15" fill="rgb(234,217,51)" fg:x="16680" fg:w="7"/><text x="100.1362%" y="1183.50"></text></g><g><title>__x64_sys_mmap (7 samples, 0.04%)</title><rect x="99.8862%" y="1157" width="0.0419%" height="15" fill="rgb(251,29,42)" fg:x="16680" fg:w="7"/><text x="100.1362%" y="1167.50"></text></g><g><title>ksys_mmap_pgoff (7 samples, 0.04%)</title><rect x="99.8862%" y="1141" width="0.0419%" height="15" fill="rgb(221,62,51)" fg:x="16680" fg:w="7"/><text x="100.1362%" y="1151.50"></text></g><g><title>vm_mmap_pgoff (7 samples, 0.04%)</title><rect x="99.8862%" y="1125" width="0.0419%" height="15" fill="rgb(240,192,43)" fg:x="16680" fg:w="7"/><text x="100.1362%" y="1135.50"></text></g><g><title>__clone3 (74 samples, 0.44%)</title><rect x="99.4910%" y="1333" width="0.4431%" height="15" fill="rgb(224,157,47)" fg:x="16614" fg:w="74"/><text x="99.7410%" y="1343.50"></text></g><g><title>start_thread (11 samples, 0.07%)</title><rect x="99.8683%" y="1317" width="0.0659%" height="15" fill="rgb(226,84,45)" fg:x="16677" fg:w="11"/><text x="100.1183%" y="1327.50"></text></g><g><title>data_encoding::dec (3 samples, 0.02%)</title><rect x="99.9581%" y="1333" width="0.0180%" height="15" fill="rgb(208,207,23)" fg:x="16692" fg:w="3"/><text x="100.2081%" y="1343.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="99.9760%" y="1333" width="0.0120%" height="15" fill="rgb(253,34,51)" fg:x="16695" fg:w="2"/><text x="100.2260%" y="1343.50"></text></g><g><title>do_syscall_64 (2 samples, 0.01%)</title><rect x="99.9760%" y="1317" width="0.0120%" height="15" fill="rgb(227,26,34)" fg:x="16695" fg:w="2"/><text x="100.2260%" y="1327.50"></text></g><g><title>all (16,699 samples, 100%)</title><rect x="0.0000%" y="1365" width="100.0000%" height="15" fill="rgb(245,75,19)" fg:x="0" fg:w="16699"/><text x="0.2500%" y="1375.50"></text></g><g><title>veilid-server (2,095 samples, 12.55%)</title><rect x="87.4543%" y="1349" width="12.5457%" height="15" fill="rgb(250,191,31)" fg:x="14604" fg:w="2095"/><text x="87.7043%" y="1359.50">veilid-server</text></g></svg></svg>